

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Apr 06 21:38:13 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 23/03/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4620 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataBANK0
    86   0024EA                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for __XTAL_FREQ
    90   0024EA  4800               	dw	18432
    91   0024EC  01E8               	dw	488
    92   000000                     _SPBRG	set	4015
    93   000000                     _SPBRGH	set	4016
    94   000000                     _TXREG	set	4013
    95   000000                     _PIR1bits	set	3998
    96   000000                     _RCREG	set	4014
    97   000000                     _OSCTUNEbits	set	3995
    98   000000                     _OSCCONbits	set	4051
    99   000000                     _PORTCbits	set	3970
   100   000000                     _LATBbits	set	3978
   101   000000                     _TRISBbits	set	3987
   102   000000                     _OSCTUNE	set	3995
   103   000000                     _PIE1bits	set	3997
   104   000000                     _IPR1bits	set	3999
   105   000000                     _RCSTAbits	set	4011
   106   000000                     _TXSTAbits	set	4012
   107   000000                     _CMCON	set	4020
   108   000000                     _OSCCON	set	4051
   109   000000                     _INTCONbits	set	4082
   110   000000                     _TRISCbits	set	3988
   111   000000                     _TRISAbits	set	3986
   112   000000                     _BAUDCONbits	set	4024
   113   000000                     _T1CON	set	4045
   114   000000                     _TMR1L	set	4046
   115   000000                     _TMR1H	set	4047
   116   000000                     _RCONbits	set	4048
   117                           
   118                           ; #config settings
   119                           
   120                           	psect	cinit
   121   002394                     __pcinit:
   122                           	callstack 0
   123   002394                     start_initialization:
   124                           	callstack 0
   125   002394                     __initialization:
   126                           	callstack 0
   127                           
   128                           ; Initialize objects allocated to BANK0 (4 bytes)
   129                           ; load TBLPTR registers with __pidataBANK0
   130   002394  0EEA               	movlw	low __pidataBANK0
   131   002396  6EF6               	movwf	tblptrl,c
   132   002398  0E24               	movlw	high __pidataBANK0
   133   00239A  6EF7               	movwf	tblptrh,c
   134   00239C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   135   00239E  6EF8               	movwf	tblptru,c
   136   0023A0  EE00  F0B2         	lfsr	0,__pdataBANK0
   137   0023A4  EE10 F004          	lfsr	1,4
   138   0023A8                     copy_data0:
   139   0023A8  0009               	tblrd		*+
   140   0023AA  CFF5 FFEE          	movff	tablat,postinc0
   141   0023AE  50E5               	movf	postdec1,w,c
   142   0023B0  50E1               	movf	fsr1l,w,c
   143   0023B2  E1FA               	bnz	copy_data0
   144                           
   145                           ; Clear objects allocated to BANK0 (12 bytes)
   146   0023B4  EE00  F0A6         	lfsr	0,__pbssBANK0
   147   0023B8  0E0C               	movlw	12
   148   0023BA                     clear_0:
   149   0023BA  6AEE               	clrf	postinc0,c
   150   0023BC  06E8               	decf	wreg,f,c
   151   0023BE  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to COMRAM (17 bytes)
   154   0023C0  EE00  F047         	lfsr	0,__pbssCOMRAM
   155   0023C4  0E11               	movlw	17
   156   0023C6                     clear_1:
   157   0023C6  6AEE               	clrf	postinc0,c
   158   0023C8  06E8               	decf	wreg,f,c
   159   0023CA  E1FD               	bnz	clear_1
   160   0023CC                     end_of_initialization:
   161                           	callstack 0
   162   0023CC                     __end_of__initialization:
   163                           	callstack 0
   164   0023CC  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   165   0023CE  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   166   0023D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167   0023D2  6EF8               	movwf	tblptru,c
   168   0023D4  0100               	movlb	0
   169   0023D6  EF40  F011         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMRAM
   172   000047                     __pbssCOMRAM:
   173                           	callstack 0
   174   000047                     malloc@lock:
   175                           	callstack 0
   176   000047                     	ds	4
   177   00004B                     _errno:
   178                           	callstack 0
   179   00004B                     	ds	2
   180   00004D                     _lnTxMessage:
   181                           	callstack 0
   182   00004D                     	ds	2
   183   00004F                     _lnRxMessage:
   184                           	callstack 0
   185   00004F                     	ds	2
   186   000051                     _lastRandomValue:
   187                           	callstack 0
   188   000051                     	ds	2
   189   000053                     _lnTxData:
   190                           	callstack 0
   191   000053                     	ds	1
   192   000054                     _lnTxCounter:
   193                           	callstack 0
   194   000054                     	ds	1
   195   000055                     _lnRxCounter:
   196                           	callstack 0
   197   000055                     	ds	1
   198   000056                     __:
   199                           	callstack 0
   200   000056                     	ds	1
   201   000057                     _LNCONbits:
   202                           	callstack 0
   203   000057                     	ds	1
   204                           
   205                           	psect	bssBANK0
   206   0000A6                     __pbssBANK0:
   207                           	callstack 0
   208   0000A6                     _brkp:
   209                           	callstack 0
   210   0000A6                     	ds	2
   211   0000A8                     malloc@end:
   212                           	callstack 0
   213   0000A8                     	ds	2
   214   0000AA                     malloc@cur:
   215                           	callstack 0
   216   0000AA                     	ds	2
   217   0000AC                     ___freelist:
   218                           	callstack 0
   219   0000AC                     	ds	2
   220   0000AE                     _lnRxQueue:
   221                           	callstack 0
   222   0000AE                     	ds	2
   223   0000B0                     _lnTxQueue:
   224                           	callstack 0
   225   0000B0                     	ds	2
   226                           
   227                           	psect	dataBANK0
   228   0000B2                     __pdataBANK0:
   229                           	callstack 0
   230   0000B2                     __XTAL_FREQ:
   231                           	callstack 0
   232   0000B2                     	ds	4
   233                           
   234                           	psect	cstackBANK0
   235   000080                     __pcstackBANK0:
   236                           	callstack 0
   237   000080                     ?___simple_search_fl:
   238                           	callstack 0
   239   000080                     ?___expand_heap:
   240                           	callstack 0
   241   000080                     ___expand_heap@pn:
   242                           	callstack 0
   243   000080                     ___simple_search_fl@n:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x0
   247   000080                     	ds	2
   248   000082                     ??___simple_search_fl:
   249   000082                     ??___expand_heap:
   250                           
   251                           ; 1 bytes @ 0x2
   252   000082                     	ds	2
   253   000084                     ___expand_heap@n:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x4
   257   000084                     	ds	2
   258   000086                     ___simple_search_fl@remaining_size:
   259                           	callstack 0
   260   000086                     ___expand_heap@new_brkp:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x6
   264   000086                     	ds	2
   265   000088                     ___simple_search_fl@best_last:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x8
   269   000088                     	ds	2
   270   00008A                     ___simple_search_fl@split:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xA
   274   00008A                     	ds	2
   275   00008C                     ___simple_search_fl@last:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xC
   279   00008C                     	ds	2
   280   00008E                     ___simple_search_fl@next:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xE
   284   00008E                     	ds	2
   285   000090                     ___simple_search_fl@c:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x10
   289   000090                     	ds	2
   290   000092                     ___simple_search_fl@best:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x12
   294   000092                     	ds	2
   295   000094                     ?_malloc:
   296                           	callstack 0
   297   000094                     malloc@n:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x14
   301   000094                     	ds	2
   302   000096                     ??_malloc:
   303                           
   304                           ; 1 bytes @ 0x16
   305   000096                     	ds	2
   306   000098                     malloc@sz:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x18
   310   000098                     	ds	2
   311   00009A                     malloc@m:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x1A
   315   00009A                     	ds	2
   316   00009C                     malloc@p:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x1C
   320   00009C                     	ds	2
   321   00009E                     malloc@new:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x1E
   325   00009E                     	ds	2
   326   0000A0                     lnInitQueue@q:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x20
   330   0000A0                     	ds	2
   331   0000A2                     lnInitQueue@size:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x22
   335   0000A2                     	ds	1
   336   0000A3                     ??_lnInitQueue:
   337                           
   338                           ; 1 bytes @ 0x23
   339   0000A3                     	ds	1
   340   0000A4                     ??_main:
   341                           
   342                           ; 1 bytes @ 0x24
   343   0000A4                     	ds	2
   344                           
   345                           	psect	cstackCOMRAM
   346   000001                     __pcstackCOMRAM:
   347                           	callstack 0
   348   000001                     ?_getRandomValue:
   349                           	callstack 0
   350   000001                     ?___awmod:
   351                           	callstack 0
   352   000001                     ?i1___simple_search_fl:
   353                           	callstack 0
   354   000001                     ?i1___expand_heap:
   355                           	callstack 0
   356   000001                     _isLnFree$991:
   357                           	callstack 0
   358   000001                     i1___expand_heap@pn:
   359                           	callstack 0
   360   000001                     getRandomValue@lfsr:
   361                           	callstack 0
   362   000001                     isQueueEmpty@q:
   363                           	callstack 0
   364   000001                     isQueueFull@q:
   365                           	callstack 0
   366   000001                     ___awmod@dividend:
   367                           	callstack 0
   368   000001                     free@ptr:
   369                           	callstack 0
   370   000001                     i1___simple_search_fl@n:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x0
   374   000001                     	ds	2
   375   000003                     ??_free:
   376   000003                     ??i1___simple_search_fl:
   377   000003                     ??i1___expand_heap:
   378   000003                     getRandomValue@lsb:
   379                           	callstack 0
   380   000003                     ___awmod@divisor:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384   000003                     	ds	2
   385   000005                     ??_startCmpDelay:
   386   000005                     ___awmod@counter:
   387                           	callstack 0
   388   000005                     i1___expand_heap@n:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x4
   392   000005                     	ds	1
   393   000006                     ___awmod@sign:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x5
   397   000006                     	ds	1
   398   000007                     startCmpDelay@delay:
   399                           	callstack 0
   400   000007                     deQueue@q:
   401                           	callstack 0
   402   000007                     free@cptr:
   403                           	callstack 0
   404   000007                     i1___simple_search_fl@remaining_size:
   405                           	callstack 0
   406   000007                     i1___expand_heap@new_brkp:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x6
   410   000007                     	ds	2
   411   000009                     ??_deQueue:
   412   000009                     free@c:
   413                           	callstack 0
   414   000009                     i1___simple_search_fl@best_last:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x8
   418   000009                     	ds	2
   419   00000B                     ??_txHandler:
   420   00000B                     i1___simple_search_fl@split:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xA
   424   00000B                     	ds	2
   425   00000D                     i1___simple_search_fl@last:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xC
   429   00000D                     	ds	2
   430   00000F                     ??_lnIsrTmr1:
   431   00000F                     i1___simple_search_fl@next:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0xE
   435   00000F                     	ds	2
   436   000011                     i1___simple_search_fl@c:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x10
   440   000011                     	ds	2
   441   000013                     i1___simple_search_fl@best:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x12
   445   000013                     	ds	2
   446   000015                     ?i1_malloc:
   447                           	callstack 0
   448   000015                     i1malloc@n:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x14
   452   000015                     	ds	2
   453   000017                     ??i1_malloc:
   454                           
   455                           ; 1 bytes @ 0x16
   456   000017                     	ds	2
   457   000019                     i1malloc@m:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x18
   461   000019                     	ds	2
   462   00001B                     i1malloc@sz:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x1A
   466   00001B                     	ds	2
   467   00001D                     i1malloc@p:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x1C
   471   00001D                     	ds	2
   472   00001F                     i1malloc@new:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1E
   476   00001F                     	ds	2
   477   000021                     ?_makeDeepCopy:
   478                           	callstack 0
   479   000021                     makeDeepCopy@lnMessageOrig:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x20
   483   000021                     	ds	2
   484   000023                     ??_makeDeepCopy:
   485                           
   486                           ; 1 bytes @ 0x22
   487   000023                     	ds	4
   488   000027                     makeDeepCopy@i:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x26
   492   000027                     	ds	1
   493   000028                     makeDeepCopy@lnMessageCopy:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x27
   497   000028                     	ds	2
   498   00002A                     enQueue@q:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x29
   502   00002A                     	ds	2
   503   00002C                     enQueue@value:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x2B
   507   00002C                     	ds	2
   508   00002E                     ??_enQueue:
   509                           
   510                           ; 1 bytes @ 0x2D
   511   00002E                     	ds	5
   512   000033                     rxChecksum@lnQueue:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x32
   516   000033                     	ds	2
   517   000035                     rxChecksum@lnMessage:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x34
   521   000035                     	ds	2
   522   000037                     rxChecksum@checksum:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x36
   526   000037                     	ds	1
   527   000038                     ??_rxChecksum:
   528                           
   529                           ; 1 bytes @ 0x37
   530   000038                     	ds	2
   531   00003A                     ??_rxHandler:
   532                           
   533                           ; 1 bytes @ 0x39
   534   00003A                     	ds	2
   535   00003C                     rxHandler@lnRxData:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x3B
   539   00003C                     	ds	1
   540   00003D                     lnIsrRc@lnRxData:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x3C
   544   00003D                     	ds	1
   545   00003E                     ??_lnIsr:
   546                           
   547                           ; 1 bytes @ 0x3D
   548   00003E                     	ds	9
   549                           
   550 ;;
   551 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   552 ;;
   553 ;; *************** function _main *****************
   554 ;; Defined at:
   555 ;;		line 13 in file "main.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;Total ram usage:        2 bytes
   574 ;; Hardware stack levels required when called: 11
   575 ;; This function calls:
   576 ;;		_lnInit
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text0
   583   002280                     __ptext0:
   584                           	callstack 0
   585   002280                     _main:
   586                           	callstack 20
   587   002280                     
   588                           ;main.c: 18:     OSCTUNE = 0x00;
   589   002280  0E00               	movlw	0
   590   002282  6E9B               	movwf	155,c	;volatile
   591                           
   592                           ;main.c: 19:     OSCCON = 0x70;
   593   002284  0E70               	movlw	112
   594   002286  6ED3               	movwf	211,c	;volatile
   595                           
   596                           ;main.c: 21:     while (OSCCONbits.IOFS == 0)
   597   002288  EF47  F011         	goto	l45
   598   00228C                     l46:
   599                           
   600                           ;main.c: 22:     {;main.c: 23:         __nop();
   601   00228C  0000               	nop	
   602   00228E                     l45:
   603                           
   604                           ;main.c: 21:     while (OSCCONbits.IOFS == 0)
   605   00228E  A4D3               	btfss	211,2,c	;volatile
   606   002290  EF4C  F011         	goto	u2251
   607   002294  EF4E  F011         	goto	u2250
   608   002298                     u2251:
   609   002298  EF46  F011         	goto	l46
   610   00229C                     u2250:
   611   00229C                     
   612                           ;main.c: 25:     OSCTUNEbits.PLLEN = 1;
   613   00229C  8C9B               	bsf	155,6,c	;volatile
   614                           
   615                           ;main.c: 28:     TRISBbits.TRISB1 = 0;
   616   00229E  9293               	bcf	147,1,c	;volatile
   617   0022A0                     
   618                           ;main.c: 30:     lnInit();
   619   0022A0  EC72  F011         	call	_lnInit	;wreg free
   620   0022A4                     l2753:
   621                           
   622                           ;main.c: 33:     {;main.c: 34:         LATBbits.LATB1 = 0;
   623   0022A4  928A               	bcf	138,1,c	;volatile
   624   0022A6                     
   625                           ;main.c: 35:         _delay((unsigned long)((500)*(_XTAL_FREQ/4000.0)));
   626   0022A6  0E15               	movlw	21
   627   0022A8  0100               	movlb	0	; () banked
   628   0022AA  6FA5               	movwf	(??_main+1)& (0+255),b
   629   0022AC  0E4B               	movlw	75
   630   0022AE  6FA4               	movwf	??_main& (0+255),b
   631   0022B0  0EBE               	movlw	190
   632   0022B2                     u2957:
   633   0022B2  2EE8               	decfsz	wreg,f,c
   634   0022B4  D7FE               	bra	u2957
   635   0022B6  2FA4               	decfsz	??_main& (0+255),f,b
   636   0022B8  D7FC               	bra	u2957
   637   0022BA  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   638   0022BC  D7FA               	bra	u2957
   639   0022BE  0000               	nop	
   640   0022C0                     
   641                           ;main.c: 36:         LATBbits.LATB1 = 1;
   642   0022C0  828A               	bsf	138,1,c	;volatile
   643   0022C2                     
   644                           ;main.c: 37:         _delay((unsigned long)((500)*(_XTAL_FREQ/4000.0)));
   645   0022C2  0E15               	movlw	21
   646   0022C4  0100               	movlb	0	; () banked
   647   0022C6  6FA5               	movwf	(??_main+1)& (0+255),b
   648   0022C8  0E4B               	movlw	75
   649   0022CA  6FA4               	movwf	??_main& (0+255),b
   650   0022CC  0EBE               	movlw	190
   651   0022CE                     u2967:
   652   0022CE  2EE8               	decfsz	wreg,f,c
   653   0022D0  D7FE               	bra	u2967
   654   0022D2  2FA4               	decfsz	??_main& (0+255),f,b
   655   0022D4  D7FC               	bra	u2967
   656   0022D6  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   657   0022D8  D7FA               	bra	u2967
   658   0022DA  0000               	nop	
   659   0022DC  EF52  F011         	goto	l2753
   660   0022E0  EF94  F000         	goto	start
   661   0022E4                     __end_of_main:
   662                           	callstack 0
   663                           
   664 ;; *************** function _lnInit *****************
   665 ;; Defined at:
   666 ;;		line 17 in file "ln.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 10
   687 ;; This function calls:
   688 ;;		_lnInitComparator
   689 ;;		_lnInitEusart
   690 ;;		_lnInitIsr
   691 ;;		_lnInitQueue
   692 ;;		_lnInitTmr1
   693 ;;		_malloc
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text1
   700   0022E4                     __ptext1:
   701                           	callstack 0
   702   0022E4                     _lnInit:
   703                           	callstack 20
   704   0022E4                     
   705                           ;ln.c: 21: {
   706   0022E4  0E00               	movlw	0
   707   0022E6  0100               	movlb	0	; () banked
   708   0022E8  6F95               	movwf	(malloc@n+1)& (0+255),b
   709   0022EA  0E03               	movlw	3
   710   0022EC  6F94               	movwf	malloc@n& (0+255),b
   711   0022EE  EC7B  F00B         	call	_malloc	;wreg free
   712   0022F2  C094  F0B0         	movff	?_malloc,_lnTxQueue
   713   0022F6  C095  F0B1         	movff	?_malloc+1,_lnTxQueue+1
   714   0022FA                     
   715                           ;ln.c: 22:     CMCON = 0b00000001;
   716   0022FA  C0B0  F0A0         	movff	_lnTxQueue,lnInitQueue@q
   717   0022FE  C0B1  F0A1         	movff	_lnTxQueue+1,lnInitQueue@q+1
   718   002302  0E80               	movlw	128
   719   002304  0100               	movlb	0	; () banked
   720   002306  6FA2               	movwf	lnInitQueue@size& (0+255),b
   721   002308  EC9E  F010         	call	_lnInitQueue	;wreg free
   722   00230C                     
   723                           ;ln.c: 23: 
   724   00230C  0E00               	movlw	0
   725   00230E  0100               	movlb	0	; () banked
   726   002310  6F95               	movwf	(malloc@n+1)& (0+255),b
   727   002312  0E03               	movlw	3
   728   002314  6F94               	movwf	malloc@n& (0+255),b
   729   002316  EC7B  F00B         	call	_malloc	;wreg free
   730   00231A  C094  F0AE         	movff	?_malloc,_lnRxQueue
   731   00231E  C095  F0AF         	movff	?_malloc+1,_lnRxQueue+1
   732                           
   733                           ;ln.c: 24: 
   734   002322  C0AE  F0A0         	movff	_lnRxQueue,lnInitQueue@q
   735   002326  C0AF  F0A1         	movff	_lnRxQueue+1,lnInitQueue@q+1
   736   00232A  0E80               	movlw	128
   737   00232C  0100               	movlb	0	; () banked
   738   00232E  6FA2               	movwf	lnInitQueue@size& (0+255),b
   739   002330  EC9E  F010         	call	_lnInitQueue	;wreg free
   740   002334                     
   741                           ;ln.c: 27:     return;
   742   002334  EC71  F012         	call	_lnInitComparator	;wreg free
   743   002338                     
   744                           ;ln.c: 28: }
   745   002338  EC43  F012         	call	_lnInitEusart	;wreg free
   746   00233C                     
   747                           ;ln.c: 29: 
   748   00233C  EC65  F012         	call	_lnInitTmr1	;wreg free
   749   002340                     
   750                           ;ln.c: 30: void lnInitEusart(void)
   751   002340  EC5D  F012         	call	_lnInitIsr	;wreg free
   752   002344  0012               	return		;funcret
   753   002346                     __end_of_lnInit:
   754                           	callstack 0
   755                           
   756 ;; *************** function _lnInitTmr1 *****************
   757 ;; Defined at:
   758 ;;		line 65 in file "ln.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 7
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_lnInit
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text2
   787   0024CA                     __ptext2:
   788                           	callstack 0
   789   0024CA                     _lnInitTmr1:
   790                           	callstack 22
   791   0024CA                     
   792                           ;ln.c: 67:     IPR1bits.TMR1IP = 0;
   793   0024CA  0E00               	movlw	0
   794   0024CC  6ECF               	movwf	207,c	;volatile
   795                           
   796                           ;ln.c: 68:     IPR1bits.RCIP = 0;
   797   0024CE  0E00               	movlw	0
   798   0024D0  6ECE               	movwf	206,c	;volatile
   799                           
   800                           ;ln.c: 69:     RCONbits.IPEN = 1;
   801   0024D2  0E31               	movlw	49
   802   0024D4  6ECD               	movwf	205,c	;volatile
   803   0024D6  0012               	return		;funcret
   804   0024D8                     __end_of_lnInitTmr1:
   805                           	callstack 0
   806                           
   807 ;; *************** function _lnInitQueue *****************
   808 ;; Defined at:
   809 ;;		line 15 in file "circular_queue.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  q               2   32[BANK0 ] PTR struct lnQueue
   812 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
   813 ;;  size            1   34[BANK0 ] unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   825 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;Total ram usage:        4 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 9
   832 ;; This function calls:
   833 ;;		_malloc
   834 ;; This function is called by:
   835 ;;		_lnInit
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text3
   840   00213C                     __ptext3:
   841                           	callstack 0
   842   00213C                     _lnInitQueue:
   843                           	callstack 20
   844   00213C                     
   845                           ;circular_queue.c: 15: void lnInitQueue(lnQueue_t* q, uint8_t size);circular_queue.c: 16
      +                          : {;circular_queue.c: 17:     q->size = size;
   846   00213C  0100               	movlb	0	; () banked
   847   00213E  EE20 F003          	lfsr	2,3
   848   002142  51A0               	movf	lnInitQueue@q& (0+255),w,b
   849   002144  26D9               	addwf	fsr2l,f,c
   850   002146  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   851   002148  22DA               	addwfc	fsr2h,f,c
   852   00214A  C0A2  FFDF         	movff	lnInitQueue@size,indf2
   853   00214E                     
   854                           ; BSR set to: 0
   855                           ;circular_queue.c: 18:     q->values = malloc(sizeof(struct lnMessage*) * q->size);
   856   00214E  EE20 F003          	lfsr	2,3
   857   002152  51A0               	movf	lnInitQueue@q& (0+255),w,b
   858   002154  26D9               	addwf	fsr2l,f,c
   859   002156  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   860   002158  22DA               	addwfc	fsr2h,f,c
   861   00215A  50DF               	movf	indf2,w,c
   862   00215C  6FA3               	movwf	??_lnInitQueue& (0+255),b
   863   00215E  51A3               	movf	??_lnInitQueue& (0+255),w,b
   864   002160  0D03               	mullw	3
   865   002162  CFF3 F094          	movff	prodl,malloc@n
   866   002166  CFF4 F095          	movff	prodh,malloc@n+1
   867   00216A  EC7B  F00B         	call	_malloc	;wreg free
   868   00216E  0100               	movlb	0	; () banked
   869   002170  EE20 F004          	lfsr	2,4
   870   002174  51A0               	movf	lnInitQueue@q& (0+255),w,b
   871   002176  26D9               	addwf	fsr2l,f,c
   872   002178  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   873   00217A  22DA               	addwfc	fsr2h,f,c
   874   00217C  C094  FFDE         	movff	?_malloc,postinc2
   875   002180  C095  FFDD         	movff	?_malloc+1,postdec2
   876   002184                     
   877                           ; BSR set to: 0
   878                           ;circular_queue.c: 19:     q->numEntries = 0;
   879   002184  EE20 F002          	lfsr	2,2
   880   002188  51A0               	movf	lnInitQueue@q& (0+255),w,b
   881   00218A  26D9               	addwf	fsr2l,f,c
   882   00218C  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   883   00218E  22DA               	addwfc	fsr2h,f,c
   884   002190  6ADF               	clrf	indf2,c
   885   002192                     
   886                           ; BSR set to: 0
   887                           ;circular_queue.c: 20:     q->head = 0;
   888   002192  C0A0  FFD9         	movff	lnInitQueue@q,fsr2l
   889   002196  C0A1  FFDA         	movff	lnInitQueue@q+1,fsr2h
   890   00219A  6ADF               	clrf	indf2,c
   891   00219C                     
   892                           ; BSR set to: 0
   893                           ;circular_queue.c: 21:     q->tail = 0;
   894   00219C  EE20 F001          	lfsr	2,1
   895   0021A0  51A0               	movf	lnInitQueue@q& (0+255),w,b
   896   0021A2  26D9               	addwf	fsr2l,f,c
   897   0021A4  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   898   0021A6  22DA               	addwfc	fsr2h,f,c
   899   0021A8  6ADF               	clrf	indf2,c
   900   0021AA                     
   901                           ; BSR set to: 0
   902   0021AA  0012               	return		;funcret
   903   0021AC                     __end_of_lnInitQueue:
   904                           	callstack 0
   905                           
   906 ;; *************** function _malloc *****************
   907 ;; Defined at:
   908 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_malloc.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  n               2   20[BANK0 ] unsigned int 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  sz              2   24[BANK0 ] PTR unsigned int 
   913 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
   914 ;;  new             2   30[BANK0 ] PTR unsigned char 
   915 ;;		 -> __heap_hi(0), NULL(0), 
   916 ;;  m               2   26[BANK0 ] unsigned int 
   917 ;;  p               2   28[BANK0 ] PTR void 
   918 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
   919 ;;  size            2    0        unsigned int 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  2   20[BANK0 ] PTR void 
   922 ;; Registers used:
   923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;Total ram usage:       12 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 8
   936 ;; This function calls:
   937 ;;		___expand_heap
   938 ;;		___simple_search_fl
   939 ;; This function is called by:
   940 ;;		_lnInit
   941 ;;		_lnInitQueue
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text4
   946   0016F6                     __ptext4:
   947                           	callstack 0
   948   0016F6                     _malloc:
   949                           	callstack 21
   950   0016F6  0100               	movlb	0	; () banked
   951   0016F8  5194               	movf	malloc@n& (0+255),w,b
   952   0016FA  1195               	iorwf	(malloc@n+1)& (0+255),w,b
   953   0016FC  A4D8               	btfss	status,2,c
   954   0016FE  EF83  F00B         	goto	u2001
   955   001702  EF85  F00B         	goto	u2000
   956   001706                     u2001:
   957   001706  EF87  F00B         	goto	l2471
   958   00170A                     u2000:
   959   00170A                     
   960                           ; BSR set to: 0
   961   00170A  4B94               	infsnz	malloc@n& (0+255),f,b
   962   00170C  2B95               	incf	(malloc@n+1)& (0+255),f,b
   963   00170E                     l2471:
   964                           
   965                           ; BSR set to: 0
   966   00170E  5195               	movf	(malloc@n+1)& (0+255),w,b
   967   001710  E107               	bnz	u2011
   968   001712  0E03               	movlw	3
   969   001714  5D94               	subwf	malloc@n& (0+255),w,b
   970   001716  B0D8               	btfsc	status,0,c
   971   001718  EF90  F00B         	goto	u2011
   972   00171C  EF92  F00B         	goto	u2010
   973   001720                     u2011:
   974   001720  EF98  F00B         	goto	l2475
   975   001724                     u2010:
   976   001724                     
   977                           ; BSR set to: 0
   978   001724  0E00               	movlw	0
   979   001726  6F95               	movwf	(malloc@n+1)& (0+255),b
   980   001728  0E03               	movlw	3
   981   00172A  6F94               	movwf	malloc@n& (0+255),b
   982   00172C  EFB1  F00B         	goto	l2483
   983   001730                     l2475:
   984                           
   985                           ; BSR set to: 0
   986   001730  1D94               	comf	malloc@n& (0+255),w,b
   987   001732  6F96               	movwf	??_malloc& (0+255),b
   988   001734  1D95               	comf	(malloc@n+1)& (0+255),w,b
   989   001736  6F97               	movwf	(??_malloc+1)& (0+255),b
   990   001738  5197               	movf	(??_malloc+1)& (0+255),w,b
   991   00173A  E107               	bnz	u2021
   992   00173C  0E02               	movlw	2
   993   00173E  5D96               	subwf	??_malloc& (0+255),w,b
   994   001740  B0D8               	btfsc	status,0,c
   995   001742  EFA5  F00B         	goto	u2021
   996   001746  EFA7  F00B         	goto	u2020
   997   00174A                     u2021:
   998   00174A  EFB1  F00B         	goto	l2483
   999   00174E                     u2020:
  1000   00174E                     
  1001                           ; BSR set to: 0
  1002   00174E  0E00               	movlw	0
  1003   001750  6E4C               	movwf	(_errno+1)^0,c
  1004   001752  0E0C               	movlw	12
  1005   001754  6E4B               	movwf	_errno^0,c
  1006   001756                     l2479:
  1007                           
  1008                           ; BSR set to: 0
  1009   001756  0E00               	movlw	0
  1010   001758  6F94               	movwf	?_malloc& (0+255),b
  1011   00175A  0E00               	movlw	0
  1012   00175C  6F95               	movwf	(?_malloc+1)& (0+255),b
  1013   00175E  EF2C  F00C         	goto	l1010
  1014   001762                     l2483:
  1015   001762                     
  1016                           ; BSR set to: 0
  1017   001762  C094  F080         	movff	malloc@n,___simple_search_fl@n
  1018   001766  C095  F081         	movff	malloc@n+1,___simple_search_fl@n+1
  1019   00176A  EC3E  F009         	call	___simple_search_fl	;wreg free
  1020   00176E  C080  F09C         	movff	?___simple_search_fl,malloc@p
  1021   001772  C081  F09D         	movff	?___simple_search_fl+1,malloc@p+1
  1022   001776  0100               	movlb	0	; () banked
  1023   001778  519C               	movf	malloc@p& (0+255),w,b
  1024   00177A  119D               	iorwf	(malloc@p+1)& (0+255),w,b
  1025   00177C  A4D8               	btfss	status,2,c
  1026   00177E  EFC3  F00B         	goto	u2031
  1027   001782  EFC5  F00B         	goto	u2030
  1028   001786                     u2031:
  1029   001786  EF28  F00C         	goto	l2515
  1030   00178A                     u2030:
  1031   00178A                     
  1032                           ; BSR set to: 0
  1033   00178A  51AA               	movf	malloc@cur& (0+255),w,b
  1034   00178C  5DA8               	subwf	malloc@end& (0+255),w,b
  1035   00178E  6F96               	movwf	??_malloc& (0+255),b
  1036   001790  51AB               	movf	(malloc@cur+1)& (0+255),w,b
  1037   001792  59A9               	subwfb	(malloc@end+1)& (0+255),w,b
  1038   001794  6F97               	movwf	(??_malloc+1)& (0+255),b
  1039   001796  5194               	movf	malloc@n& (0+255),w,b
  1040   001798  5D96               	subwf	??_malloc& (0+255),w,b
  1041   00179A  5195               	movf	(malloc@n+1)& (0+255),w,b
  1042   00179C  5997               	subwfb	(??_malloc+1)& (0+255),w,b
  1043   00179E  B0D8               	btfsc	status,0,c
  1044   0017A0  EFD4  F00B         	goto	u2041
  1045   0017A4  EFD6  F00B         	goto	u2040
  1046   0017A8                     u2041:
  1047   0017A8  EF06  F00C         	goto	l1012
  1048   0017AC                     u2040:
  1049   0017AC                     
  1050                           ; BSR set to: 0
  1051   0017AC  0E02               	movlw	2
  1052   0017AE  2594               	addwf	malloc@n& (0+255),w,b
  1053   0017B0  6F9A               	movwf	malloc@m& (0+255),b
  1054   0017B2  0E00               	movlw	0
  1055   0017B4  2195               	addwfc	(malloc@n+1)& (0+255),w,b
  1056   0017B6  6F9B               	movwf	(malloc@m+1)& (0+255),b
  1057   0017B8                     
  1058                           ; BSR set to: 0
  1059   0017B8  0E9A               	movlw	low malloc@m
  1060   0017BA  6F80               	movwf	___expand_heap@pn& (0+255),b
  1061   0017BC  EC6C  F00F         	call	___expand_heap	;wreg free
  1062   0017C0  C080  F09E         	movff	?___expand_heap,malloc@new
  1063   0017C4  C081  F09F         	movff	?___expand_heap+1,malloc@new+1
  1064   0017C8  0100               	movlb	0	; () banked
  1065   0017CA  519E               	movf	malloc@new& (0+255),w,b
  1066   0017CC  119F               	iorwf	(malloc@new+1)& (0+255),w,b
  1067   0017CE  A4D8               	btfss	status,2,c
  1068   0017D0  EFEC  F00B         	goto	u2051
  1069   0017D4  EFEE  F00B         	goto	u2050
  1070   0017D8                     u2051:
  1071   0017D8  EFF0  F00B         	goto	l2501
  1072   0017DC                     u2050:
  1073   0017DC  EFAB  F00B         	goto	l2479
  1074   0017E0                     l2501:
  1075                           
  1076                           ; BSR set to: 0
  1077   0017E0  51A8               	movf	malloc@end& (0+255),w,b
  1078   0017E2  199E               	xorwf	malloc@new& (0+255),w,b
  1079   0017E4  E109               	bnz	u2060
  1080   0017E6  51A9               	movf	(malloc@end+1)& (0+255),w,b
  1081   0017E8  199F               	xorwf	(malloc@new+1)& (0+255),w,b
  1082   0017EA  B4D8               	btfsc	status,2,c
  1083   0017EC  EFFA  F00B         	goto	u2061
  1084   0017F0  EFFC  F00B         	goto	u2060
  1085   0017F4                     u2061:
  1086   0017F4  EF00  F00C         	goto	l1014
  1087   0017F8                     u2060:
  1088   0017F8                     
  1089                           ; BSR set to: 0
  1090   0017F8  C09E  F0AA         	movff	malloc@new,malloc@cur
  1091   0017FC  C09F  F0AB         	movff	malloc@new+1,malloc@cur+1
  1092   001800                     l1014:
  1093                           
  1094                           ; BSR set to: 0
  1095   001800  519A               	movf	malloc@m& (0+255),w,b
  1096   001802  259E               	addwf	malloc@new& (0+255),w,b
  1097   001804  6FA8               	movwf	malloc@end& (0+255),b
  1098   001806  519B               	movf	(malloc@m+1)& (0+255),w,b
  1099   001808  219F               	addwfc	(malloc@new+1)& (0+255),w,b
  1100   00180A  6FA9               	movwf	(malloc@end+1)& (0+255),b
  1101   00180C                     l1012:
  1102                           
  1103                           ; BSR set to: 0
  1104   00180C  C0AA  F09C         	movff	malloc@cur,malloc@p
  1105   001810  C0AB  F09D         	movff	malloc@cur+1,malloc@p+1
  1106   001814                     
  1107                           ; BSR set to: 0
  1108   001814  C09C  F098         	movff	malloc@p,malloc@sz
  1109   001818  C09D  F099         	movff	malloc@p+1,malloc@sz+1
  1110   00181C                     
  1111                           ; BSR set to: 0
  1112   00181C  C098  FFD9         	movff	malloc@sz,fsr2l
  1113   001820  C099  FFDA         	movff	malloc@sz+1,fsr2h
  1114   001824  C094  FFDE         	movff	malloc@n,postinc2
  1115   001828  C095  FFDD         	movff	malloc@n+1,postdec2
  1116   00182C                     
  1117                           ; BSR set to: 0
  1118   00182C  0E02               	movlw	2
  1119   00182E  2798               	addwf	malloc@sz& (0+255),f,b
  1120   001830  0E00               	movlw	0
  1121   001832  2399               	addwfc	(malloc@sz+1)& (0+255),f,b
  1122   001834                     
  1123                           ; BSR set to: 0
  1124   001834  C098  F09C         	movff	malloc@sz,malloc@p
  1125   001838  C099  F09D         	movff	malloc@sz+1,malloc@p+1
  1126   00183C                     
  1127                           ; BSR set to: 0
  1128   00183C  0E02               	movlw	2
  1129   00183E  2594               	addwf	malloc@n& (0+255),w,b
  1130   001840  6F96               	movwf	??_malloc& (0+255),b
  1131   001842  0E00               	movlw	0
  1132   001844  2195               	addwfc	(malloc@n+1)& (0+255),w,b
  1133   001846  6F97               	movwf	(??_malloc+1)& (0+255),b
  1134   001848  5196               	movf	??_malloc& (0+255),w,b
  1135   00184A  27AA               	addwf	malloc@cur& (0+255),f,b
  1136   00184C  5197               	movf	(??_malloc+1)& (0+255),w,b
  1137   00184E  23AB               	addwfc	(malloc@cur+1)& (0+255),f,b
  1138   001850                     l2515:
  1139                           
  1140                           ; BSR set to: 0
  1141   001850  C09C  F094         	movff	malloc@p,?_malloc
  1142   001854  C09D  F095         	movff	malloc@p+1,?_malloc+1
  1143   001858                     l1010:
  1144                           
  1145                           ; BSR set to: 0
  1146   001858  0012               	return		;funcret
  1147   00185A                     __end_of_malloc:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function ___simple_search_fl *****************
  1151 ;; Defined at:
  1152 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  n               2    0[BANK0 ] unsigned int 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  split           2   10[BANK0 ] PTR struct chunk
  1157 ;;		 -> __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1158 ;;  remaining_si    2    6[BANK0 ] unsigned int 
  1159 ;;  next            2   14[BANK0 ] PTR struct chunk
  1160 ;;		 -> __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1161 ;;  best            2   18[BANK0 ] PTR struct chunk
  1162 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1163 ;;  c               2   16[BANK0 ] PTR struct chunk
  1164 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1165 ;;  last            2   12[BANK0 ] PTR struct chunk
  1166 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1167 ;;  best_last       2    8[BANK0 ] PTR struct chunk
  1168 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  2    0[BANK0 ] PTR void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;Total ram usage:       20 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 7
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_malloc
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text5
  1193   00127C                     __ptext5:
  1194                           	callstack 0
  1195   00127C                     ___simple_search_fl:
  1196                           	callstack 21
  1197   00127C  0E00               	movlw	0
  1198   00127E  0100               	movlb	0	; () banked
  1199   001280  6F92               	movwf	___simple_search_fl@best& (0+255),b
  1200   001282  0E00               	movlw	0
  1201   001284  6F93               	movwf	(___simple_search_fl@best+1)& (0+255),b
  1202   001286  0E00               	movlw	0
  1203   001288  6F88               	movwf	___simple_search_fl@best_last& (0+255),b
  1204   00128A  0E00               	movlw	0
  1205   00128C  6F89               	movwf	(___simple_search_fl@best_last+1)& (0+255),b
  1206   00128E  0E00               	movlw	0
  1207   001290  6F8C               	movwf	___simple_search_fl@last& (0+255),b
  1208   001292  0E00               	movlw	0
  1209   001294  6F8D               	movwf	(___simple_search_fl@last+1)& (0+255),b
  1210   001296  51AC               	movf	___freelist& (0+255),w,b
  1211   001298  11AD               	iorwf	(___freelist+1)& (0+255),w,b
  1212   00129A  A4D8               	btfss	status,2,c
  1213   00129C  EF52  F009         	goto	u1861
  1214   0012A0  EF54  F009         	goto	u1860
  1215   0012A4                     u1861:
  1216   0012A4  EF5A  F009         	goto	l2387
  1217   0012A8                     u1860:
  1218   0012A8                     l2383:
  1219                           
  1220                           ; BSR set to: 0
  1221   0012A8  0E00               	movlw	0
  1222   0012AA  6F80               	movwf	?___simple_search_fl& (0+255),b
  1223   0012AC  0E00               	movlw	0
  1224   0012AE  6F81               	movwf	(?___simple_search_fl+1)& (0+255),b
  1225   0012B0  EF79  F00A         	goto	l969
  1226   0012B4                     l2387:
  1227                           
  1228                           ; BSR set to: 0
  1229   0012B4  C0AC  F090         	movff	___freelist,___simple_search_fl@c
  1230   0012B8  C0AD  F091         	movff	___freelist+1,___simple_search_fl@c+1
  1231   0012BC  EFE0  F009         	goto	l2413
  1232   0012C0                     l2389:
  1233                           
  1234                           ; BSR set to: 0
  1235   0012C0  C090  FFD9         	movff	___simple_search_fl@c,fsr2l
  1236   0012C4  C091  FFDA         	movff	___simple_search_fl@c+1,fsr2h
  1237   0012C8  5180               	movf	___simple_search_fl@n& (0+255),w,b
  1238   0012CA  18DE               	xorwf	postinc2,w,c
  1239   0012CC  E107               	bnz	u1871
  1240   0012CE  5181               	movf	(___simple_search_fl@n+1)& (0+255),w,b
  1241   0012D0  18DE               	xorwf	postinc2,w,c
  1242   0012D2  A4D8               	btfss	status,2,c
  1243   0012D4  EF6E  F009         	goto	u1871
  1244   0012D8  EF70  F009         	goto	u1870
  1245   0012DC                     u1871:
  1246   0012DC  EF9D  F009         	goto	l2401
  1247   0012E0                     u1870:
  1248   0012E0                     
  1249                           ; BSR set to: 0
  1250   0012E0  518C               	movf	___simple_search_fl@last& (0+255),w,b
  1251   0012E2  118D               	iorwf	(___simple_search_fl@last+1)& (0+255),w,b
  1252   0012E4  B4D8               	btfsc	status,2,c
  1253   0012E6  EF77  F009         	goto	u1881
  1254   0012EA  EF79  F009         	goto	u1880
  1255   0012EE                     u1881:
  1256   0012EE  EF8B  F009         	goto	l2395
  1257   0012F2                     u1880:
  1258   0012F2                     
  1259                           ; BSR set to: 0
  1260   0012F2  EE20 F002          	lfsr	2,2
  1261   0012F6  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1262   0012F8  26D9               	addwf	fsr2l,f,c
  1263   0012FA  5191               	movf	(___simple_search_fl@c+1)& (0+255),w,b
  1264   0012FC  22DA               	addwfc	fsr2h,f,c
  1265   0012FE  EE10 F002          	lfsr	1,2
  1266   001302  518C               	movf	___simple_search_fl@last& (0+255),w,b
  1267   001304  26E1               	addwf	fsr1l,f,c
  1268   001306  518D               	movf	(___simple_search_fl@last+1)& (0+255),w,b
  1269   001308  22E2               	addwfc	fsr1h,f,c
  1270   00130A  CFDE FFE6          	movff	postinc2,postinc1
  1271   00130E  CFDD FFE5          	movff	postdec2,postdec1
  1272   001312  EF95  F009         	goto	l2397
  1273   001316                     l2395:
  1274                           
  1275                           ; BSR set to: 0
  1276   001316  EE20 F002          	lfsr	2,2
  1277   00131A  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1278   00131C  26D9               	addwf	fsr2l,f,c
  1279   00131E  5191               	movf	(___simple_search_fl@c+1)& (0+255),w,b
  1280   001320  22DA               	addwfc	fsr2h,f,c
  1281   001322  CFDE F0AC          	movff	postinc2,___freelist
  1282   001326  CFDD F0AD          	movff	postdec2,___freelist+1
  1283   00132A                     l2397:
  1284                           
  1285                           ; BSR set to: 0
  1286   00132A  0E02               	movlw	2
  1287   00132C  2590               	addwf	___simple_search_fl@c& (0+255),w,b
  1288   00132E  6F80               	movwf	?___simple_search_fl& (0+255),b
  1289   001330  0E00               	movlw	0
  1290   001332  2191               	addwfc	(___simple_search_fl@c+1)& (0+255),w,b
  1291   001334  6F81               	movwf	(?___simple_search_fl+1)& (0+255),b
  1292   001336  EF79  F00A         	goto	l969
  1293   00133A                     l2401:
  1294                           
  1295                           ; BSR set to: 0
  1296   00133A  C090  FFD9         	movff	___simple_search_fl@c,fsr2l
  1297   00133E  C091  FFDA         	movff	___simple_search_fl@c+1,fsr2h
  1298   001342  50DE               	movf	postinc2,w,c
  1299   001344  5D80               	subwf	___simple_search_fl@n& (0+255),w,b
  1300   001346  50DE               	movf	postinc2,w,c
  1301   001348  5981               	subwfb	(___simple_search_fl@n+1)& (0+255),w,b
  1302   00134A  B0D8               	btfsc	status,0,c
  1303   00134C  EFAA  F009         	goto	u1891
  1304   001350  EFAC  F009         	goto	u1890
  1305   001354                     u1891:
  1306   001354  EFD2  F009         	goto	l977
  1307   001358                     u1890:
  1308   001358                     
  1309                           ; BSR set to: 0
  1310   001358  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1311   00135A  1193               	iorwf	(___simple_search_fl@best+1)& (0+255),w,b
  1312   00135C  B4D8               	btfsc	status,2,c
  1313   00135E  EFB3  F009         	goto	u1901
  1314   001362  EFB5  F009         	goto	u1900
  1315   001366                     u1901:
  1316   001366  EFCA  F009         	goto	l2409
  1317   00136A                     u1900:
  1318   00136A                     
  1319                           ; BSR set to: 0
  1320   00136A  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1321   00136E  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1322   001372  C090  FFE1         	movff	___simple_search_fl@c,fsr1l
  1323   001376  C091  FFE2         	movff	___simple_search_fl@c+1,fsr1h
  1324   00137A  50DE               	movf	postinc2,w,c
  1325   00137C  5CE6               	subwf	postinc1,w,c
  1326   00137E  50DE               	movf	postinc2,w,c
  1327   001380  58E6               	subwfb	postinc1,w,c
  1328   001382  A0D8               	btfss	status,0,c
  1329   001384  EFC6  F009         	goto	u1911
  1330   001388  EFC8  F009         	goto	u1910
  1331   00138C                     u1911:
  1332   00138C  EFCA  F009         	goto	l2409
  1333   001390                     u1910:
  1334   001390  EFD2  F009         	goto	l977
  1335   001394                     l2409:
  1336                           
  1337                           ; BSR set to: 0
  1338   001394  C090  F092         	movff	___simple_search_fl@c,___simple_search_fl@best
  1339   001398  C091  F093         	movff	___simple_search_fl@c+1,___simple_search_fl@best+1
  1340   00139C  C08C  F088         	movff	___simple_search_fl@last,___simple_search_fl@best_last
  1341   0013A0  C08D  F089         	movff	___simple_search_fl@last+1,___simple_search_fl@best_last+1
  1342   0013A4                     l977:
  1343                           
  1344                           ; BSR set to: 0
  1345   0013A4  C090  F08C         	movff	___simple_search_fl@c,___simple_search_fl@last
  1346   0013A8  C091  F08D         	movff	___simple_search_fl@c+1,___simple_search_fl@last+1
  1347   0013AC                     
  1348                           ; BSR set to: 0
  1349   0013AC  EE20 F002          	lfsr	2,2
  1350   0013B0  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1351   0013B2  26D9               	addwf	fsr2l,f,c
  1352   0013B4  5191               	movf	(___simple_search_fl@c+1)& (0+255),w,b
  1353   0013B6  22DA               	addwfc	fsr2h,f,c
  1354   0013B8  CFDE F090          	movff	postinc2,___simple_search_fl@c
  1355   0013BC  CFDD F091          	movff	postdec2,___simple_search_fl@c+1
  1356   0013C0                     l2413:
  1357                           
  1358                           ; BSR set to: 0
  1359   0013C0  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1360   0013C2  1191               	iorwf	(___simple_search_fl@c+1)& (0+255),w,b
  1361   0013C4  A4D8               	btfss	status,2,c
  1362   0013C6  EFE7  F009         	goto	u1921
  1363   0013CA  EFE9  F009         	goto	u1920
  1364   0013CE                     u1921:
  1365   0013CE  EF60  F009         	goto	l2389
  1366   0013D2                     u1920:
  1367   0013D2                     
  1368                           ; BSR set to: 0
  1369   0013D2  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1370   0013D4  1193               	iorwf	(___simple_search_fl@best+1)& (0+255),w,b
  1371   0013D6  B4D8               	btfsc	status,2,c
  1372   0013D8  EFF0  F009         	goto	u1931
  1373   0013DC  EFF2  F009         	goto	u1930
  1374   0013E0                     u1931:
  1375   0013E0  EF54  F009         	goto	l2383
  1376   0013E4                     u1930:
  1377   0013E4                     
  1378                           ; BSR set to: 0
  1379   0013E4  EE20 F002          	lfsr	2,2
  1380   0013E8  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1381   0013EA  26D9               	addwf	fsr2l,f,c
  1382   0013EC  5193               	movf	(___simple_search_fl@best+1)& (0+255),w,b
  1383   0013EE  22DA               	addwfc	fsr2h,f,c
  1384   0013F0  CFDE F08E          	movff	postinc2,___simple_search_fl@next
  1385   0013F4  CFDD F08F          	movff	postdec2,___simple_search_fl@next+1
  1386   0013F8  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1387   0013FC  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1388   001400  CFDE F082          	movff	postinc2,??___simple_search_fl
  1389   001404  CFDD F083          	movff	postdec2,??___simple_search_fl+1
  1390   001408  5180               	movf	___simple_search_fl@n& (0+255),w,b
  1391   00140A  5F82               	subwf	??___simple_search_fl& (0+255),f,b
  1392   00140C  5181               	movf	(___simple_search_fl@n+1)& (0+255),w,b
  1393   00140E  5B83               	subwfb	(??___simple_search_fl+1)& (0+255),f,b
  1394   001410  5183               	movf	(??___simple_search_fl+1)& (0+255),w,b
  1395   001412  E109               	bnz	u1940
  1396   001414  0E05               	movlw	5
  1397   001416  5D82               	subwf	??___simple_search_fl& (0+255),w,b
  1398   001418  A0D8               	btfss	status,0,c
  1399   00141A  EF11  F00A         	goto	u1941
  1400   00141E  EF13  F00A         	goto	u1940
  1401   001422                     u1941:
  1402   001422  EF57  F00A         	goto	l980
  1403   001426                     u1940:
  1404   001426                     
  1405                           ; BSR set to: 0
  1406   001426  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1407   00142A  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1408   00142E  CFDE F082          	movff	postinc2,??___simple_search_fl
  1409   001432  CFDD F083          	movff	postdec2,??___simple_search_fl+1
  1410   001436  5180               	movf	___simple_search_fl@n& (0+255),w,b
  1411   001438  5F82               	subwf	??___simple_search_fl& (0+255),f,b
  1412   00143A  5181               	movf	(___simple_search_fl@n+1)& (0+255),w,b
  1413   00143C  5B83               	subwfb	(??___simple_search_fl+1)& (0+255),f,b
  1414   00143E  0EFE               	movlw	254
  1415   001440  2582               	addwf	??___simple_search_fl& (0+255),w,b
  1416   001442  6F86               	movwf	___simple_search_fl@remaining_size& (0+255),b
  1417   001444  0EFF               	movlw	255
  1418   001446  2183               	addwfc	(??___simple_search_fl+1)& (0+255),w,b
  1419   001448  6F87               	movwf	(___simple_search_fl@remaining_size+1)& (0+255),b
  1420   00144A                     
  1421                           ; BSR set to: 0
  1422   00144A  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1423   00144E  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1424   001452  C080  FFDE         	movff	___simple_search_fl@n,postinc2
  1425   001456  C081  FFDD         	movff	___simple_search_fl@n+1,postdec2
  1426   00145A                     
  1427                           ; BSR set to: 0
  1428   00145A  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1429   00145E  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1430   001462  CFDE F082          	movff	postinc2,??___simple_search_fl
  1431   001466  CFDD F083          	movff	postdec2,??___simple_search_fl+1
  1432   00146A  5182               	movf	??___simple_search_fl& (0+255),w,b
  1433   00146C  2592               	addwf	___simple_search_fl@best& (0+255),w,b
  1434   00146E  6F84               	movwf	(??___simple_search_fl+2)& (0+255),b
  1435   001470  5183               	movf	(??___simple_search_fl+1)& (0+255),w,b
  1436   001472  2193               	addwfc	(___simple_search_fl@best+1)& (0+255),w,b
  1437   001474  6F85               	movwf	(??___simple_search_fl+3)& (0+255),b
  1438   001476  0E02               	movlw	2
  1439   001478  2584               	addwf	(??___simple_search_fl+2)& (0+255),w,b
  1440   00147A  6F8A               	movwf	___simple_search_fl@split& (0+255),b
  1441   00147C  0E00               	movlw	0
  1442   00147E  2185               	addwfc	(??___simple_search_fl+3)& (0+255),w,b
  1443   001480  6F8B               	movwf	(___simple_search_fl@split+1)& (0+255),b
  1444   001482  C08A  FFD9         	movff	___simple_search_fl@split,fsr2l
  1445   001486  C08B  FFDA         	movff	___simple_search_fl@split+1,fsr2h
  1446   00148A  C086  FFDE         	movff	___simple_search_fl@remaining_size,postinc2
  1447   00148E  C087  FFDD         	movff	___simple_search_fl@remaining_size+1,postdec2
  1448   001492                     
  1449                           ; BSR set to: 0
  1450   001492  EE20 F002          	lfsr	2,2
  1451   001496  518A               	movf	___simple_search_fl@split& (0+255),w,b
  1452   001498  26D9               	addwf	fsr2l,f,c
  1453   00149A  518B               	movf	(___simple_search_fl@split+1)& (0+255),w,b
  1454   00149C  22DA               	addwfc	fsr2h,f,c
  1455   00149E  C08E  FFDE         	movff	___simple_search_fl@next,postinc2
  1456   0014A2  C08F  FFDD         	movff	___simple_search_fl@next+1,postdec2
  1457   0014A6  C08A  F08E         	movff	___simple_search_fl@split,___simple_search_fl@next
  1458   0014AA  C08B  F08F         	movff	___simple_search_fl@split+1,___simple_search_fl@next+1
  1459   0014AE                     l980:
  1460                           
  1461                           ; BSR set to: 0
  1462   0014AE  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1463   0014B0  19AC               	xorwf	___freelist& (0+255),w,b
  1464   0014B2  E107               	bnz	u1951
  1465   0014B4  5193               	movf	(___simple_search_fl@best+1)& (0+255),w,b
  1466   0014B6  19AD               	xorwf	(___freelist+1)& (0+255),w,b
  1467   0014B8  A4D8               	btfss	status,2,c
  1468   0014BA  EF61  F00A         	goto	u1951
  1469   0014BE  EF63  F00A         	goto	u1950
  1470   0014C2                     u1951:
  1471   0014C2  EF69  F00A         	goto	l2429
  1472   0014C6                     u1950:
  1473   0014C6                     
  1474                           ; BSR set to: 0
  1475   0014C6  C08E  F0AC         	movff	___simple_search_fl@next,___freelist
  1476   0014CA  C08F  F0AD         	movff	___simple_search_fl@next+1,___freelist+1
  1477   0014CE  EF73  F00A         	goto	l2431
  1478   0014D2                     l2429:
  1479                           
  1480                           ; BSR set to: 0
  1481   0014D2  EE20 F002          	lfsr	2,2
  1482   0014D6  5188               	movf	___simple_search_fl@best_last& (0+255),w,b
  1483   0014D8  26D9               	addwf	fsr2l,f,c
  1484   0014DA  5189               	movf	(___simple_search_fl@best_last+1)& (0+255),w,b
  1485   0014DC  22DA               	addwfc	fsr2h,f,c
  1486   0014DE  C08E  FFDE         	movff	___simple_search_fl@next,postinc2
  1487   0014E2  C08F  FFDD         	movff	___simple_search_fl@next+1,postdec2
  1488   0014E6                     l2431:
  1489                           
  1490                           ; BSR set to: 0
  1491   0014E6  0E02               	movlw	2
  1492   0014E8  2592               	addwf	___simple_search_fl@best& (0+255),w,b
  1493   0014EA  6F80               	movwf	?___simple_search_fl& (0+255),b
  1494   0014EC  0E00               	movlw	0
  1495   0014EE  2193               	addwfc	(___simple_search_fl@best+1)& (0+255),w,b
  1496   0014F0  6F81               	movwf	(?___simple_search_fl+1)& (0+255),b
  1497   0014F2                     l969:
  1498                           
  1499                           ; BSR set to: 0
  1500   0014F2  0012               	return		;funcret
  1501   0014F4                     __end_of___simple_search_fl:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function ___expand_heap *****************
  1505 ;; Defined at:
  1506 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\expand_heap.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  pn              1    0[BANK0 ] PTR unsigned int 
  1509 ;;		 -> malloc@m(2), 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  new_brkp        2    6[BANK0 ] PTR unsigned char 
  1512 ;;		 -> __heap_hi(0), NULL(0), 
  1513 ;;  n               2    4[BANK0 ] unsigned int 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  2    0[BANK0 ] PTR void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1523 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;Total ram usage:        8 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 7
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_malloc
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text6
  1538   001ED8                     __ptext6:
  1539                           	callstack 0
  1540   001ED8                     ___expand_heap:
  1541                           	callstack 21
  1542   001ED8  0100               	movlb	0	; () banked
  1543   001EDA  5180               	movf	___expand_heap@pn& (0+255),w,b
  1544   001EDC  6ED9               	movwf	fsr2l,c
  1545   001EDE  6ADA               	clrf	fsr2h,c
  1546   001EE0  CFDE F084          	movff	postinc2,___expand_heap@n
  1547   001EE4  CFDD F085          	movff	postdec2,___expand_heap@n+1
  1548   001EE8                     
  1549                           ; BSR set to: 0
  1550   001EE8  51A6               	movf	_brkp& (0+255),w,b
  1551   001EEA  11A7               	iorwf	(_brkp+1)& (0+255),w,b
  1552   001EEC  A4D8               	btfss	status,2,c
  1553   001EEE  EF7B  F00F         	goto	u1961
  1554   001EF2  EF7D  F00F         	goto	u1960
  1555   001EF6                     u1961:
  1556   001EF6  EF81  F00F         	goto	l1028
  1557   001EFA                     u1960:
  1558   001EFA                     
  1559                           ; BSR set to: 0
  1560   001EFA  0E80               	movlw	low ___heap_hi
  1561   001EFC  6FA6               	movwf	_brkp& (0+255),b
  1562   001EFE  0E0F               	movlw	high ___heap_hi
  1563   001F00  6FA7               	movwf	(_brkp+1)& (0+255),b
  1564   001F02                     l1028:
  1565                           
  1566                           ; BSR set to: 0
  1567   001F02  5185               	movf	(___expand_heap@n+1)& (0+255),w,b
  1568   001F04  E107               	bnz	u1971
  1569   001F06  0E05               	movlw	5
  1570   001F08  5D84               	subwf	___expand_heap@n& (0+255),w,b
  1571   001F0A  B0D8               	btfsc	status,0,c
  1572   001F0C  EF8A  F00F         	goto	u1971
  1573   001F10  EF8C  F00F         	goto	u1970
  1574   001F14                     u1971:
  1575   001F14  EF90  F00F         	goto	l2447
  1576   001F18                     u1970:
  1577   001F18                     
  1578                           ; BSR set to: 0
  1579   001F18  0E00               	movlw	0
  1580   001F1A  6F85               	movwf	(___expand_heap@n+1)& (0+255),b
  1581   001F1C  0E05               	movlw	5
  1582   001F1E  6F84               	movwf	___expand_heap@n& (0+255),b
  1583   001F20                     l2447:
  1584                           
  1585                           ; BSR set to: 0
  1586   001F20  5184               	movf	___expand_heap@n& (0+255),w,b
  1587   001F22  5DA6               	subwf	_brkp& (0+255),w,b
  1588   001F24  6F86               	movwf	___expand_heap@new_brkp& (0+255),b
  1589   001F26  5185               	movf	(___expand_heap@n+1)& (0+255),w,b
  1590   001F28  59A7               	subwfb	(_brkp+1)& (0+255),w,b
  1591   001F2A  6F87               	movwf	(___expand_heap@new_brkp+1)& (0+255),b
  1592   001F2C                     
  1593                           ; BSR set to: 0
  1594   001F2C  0EB6               	movlw	low ___heap_lo
  1595   001F2E  6F82               	movwf	??___expand_heap& (0+255),b
  1596   001F30  0E00               	movlw	high ___heap_lo
  1597   001F32  6F83               	movwf	(??___expand_heap+1)& (0+255),b
  1598   001F34  5182               	movf	??___expand_heap& (0+255),w,b
  1599   001F36  5D86               	subwf	___expand_heap@new_brkp& (0+255),w,b
  1600   001F38  5183               	movf	(??___expand_heap+1)& (0+255),w,b
  1601   001F3A  5987               	subwfb	(___expand_heap@new_brkp+1)& (0+255),w,b
  1602   001F3C  A0D8               	btfss	status,0,c
  1603   001F3E  EFA3  F00F         	goto	u1981
  1604   001F42  EFA5  F00F         	goto	u1980
  1605   001F46                     u1981:
  1606   001F46  EFB0  F00F         	goto	l2453
  1607   001F4A                     u1980:
  1608   001F4A                     
  1609                           ; BSR set to: 0
  1610   001F4A  51A6               	movf	_brkp& (0+255),w,b
  1611   001F4C  5D86               	subwf	___expand_heap@new_brkp& (0+255),w,b
  1612   001F4E  51A7               	movf	(_brkp+1)& (0+255),w,b
  1613   001F50  5987               	subwfb	(___expand_heap@new_brkp+1)& (0+255),w,b
  1614   001F52  A0D8               	btfss	status,0,c
  1615   001F54  EFAE  F00F         	goto	u1991
  1616   001F58  EFB0  F00F         	goto	u1990
  1617   001F5C                     u1991:
  1618   001F5C  EFBA  F00F         	goto	l2459
  1619   001F60                     u1990:
  1620   001F60                     l2453:
  1621                           
  1622                           ; BSR set to: 0
  1623   001F60  0E00               	movlw	0
  1624   001F62  6E4C               	movwf	(_errno+1)^0,c
  1625   001F64  0E0C               	movlw	12
  1626   001F66  6E4B               	movwf	_errno^0,c
  1627   001F68                     
  1628                           ; BSR set to: 0
  1629   001F68  0E00               	movlw	0
  1630   001F6A  6F80               	movwf	?___expand_heap& (0+255),b
  1631   001F6C  0E00               	movlw	0
  1632   001F6E  6F81               	movwf	(?___expand_heap+1)& (0+255),b
  1633   001F70  EFC2  F00F         	goto	l1033
  1634   001F74                     l2459:
  1635                           
  1636                           ; BSR set to: 0
  1637   001F74  C086  F0A6         	movff	___expand_heap@new_brkp,_brkp
  1638   001F78  C087  F0A7         	movff	___expand_heap@new_brkp+1,_brkp+1
  1639   001F7C  C0A6  F080         	movff	_brkp,?___expand_heap
  1640   001F80  C0A7  F081         	movff	_brkp+1,?___expand_heap+1
  1641   001F84                     l1033:
  1642                           
  1643                           ; BSR set to: 0
  1644   001F84  0012               	return		;funcret
  1645   001F86                     __end_of___expand_heap:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _lnInitIsr *****************
  1649 ;; Defined at:
  1650 ;;		line 79 in file "ln.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		None
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 7
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_lnInit
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text7
  1679   0024BA                     __ptext7:
  1680                           	callstack 0
  1681   0024BA                     _lnInitIsr:
  1682                           	callstack 22
  1683   0024BA  909F               	bcf	159,0,c	;volatile
  1684   0024BC  9A9F               	bcf	159,5,c	;volatile
  1685   0024BE  8ED0               	bsf	208,7,c	;volatile
  1686   0024C0  8EF2               	bsf	242,7,c	;volatile
  1687   0024C2  8CF2               	bsf	242,6,c	;volatile
  1688   0024C4  8A9D               	bsf	157,5,c	;volatile
  1689   0024C6  809D               	bsf	157,0,c	;volatile
  1690   0024C8  0012               	return		;funcret
  1691   0024CA                     __end_of_lnInitIsr:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _lnInitEusart *****************
  1695 ;; Defined at:
  1696 ;;		line 44 in file "ln.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 8
  1717 ;; This function calls:
  1718 ;;		_setBRG
  1719 ;; This function is called by:
  1720 ;;		_lnInit
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text8
  1725   002486                     __ptext8:
  1726                           	callstack 0
  1727   002486                     _lnInitEusart:
  1728                           	callstack 21
  1729   002486                     
  1730                           ;ln.c: 47:     RCSTAbits.SPEN = 1;
  1731   002486  9C94               	bcf	148,6,c	;volatile
  1732                           
  1733                           ;ln.c: 48:     return;
  1734   002488  8E94               	bsf	148,7,c	;volatile
  1735   00248A                     
  1736                           ;ln.c: 51: void lnInitTmr1(void)
  1737   00248A  EC6C  F012         	call	_setBRG	;wreg free
  1738   00248E                     
  1739                           ;ln.c: 52: {
  1740   00248E  86B8               	bsf	184,3,c	;volatile
  1741   002490                     
  1742                           ;ln.c: 53:     TMR1H = 0x00;
  1743   002490  88B8               	bsf	184,4,c	;volatile
  1744   002492                     
  1745                           ;ln.c: 54:     TMR1L = 0x00;
  1746   002492  98AC               	bcf	172,4,c	;volatile
  1747   002494                     
  1748                           ;ln.c: 55:     T1CON = 0b00110001;
  1749   002494  94AC               	bcf	172,2,c	;volatile
  1750   002496                     
  1751                           ;ln.c: 56: 
  1752   002496  8AAC               	bsf	172,5,c	;volatile
  1753   002498                     
  1754                           ;ln.c: 57: 
  1755   002498  98AB               	bcf	171,4,c	;volatile
  1756   00249A                     
  1757                           ;ln.c: 58: 
  1758   00249A  88AB               	bsf	171,4,c	;volatile
  1759   00249C                     
  1760                           ;ln.c: 59: 
  1761   00249C  CFAE F056          	movff	4014,__	;volatile
  1762   0024A0                     
  1763                           ;ln.c: 61: 
  1764   0024A0  8EAB               	bsf	171,7,c	;volatile
  1765   0024A2  0012               	return		;funcret
  1766   0024A4                     __end_of_lnInitEusart:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _setBRG *****************
  1770 ;; Defined at:
  1771 ;;		line 491 in file "ln.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 7
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_lnInitEusart
  1796 ;;		_syncBRG
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text9
  1801   0024D8                     __ptext9:
  1802                           	callstack 0
  1803   0024D8                     _setBRG:
  1804                           	callstack 21
  1805   0024D8                     
  1806                           ;ln.c: 493:     SPBRGH = 0;
  1807   0024D8  0E00               	movlw	0
  1808   0024DA  6EB0               	movwf	176,c	;volatile
  1809                           
  1810                           ;ln.c: 494:     SPBRG = 119u;
  1811   0024DC  0E77               	movlw	119
  1812   0024DE  6EAF               	movwf	175,c	;volatile
  1813   0024E0  0012               	return		;funcret
  1814   0024E2                     __end_of_setBRG:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _lnInitComparator *****************
  1818 ;; Defined at:
  1819 ;;		line 34 in file "ln.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 7
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_lnInit
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text10
  1848   0024E2                     __ptext10:
  1849                           	callstack 0
  1850   0024E2                     _lnInitComparator:
  1851                           	callstack 22
  1852   0024E2                     
  1853                           ;ln.c: 36: 
  1854   0024E2  0E01               	movlw	1
  1855   0024E4  6EB4               	movwf	180,c	;volatile
  1856   0024E6                     
  1857                           ;ln.c: 40:     TXSTAbits.SYNC = 0;
  1858   0024E6  9892               	bcf	146,4,c	;volatile
  1859   0024E8  0012               	return		;funcret
  1860   0024EA                     __end_of_lnInitComparator:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _lnIsr *****************
  1864 ;; Defined at:
  1865 ;;		line 99 in file "ln.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:        9 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 6
  1886 ;; This function calls:
  1887 ;;		_free
  1888 ;;		_lnIsrRc
  1889 ;;		_lnIsrTmr1
  1890 ;; This function is called by:
  1891 ;;		Interrupt level 1
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	intcodelo
  1896   000018                     __pintcodelo:
  1897                           	callstack 0
  1898   000018                     _lnIsr:
  1899                           	callstack 20
  1900                           
  1901                           ;incstack = 0
  1902   000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1903   00001A  CFD8 F03E          	movff	status,??_lnIsr
  1904   00001E  CFE8 F03F          	movff	wreg,??_lnIsr+1
  1905   000022  CFE0 F040          	movff	bsr,??_lnIsr+2
  1906   000026  CFE1 F041          	movff	fsr1l,??_lnIsr+3
  1907   00002A  CFE2 F042          	movff	fsr1h,??_lnIsr+4
  1908   00002E  CFD9 F043          	movff	fsr2l,??_lnIsr+5
  1909   000032  CFDA F044          	movff	fsr2h,??_lnIsr+6
  1910   000036  CFF3 F045          	movff	prodl,??_lnIsr+7
  1911   00003A  CFF4 F046          	movff	prodh,??_lnIsr+8
  1912   00003E                     
  1913                           ;ln.c: 101:     if (PIE1bits.TMR1IE && PIR1bits.TMR1IF)
  1914   00003E  A09D               	btfss	157,0,c	;volatile
  1915   000040  EF24  F000         	goto	i1u226_21
  1916   000044  EF26  F000         	goto	i1u226_20
  1917   000048                     i1u226_21:
  1918   000048  EF32  F000         	goto	i1l175
  1919   00004C                     i1u226_20:
  1920   00004C  A09E               	btfss	158,0,c	;volatile
  1921   00004E  EF2B  F000         	goto	i1u227_21
  1922   000052  EF2D  F000         	goto	i1u227_20
  1923   000056                     i1u227_21:
  1924   000056  EF32  F000         	goto	i1l175
  1925   00005A                     i1u227_20:
  1926   00005A                     
  1927                           ;ln.c: 102:     {;ln.c: 104:         PIR1bits.TMR1IF = 0;
  1928   00005A  909E               	bcf	158,0,c	;volatile
  1929   00005C                     
  1930                           ;ln.c: 105:         lnIsrTmr1();
  1931   00005C  EC1A  F010         	call	_lnIsrTmr1	;wreg free
  1932                           
  1933                           ;ln.c: 106:     }
  1934   000060  EF80  F000         	goto	i1l182
  1935   000064                     i1l175:
  1936                           
  1937                           ;ln.c: 108:     {;ln.c: 109:         if (PIE1bits.RCIE)
  1938   000064  AA9D               	btfss	157,5,c	;volatile
  1939   000066  EF37  F000         	goto	i1u228_21
  1940   00006A  EF39  F000         	goto	i1u228_20
  1941   00006E                     i1u228_21:
  1942   00006E  EF80  F000         	goto	i1l182
  1943   000072                     i1u228_20:
  1944   000072                     
  1945                           ;ln.c: 110:         {;ln.c: 111:             if (RCSTAbits.FERR)
  1946   000072  A4AB               	btfss	171,2,c	;volatile
  1947   000074  EF3E  F000         	goto	i1u229_21
  1948   000078  EF40  F000         	goto	i1u229_20
  1949   00007C                     i1u229_21:
  1950   00007C  EF7C  F000         	goto	i1l2787
  1951   000080                     i1u229_20:
  1952   000080                     
  1953                           ;ln.c: 112:             {;ln.c: 114:                 _ = RCREG;
  1954   000080  CFAE F056          	movff	4014,__	;volatile
  1955   000084                     
  1956                           ;ln.c: 115:                 if (lnRxCounter > 0)
  1957   000084  5055               	movf	_lnRxCounter^0,w,c
  1958   000086  B4D8               	btfsc	status,2,c
  1959   000088  EF48  F000         	goto	i1u230_21
  1960   00008C  EF4A  F000         	goto	i1u230_20
  1961   000090                     i1u230_21:
  1962   000090  EF5E  F000         	goto	i1l179
  1963   000094                     i1u230_20:
  1964   000094                     
  1965                           ;ln.c: 116:                 {;ln.c: 118:                     lnRxCounter = 0;
  1966   000094  0E00               	movlw	0
  1967   000096  6E55               	movwf	_lnRxCounter^0,c
  1968   000098                     
  1969                           ;ln.c: 119:                     free(lnRxMessage->lnData);
  1970   000098  EE20 F003          	lfsr	2,3
  1971   00009C  504F               	movf	_lnRxMessage^0,w,c
  1972   00009E  26D9               	addwf	fsr2l,f,c
  1973   0000A0  5050               	movf	(_lnRxMessage+1)^0,w,c
  1974   0000A2  22DA               	addwfc	fsr2h,f,c
  1975   0000A4  CFDE F001          	movff	postinc2,free@ptr
  1976   0000A8  CFDD F002          	movff	postdec2,free@ptr+1
  1977   0000AC  ECDE  F00C         	call	_free	;wreg free
  1978   0000B0                     
  1979                           ;ln.c: 120:                     free(lnRxMessage);
  1980   0000B0  C04F  F001         	movff	_lnRxMessage,free@ptr
  1981   0000B4  C050  F002         	movff	_lnRxMessage+1,free@ptr+1
  1982   0000B8  ECDE  F00C         	call	_free	;wreg free
  1983   0000BC                     i1l179:
  1984                           
  1985                           ;ln.c: 122:                 if (lnTxCounter > 0)
  1986   0000BC  5054               	movf	_lnTxCounter^0,w,c
  1987   0000BE  B4D8               	btfsc	status,2,c
  1988   0000C0  EF64  F000         	goto	i1u231_21
  1989   0000C4  EF66  F000         	goto	i1u231_20
  1990   0000C8                     i1u231_21:
  1991   0000C8  EF80  F000         	goto	i1l177
  1992   0000CC                     i1u231_20:
  1993   0000CC                     
  1994                           ;ln.c: 123:                 {;ln.c: 125:                     lnTxCounter = 0;
  1995   0000CC  0E00               	movlw	0
  1996   0000CE  6E54               	movwf	_lnTxCounter^0,c
  1997   0000D0                     
  1998                           ;ln.c: 126:                     free(lnTxMessage->lnData);
  1999   0000D0  EE20 F003          	lfsr	2,3
  2000   0000D4  504D               	movf	_lnTxMessage^0,w,c
  2001   0000D6  26D9               	addwf	fsr2l,f,c
  2002   0000D8  504E               	movf	(_lnTxMessage+1)^0,w,c
  2003   0000DA  22DA               	addwfc	fsr2h,f,c
  2004   0000DC  CFDE F001          	movff	postinc2,free@ptr
  2005   0000E0  CFDD F002          	movff	postdec2,free@ptr+1
  2006   0000E4  ECDE  F00C         	call	_free	;wreg free
  2007   0000E8                     
  2008                           ;ln.c: 127:                     free(lnTxMessage);
  2009   0000E8  C04D  F001         	movff	_lnTxMessage,free@ptr
  2010   0000EC  C04E  F002         	movff	_lnTxMessage+1,free@ptr+1
  2011   0000F0  ECDE  F00C         	call	_free	;wreg free
  2012   0000F4  EF80  F000         	goto	i1l182
  2013   0000F8                     i1l2787:
  2014                           
  2015                           ;ln.c: 131:             {;ln.c: 133:                 lnIsrRc();
  2016   0000F8  EC0D  F011         	call	_lnIsrRc	;wreg free
  2017   0000FC  EF80  F000         	goto	i1l182
  2018   000100                     i1l177:
  2019   000100                     i1l182:
  2020   000100  C046  FFF4         	movff	??_lnIsr+8,prodh
  2021   000104  C045  FFF3         	movff	??_lnIsr+7,prodl
  2022   000108  C044  FFDA         	movff	??_lnIsr+6,fsr2h
  2023   00010C  C043  FFD9         	movff	??_lnIsr+5,fsr2l
  2024   000110  C042  FFE2         	movff	??_lnIsr+4,fsr1h
  2025   000114  C041  FFE1         	movff	??_lnIsr+3,fsr1l
  2026   000118  C040  FFE0         	movff	??_lnIsr+2,bsr
  2027   00011C  C03F  FFE8         	movff	??_lnIsr+1,wreg
  2028   000120  C03E  FFD8         	movff	??_lnIsr,status
  2029   000124  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2030   000126  0010               	retfie	
  2031   000128                     __end_of_lnIsr:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _lnIsrTmr1 *****************
  2035 ;; Defined at:
  2036 ;;		line 146 in file "ln.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 3
  2057 ;; This function calls:
  2058 ;;		_isLnFree
  2059 ;;		_startCmpDelay
  2060 ;;		_txHandler
  2061 ;; This function is called by:
  2062 ;;		_lnIsr
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text12
  2067   002034                     __ptext12:
  2068                           	callstack 0
  2069   002034                     _lnIsrTmr1:
  2070                           	callstack 22
  2071   002034                     
  2072                           ;ln.c: 148:     switch (LNCONbits.TMR1_MODE)
  2073   002034  EF42  F010         	goto	i1l2727
  2074   002038                     i1l186:
  2075                           
  2076                           ;ln.c: 152:         RCSTAbits.SPEN = 1;
  2077   002038  8EAB               	bsf	171,7,c	;volatile
  2078                           
  2079                           ;ln.c: 153:         PORTCbits.RC6 = 0;
  2080   00203A  9C82               	bcf	130,6,c	;volatile
  2081   00203C                     i1l2707:
  2082                           
  2083                           ;ln.c: 154:         startCmpDelay();
  2084   00203C  ECA3  F011         	call	_startCmpDelay	;wreg free
  2085                           
  2086                           ;ln.c: 155:         break;
  2087   002040  EF5C  F010         	goto	i1l195
  2088   002044                     i1l2709:
  2089                           
  2090                           ;ln.c: 160:         if (isLnFree())
  2091   002044  EC1E  F012         	call	_isLnFree	;wreg free
  2092   002048  0900               	iorlw	0
  2093   00204A  B4D8               	btfsc	status,2,c
  2094   00204C  EF2A  F010         	goto	i1u221_21
  2095   002050  EF2C  F010         	goto	i1u221_20
  2096   002054                     i1u221_21:
  2097   002054  EF1E  F010         	goto	i1l2707
  2098   002058                     i1u221_20:
  2099   002058                     
  2100                           ;ln.c: 161:         {;ln.c: 162:             LNCONbits.TMR1_MODE = 0;
  2101   002058  0EFC               	movlw	-4
  2102   00205A  1657               	andwf	_LNCONbits^0,f,c
  2103                           
  2104                           ;ln.c: 163:         }
  2105   00205C  EF5C  F010         	goto	i1l195
  2106   002060                     i1l2715:
  2107                           
  2108                           ;ln.c: 172:         txHandler();
  2109   002060  EC8C  F00D         	call	_txHandler	;wreg free
  2110   002064                     
  2111                           ;ln.c: 173:         if (isLnFree())
  2112   002064  EC1E  F012         	call	_isLnFree	;wreg free
  2113   002068  0900               	iorlw	0
  2114   00206A  B4D8               	btfsc	status,2,c
  2115   00206C  EF3A  F010         	goto	i1u222_21
  2116   002070  EF3C  F010         	goto	i1u222_20
  2117   002074                     i1u222_21:
  2118   002074  EF1E  F010         	goto	i1l2707
  2119   002078                     i1u222_20:
  2120   002078                     
  2121                           ;ln.c: 174:         {;ln.c: 175:             LNCONbits.TMR1_MODE = 0;
  2122   002078  0EFC               	movlw	-4
  2123   00207A  1657               	andwf	_LNCONbits^0,f,c
  2124   00207C                     
  2125                           ;ln.c: 176:             txHandler();
  2126   00207C  EC8C  F00D         	call	_txHandler	;wreg free
  2127                           
  2128                           ;ln.c: 177:         }
  2129   002080  EF5C  F010         	goto	i1l195
  2130   002084                     i1l2727:
  2131   002084  5057               	movf	_LNCONbits^0,w,c
  2132   002086  0B03               	andlw	3
  2133   002088  6E0F               	movwf	??_lnIsrTmr1^0,c
  2134   00208A  6A10               	clrf	(??_lnIsrTmr1+1)^0,c
  2135                           
  2136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2137                           ; Switch size 1, requested type "simple"
  2138                           ; Number of cases is 1, Range of values is 0 to 0
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; simple_byte            4     3 (average)
  2142                           ;	Chosen strategy is simple_byte
  2143   00208C  5010               	movf	(??_lnIsrTmr1+1)^0,w,c
  2144   00208E  0A00               	xorlw	0	; case 0
  2145   002090  B4D8               	btfsc	status,2,c
  2146   002092  EF4D  F010         	goto	i1l3207
  2147   002096  EF5C  F010         	goto	i1l195
  2148   00209A                     i1l3207:
  2149                           
  2150                           ; Switch size 1, requested type "simple"
  2151                           ; Number of cases is 3, Range of values is 1 to 3
  2152                           ; switch strategies available:
  2153                           ; Name         Instructions Cycles
  2154                           ; simple_byte           10     6 (average)
  2155                           ;	Chosen strategy is simple_byte
  2156   00209A  500F               	movf	??_lnIsrTmr1^0,w,c
  2157   00209C  0A01               	xorlw	1	; case 1
  2158   00209E  B4D8               	btfsc	status,2,c
  2159   0020A0  EF1C  F010         	goto	i1l186
  2160   0020A4  0A03               	xorlw	3	; case 2
  2161   0020A6  B4D8               	btfsc	status,2,c
  2162   0020A8  EF22  F010         	goto	i1l2709
  2163   0020AC  0A01               	xorlw	1	; case 3
  2164   0020AE  B4D8               	btfsc	status,2,c
  2165   0020B0  EF30  F010         	goto	i1l2715
  2166   0020B4  EF5C  F010         	goto	i1l195
  2167   0020B8                     i1l195:
  2168   0020B8  0012               	return		;funcret
  2169   0020BA                     __end_of_lnIsrTmr1:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _lnIsrRc *****************
  2173 ;; Defined at:
  2174 ;;		line 192 in file "ln.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  lnRxData        1   60[COMRAM] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;Total ram usage:        1 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 5
  2195 ;; This function calls:
  2196 ;;		_free
  2197 ;;		_rxHandler
  2198 ;;		_startLinebreak
  2199 ;;		_txHandler
  2200 ;; This function is called by:
  2201 ;;		_lnIsr
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text13
  2206   00221A                     __ptext13:
  2207                           	callstack 0
  2208   00221A                     _lnIsrRc:
  2209                           	callstack 20
  2210   00221A                     
  2211                           ;ln.c: 194:     uint8_t lnRxData = RCREG;
  2212   00221A  CFAE F03D          	movff	4014,lnIsrRc@lnRxData	;volatile
  2213   00221E                     
  2214                           ;ln.c: 196:     if (lnTxCounter != 0)
  2215   00221E  5054               	movf	_lnTxCounter^0,w,c
  2216   002220  B4D8               	btfsc	status,2,c
  2217   002222  EF15  F011         	goto	i1u223_21
  2218   002226  EF17  F011         	goto	i1u223_20
  2219   00222A                     i1u223_21:
  2220   00222A  EF3C  F011         	goto	i1l2747
  2221   00222E                     i1u223_20:
  2222   00222E                     
  2223                           ;ln.c: 197:     {;ln.c: 199:         if (lnTxData == lnRxData)
  2224   00222E  503D               	movf	lnIsrRc@lnRxData^0,w,c
  2225   002230  1853               	xorwf	_lnTxData^0,w,c
  2226   002232  A4D8               	btfss	status,2,c
  2227   002234  EF1E  F011         	goto	i1u224_21
  2228   002238  EF20  F011         	goto	i1u224_20
  2229   00223C                     i1u224_21:
  2230   00223C  EF24  F011         	goto	i1l2741
  2231   002240                     i1u224_20:
  2232   002240                     
  2233                           ;ln.c: 200:         {;ln.c: 202:             txHandler();
  2234   002240  EC8C  F00D         	call	_txHandler	;wreg free
  2235                           
  2236                           ;ln.c: 203:         }
  2237   002244  EF3F  F011         	goto	i1l202
  2238   002248                     i1l2741:
  2239                           
  2240                           ;ln.c: 205:         {;ln.c: 208:             free(lnTxMessage->lnData);
  2241   002248  EE20 F003          	lfsr	2,3
  2242   00224C  504D               	movf	_lnTxMessage^0,w,c
  2243   00224E  26D9               	addwf	fsr2l,f,c
  2244   002250  504E               	movf	(_lnTxMessage+1)^0,w,c
  2245   002252  22DA               	addwfc	fsr2h,f,c
  2246   002254  CFDE F001          	movff	postinc2,free@ptr
  2247   002258  CFDD F002          	movff	postdec2,free@ptr+1
  2248   00225C  ECDE  F00C         	call	_free	;wreg free
  2249                           
  2250                           ;ln.c: 209:             free(lnTxMessage);
  2251   002260  C04D  F001         	movff	_lnTxMessage,free@ptr
  2252   002264  C04E  F002         	movff	_lnTxMessage+1,free@ptr+1
  2253   002268  ECDE  F00C         	call	_free	;wreg free
  2254   00226C                     
  2255                           ;ln.c: 211:             lnTxCounter = 0;
  2256   00226C  0E00               	movlw	0
  2257   00226E  6E54               	movwf	_lnTxCounter^0,c
  2258   002270                     
  2259                           ;ln.c: 213:             startLinebreak();
  2260   002270  EC52  F012         	call	_startLinebreak	;wreg free
  2261   002274  EF3F  F011         	goto	i1l202
  2262   002278                     i1l2747:
  2263                           
  2264                           ;ln.c: 217:     {;ln.c: 219:         rxHandler(lnRxData);
  2265   002278  503D               	movf	lnIsrRc@lnRxData^0,w,c
  2266   00227A  EC7A  F00A         	call	_rxHandler
  2267   00227E                     i1l202:
  2268   00227E  0012               	return		;funcret
  2269   002280                     __end_of_lnIsrRc:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _txHandler *****************
  2273 ;; Defined at:
  2274 ;;		line 345 in file "ln.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 2
  2295 ;; This function calls:
  2296 ;;		_deQueue
  2297 ;;		_free
  2298 ;;		_isLnFree
  2299 ;;		_startCmpDelay
  2300 ;;		_startLinebreak
  2301 ;; This function is called by:
  2302 ;;		_lnIsrTmr1
  2303 ;;		_lnIsrRc
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text14
  2308   001B18                     __ptext14:
  2309                           	callstack 0
  2310   001B18                     _txHandler:
  2311                           	callstack 22
  2312   001B18                     
  2313                           ;ln.c: 347:     if (isLnFree())
  2314   001B18  EC1E  F012         	call	_isLnFree	;wreg free
  2315   001B1C  0900               	iorlw	0
  2316   001B1E  B4D8               	btfsc	status,2,c
  2317   001B20  EF94  F00D         	goto	i1u211_21
  2318   001B24  EF96  F00D         	goto	i1u211_20
  2319   001B28                     i1u211_21:
  2320   001B28  EF13  F00E         	goto	i1l2623
  2321   001B2C                     i1u211_20:
  2322   001B2C                     
  2323                           ;ln.c: 348:     {;ln.c: 352:         if (lnTxCounter == 0)
  2324   001B2C  5054               	movf	_lnTxCounter^0,w,c
  2325   001B2E  A4D8               	btfss	status,2,c
  2326   001B30  EF9C  F00D         	goto	i1u212_21
  2327   001B34  EF9E  F00D         	goto	i1u212_20
  2328   001B38                     i1u212_21:
  2329   001B38  EFB3  F00D         	goto	i1l2613
  2330   001B3C                     i1u212_20:
  2331   001B3C                     
  2332                           ;ln.c: 353:         {;ln.c: 354:             TXREG = lnTxMessage->opCode;
  2333   001B3C  EE20 F001          	lfsr	2,1
  2334   001B40  504D               	movf	_lnTxMessage^0,w,c
  2335   001B42  26D9               	addwf	fsr2l,f,c
  2336   001B44  504E               	movf	(_lnTxMessage+1)^0,w,c
  2337   001B46  22DA               	addwfc	fsr2h,f,c
  2338   001B48  50DF               	movf	indf2,w,c
  2339   001B4A  6EAD               	movwf	173,c	;volatile
  2340                           
  2341                           ;ln.c: 355:             lnTxData = lnTxMessage->opCode;
  2342   001B4C  EE20 F001          	lfsr	2,1
  2343   001B50  504D               	movf	_lnTxMessage^0,w,c
  2344   001B52  26D9               	addwf	fsr2l,f,c
  2345   001B54  504E               	movf	(_lnTxMessage+1)^0,w,c
  2346   001B56  22DA               	addwfc	fsr2h,f,c
  2347   001B58  50DF               	movf	indf2,w,c
  2348   001B5A  6E53               	movwf	_lnTxData^0,c
  2349   001B5C                     
  2350                           ;ln.c: 356:             LNCONbits.TMR1_MODE = 0;
  2351   001B5C  0EFC               	movlw	-4
  2352   001B5E  1657               	andwf	_LNCONbits^0,f,c
  2353   001B60                     i1l2611:
  2354                           
  2355                           ;ln.c: 357:             lnTxCounter++;
  2356   001B60  2A54               	incf	_lnTxCounter^0,f,c
  2357                           
  2358                           ;ln.c: 358:         }
  2359   001B62  EF35  F00E         	goto	i1l241
  2360   001B66                     i1l2613:
  2361                           
  2362                           ;ln.c: 360:         {;ln.c: 361:             if (lnTxCounter == lnTxMessage->size + 1)
  2363   001B66  5054               	movf	_lnTxCounter^0,w,c
  2364   001B68  6E0B               	movwf	??_txHandler^0,c
  2365   001B6A  6A0C               	clrf	(??_txHandler+1)^0,c
  2366   001B6C  C04D  FFD9         	movff	_lnTxMessage,fsr2l
  2367   001B70  C04E  FFDA         	movff	_lnTxMessage+1,fsr2h
  2368   001B74  50DF               	movf	indf2,w,c
  2369   001B76  6E0D               	movwf	(??_txHandler+2)^0,c
  2370   001B78  6A0E               	clrf	(??_txHandler+3)^0,c
  2371   001B7A  0E01               	movlw	1
  2372   001B7C  260D               	addwf	(??_txHandler+2)^0,f,c
  2373   001B7E  0E00               	movlw	0
  2374   001B80  220E               	addwfc	(??_txHandler+3)^0,f,c
  2375   001B82  500B               	movf	??_txHandler^0,w,c
  2376   001B84  180D               	xorwf	(??_txHandler+2)^0,w,c
  2377   001B86  E107               	bnz	i1u213_21
  2378   001B88  500C               	movf	(??_txHandler+1)^0,w,c
  2379   001B8A  180E               	xorwf	(??_txHandler+3)^0,w,c
  2380   001B8C  A4D8               	btfss	status,2,c
  2381   001B8E  EFCB  F00D         	goto	i1u213_21
  2382   001B92  EFCD  F00D         	goto	i1u213_20
  2383   001B96                     i1u213_21:
  2384   001B96  EFE5  F00D         	goto	i1l2619
  2385   001B9A                     i1u213_20:
  2386   001B9A                     
  2387                           ;ln.c: 362:             {;ln.c: 364:                 TXREG = lnTxMessage->checksum;
  2388   001B9A  EE20 F002          	lfsr	2,2
  2389   001B9E  504D               	movf	_lnTxMessage^0,w,c
  2390   001BA0  26D9               	addwf	fsr2l,f,c
  2391   001BA2  504E               	movf	(_lnTxMessage+1)^0,w,c
  2392   001BA4  22DA               	addwfc	fsr2h,f,c
  2393   001BA6  50DF               	movf	indf2,w,c
  2394   001BA8  6EAD               	movwf	173,c	;volatile
  2395                           
  2396                           ;ln.c: 365:                 lnTxData = lnTxMessage->checksum;
  2397   001BAA  EE20 F002          	lfsr	2,2
  2398   001BAE  504D               	movf	_lnTxMessage^0,w,c
  2399   001BB0  26D9               	addwf	fsr2l,f,c
  2400   001BB2  504E               	movf	(_lnTxMessage+1)^0,w,c
  2401   001BB4  22DA               	addwfc	fsr2h,f,c
  2402   001BB6  50DF               	movf	indf2,w,c
  2403   001BB8  6E53               	movwf	_lnTxData^0,c
  2404   001BBA                     
  2405                           ;ln.c: 366:                 deQueue(lnTxQueue);
  2406   001BBA  C0B0  F007         	movff	_lnTxQueue,deQueue@q
  2407   001BBE  C0B1  F008         	movff	_lnTxQueue+1,deQueue@q+1
  2408   001BC2  ECD6  F010         	call	_deQueue	;wreg free
  2409                           
  2410                           ;ln.c: 367:             }
  2411   001BC6  EF35  F00E         	goto	i1l241
  2412   001BCA                     i1l2619:
  2413                           
  2414                           ;ln.c: 369:             {;ln.c: 370:                 TXREG = lnTxMessage->lnData[lnTxCou
      +                          nter - 1];
  2415   001BCA  EE20 F003          	lfsr	2,3
  2416   001BCE  504D               	movf	_lnTxMessage^0,w,c
  2417   001BD0  26D9               	addwf	fsr2l,f,c
  2418   001BD2  504E               	movf	(_lnTxMessage+1)^0,w,c
  2419   001BD4  22DA               	addwfc	fsr2h,f,c
  2420   001BD6  CFDE F00B          	movff	postinc2,??_txHandler
  2421   001BDA  CFDD F00C          	movff	postdec2,??_txHandler+1
  2422   001BDE  5054               	movf	_lnTxCounter^0,w,c
  2423   001BE0  260B               	addwf	??_txHandler^0,f,c
  2424   001BE2  0E00               	movlw	0
  2425   001BE4  220C               	addwfc	(??_txHandler+1)^0,f,c
  2426   001BE6  0EFF               	movlw	255
  2427   001BE8  240B               	addwf	??_txHandler^0,w,c
  2428   001BEA  6ED9               	movwf	fsr2l,c
  2429   001BEC  0EFF               	movlw	255
  2430   001BEE  200C               	addwfc	(??_txHandler+1)^0,w,c
  2431   001BF0  6EDA               	movwf	fsr2h,c
  2432   001BF2  50DF               	movf	indf2,w,c
  2433   001BF4  6EAD               	movwf	173,c	;volatile
  2434                           
  2435                           ;ln.c: 371:                 lnTxData = lnTxMessage->lnData[lnTxCounter - 1];
  2436   001BF6  EE20 F003          	lfsr	2,3
  2437   001BFA  504D               	movf	_lnTxMessage^0,w,c
  2438   001BFC  26D9               	addwf	fsr2l,f,c
  2439   001BFE  504E               	movf	(_lnTxMessage+1)^0,w,c
  2440   001C00  22DA               	addwfc	fsr2h,f,c
  2441   001C02  CFDE F00B          	movff	postinc2,??_txHandler
  2442   001C06  CFDD F00C          	movff	postdec2,??_txHandler+1
  2443   001C0A  5054               	movf	_lnTxCounter^0,w,c
  2444   001C0C  260B               	addwf	??_txHandler^0,f,c
  2445   001C0E  0E00               	movlw	0
  2446   001C10  220C               	addwfc	(??_txHandler+1)^0,f,c
  2447   001C12  0EFF               	movlw	255
  2448   001C14  240B               	addwf	??_txHandler^0,w,c
  2449   001C16  6ED9               	movwf	fsr2l,c
  2450   001C18  0EFF               	movlw	255
  2451   001C1A  200C               	addwfc	(??_txHandler+1)^0,w,c
  2452   001C1C  6EDA               	movwf	fsr2h,c
  2453   001C1E  50DF               	movf	indf2,w,c
  2454   001C20  6E53               	movwf	_lnTxData^0,c
  2455   001C22  EFB0  F00D         	goto	i1l2611
  2456   001C26                     i1l2623:
  2457                           
  2458                           ;ln.c: 377:     {;ln.c: 382:         if (lnTxCounter == 0)
  2459   001C26  5054               	movf	_lnTxCounter^0,w,c
  2460   001C28  A4D8               	btfss	status,2,c
  2461   001C2A  EF19  F00E         	goto	i1u214_21
  2462   001C2E  EF1B  F00E         	goto	i1u214_20
  2463   001C32                     i1u214_21:
  2464   001C32  EF1F  F00E         	goto	i1l2627
  2465   001C36                     i1u214_20:
  2466   001C36                     
  2467                           ;ln.c: 383:         {;ln.c: 384:             startCmpDelay();
  2468   001C36  ECA3  F011         	call	_startCmpDelay	;wreg free
  2469                           
  2470                           ;ln.c: 385:         }
  2471   001C3A  EF23  F00E         	goto	i1l2631
  2472   001C3E                     i1l2627:
  2473                           
  2474                           ;ln.c: 387:         {;ln.c: 388:             startLinebreak();
  2475   001C3E  EC52  F012         	call	_startLinebreak	;wreg free
  2476   001C42                     
  2477                           ;ln.c: 389:             lnTxCounter = 0;
  2478   001C42  0E00               	movlw	0
  2479   001C44  6E54               	movwf	_lnTxCounter^0,c
  2480   001C46                     i1l2631:
  2481                           
  2482                           ;ln.c: 392:         free(lnTxMessage->lnData);
  2483   001C46  EE20 F003          	lfsr	2,3
  2484   001C4A  504D               	movf	_lnTxMessage^0,w,c
  2485   001C4C  26D9               	addwf	fsr2l,f,c
  2486   001C4E  504E               	movf	(_lnTxMessage+1)^0,w,c
  2487   001C50  22DA               	addwfc	fsr2h,f,c
  2488   001C52  CFDE F001          	movff	postinc2,free@ptr
  2489   001C56  CFDD F002          	movff	postdec2,free@ptr+1
  2490   001C5A  ECDE  F00C         	call	_free	;wreg free
  2491   001C5E                     
  2492                           ;ln.c: 393:         free(lnTxMessage);
  2493   001C5E  C04D  F001         	movff	_lnTxMessage,free@ptr
  2494   001C62  C04E  F002         	movff	_lnTxMessage+1,free@ptr+1
  2495   001C66  ECDE  F00C         	call	_free	;wreg free
  2496   001C6A                     i1l241:
  2497   001C6A  0012               	return		;funcret
  2498   001C6C                     __end_of_txHandler:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _isLnFree *****************
  2502 ;; Defined at:
  2503 ;;		line 405 in file "ln.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      _Bool 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;Total ram usage:        1 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_lnIsrTmr1
  2527 ;;		_txHandler
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text15
  2532   00243C                     __ptext15:
  2533                           	callstack 0
  2534   00243C                     _isLnFree:
  2535                           	callstack 23
  2536   00243C                     
  2537                           ;ln.c: 410:     return (PORTCbits.RC7 && BAUDCONbits.RCIDL);
  2538   00243C  0E00               	movlw	0
  2539   00243E  6E01               	movwf	_isLnFree$991^0,c
  2540   002440  AE82               	btfss	130,7,c	;volatile
  2541   002442  EF25  F012         	goto	i1u207_21
  2542   002446  EF27  F012         	goto	i1u207_20
  2543   00244A                     i1u207_21:
  2544   00244A  EF30  F012         	goto	i1l245
  2545   00244E                     i1u207_20:
  2546   00244E  ACB8               	btfss	184,6,c	;volatile
  2547   002450  EF2C  F012         	goto	i1u208_21
  2548   002454  EF2E  F012         	goto	i1u208_20
  2549   002458                     i1u208_21:
  2550   002458  EF30  F012         	goto	i1l245
  2551   00245C                     i1u208_20:
  2552   00245C  0E01               	movlw	1
  2553   00245E  6E01               	movwf	_isLnFree$991^0,c
  2554   002460                     i1l245:
  2555   002460  5001               	movf	_isLnFree$991^0,w,c
  2556   002462  0012               	return		;funcret
  2557   002464                     __end_of_isLnFree:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _deQueue *****************
  2561 ;; Defined at:
  2562 ;;		line 72 in file "circular_queue.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  q               2    6[COMRAM] PTR struct lnQueue
  2565 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      _Bool 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        4 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 1
  2584 ;; This function calls:
  2585 ;;		___awmod
  2586 ;;		_isQueueEmpty
  2587 ;; This function is called by:
  2588 ;;		_txHandler
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text16
  2593   0021AC                     __ptext16:
  2594                           	callstack 0
  2595   0021AC                     _deQueue:
  2596                           	callstack 22
  2597   0021AC                     
  2598                           ;circular_queue.c: 72: _Bool deQueue(lnQueue_t* q);circular_queue.c: 73: {;circular_queu
      +                          e.c: 75:     if (isQueueEmpty(q))
  2599   0021AC  C007  F001         	movff	deQueue@q,isQueueEmpty@q
  2600   0021B0  C008  F002         	movff	deQueue@q+1,isQueueEmpty@q+1
  2601   0021B4  EC32  F012         	call	_isQueueEmpty	;wreg free
  2602   0021B8  0900               	iorlw	0
  2603   0021BA  B4D8               	btfsc	status,2,c
  2604   0021BC  EFE2  F010         	goto	i1u210_21
  2605   0021C0  EFE4  F010         	goto	i1u210_20
  2606   0021C4                     i1u210_21:
  2607   0021C4  EFE6  F010         	goto	i1l2551
  2608   0021C8                     i1u210_20:
  2609   0021C8  EF0C  F011         	goto	i1l282
  2610   0021CC                     i1l2551:
  2611                           
  2612                           ;circular_queue.c: 81:     {;circular_queue.c: 83:         q->head = (q->head + 1) % q->
      +                          size;
  2613   0021CC  C007  FFD9         	movff	deQueue@q,fsr2l
  2614   0021D0  C008  FFDA         	movff	deQueue@q+1,fsr2h
  2615   0021D4  50DF               	movf	indf2,w,c
  2616   0021D6  6E09               	movwf	??_deQueue^0,c
  2617   0021D8  0E01               	movlw	1
  2618   0021DA  2409               	addwf	??_deQueue^0,w,c
  2619   0021DC  6E01               	movwf	___awmod@dividend^0,c
  2620   0021DE  6A02               	clrf	(___awmod@dividend+1)^0,c
  2621   0021E0  0E00               	movlw	0
  2622   0021E2  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2623   0021E4  EE20 F003          	lfsr	2,3
  2624   0021E8  5007               	movf	deQueue@q^0,w,c
  2625   0021EA  26D9               	addwf	fsr2l,f,c
  2626   0021EC  5008               	movf	(deQueue@q+1)^0,w,c
  2627   0021EE  22DA               	addwfc	fsr2h,f,c
  2628   0021F0  50DF               	movf	indf2,w,c
  2629   0021F2  6E0A               	movwf	(??_deQueue+1)^0,c
  2630   0021F4  500A               	movf	(??_deQueue+1)^0,w,c
  2631   0021F6  6E03               	movwf	___awmod@divisor^0,c
  2632   0021F8  6A04               	clrf	(___awmod@divisor+1)^0,c
  2633   0021FA  EC14  F00F         	call	___awmod	;wreg free
  2634   0021FE  5001               	movf	?___awmod^0,w,c
  2635   002200  C007  FFD9         	movff	deQueue@q,fsr2l
  2636   002204  C008  FFDA         	movff	deQueue@q+1,fsr2h
  2637   002208  6EDF               	movwf	indf2,c
  2638   00220A                     
  2639                           ;circular_queue.c: 84:         q->numEntries--;
  2640   00220A  EE20 F002          	lfsr	2,2
  2641   00220E  5007               	movf	deQueue@q^0,w,c
  2642   002210  26D9               	addwf	fsr2l,f,c
  2643   002212  5008               	movf	(deQueue@q+1)^0,w,c
  2644   002214  22DA               	addwfc	fsr2h,f,c
  2645   002216  06DF               	decf	indf2,f,c
  2646   002218                     i1l282:
  2647   002218  0012               	return		;funcret
  2648   00221A                     __end_of_deQueue:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _isQueueEmpty *****************
  2652 ;; Defined at:
  2653 ;;		line 29 in file "circular_queue.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  q               2    0[COMRAM] PTR struct lnQueue
  2656 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      _Bool 
  2661 ;; Registers used:
  2662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;Total ram usage:        2 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_deQueue
  2678 ;;		_sendLnMessage
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text17
  2683   002464                     __ptext17:
  2684                           	callstack 0
  2685   002464                     _isQueueEmpty:
  2686                           	callstack 22
  2687   002464                     
  2688                           ;circular_queue.c: 29: _Bool isQueueEmpty(lnQueue_t* q);circular_queue.c: 30: {;circular
      +                          _queue.c: 31:     return (q->numEntries == 0);
  2689   002464  EE20 F002          	lfsr	2,2
  2690   002468  5001               	movf	isQueueEmpty@q^0,w,c
  2691   00246A  26D9               	addwf	fsr2l,f,c
  2692   00246C  5002               	movf	(isQueueEmpty@q+1)^0,w,c
  2693   00246E  22DA               	addwfc	fsr2h,f,c
  2694   002470  50DF               	movf	indf2,w,c
  2695   002472  B4D8               	btfsc	status,2,c
  2696   002474  EF3E  F012         	goto	i1u184_21
  2697   002478  EF41  F012         	goto	i1u184_20
  2698   00247C                     i1u184_21:
  2699   00247C  0E01               	movlw	1
  2700   00247E  EF42  F012         	goto	i1u185_20
  2701   002482                     i1u184_20:
  2702   002482  0E00               	movlw	0
  2703   002484                     i1u185_20:
  2704   002484  0012               	return		;funcret
  2705   002486                     __end_of_isQueueEmpty:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _rxHandler *****************
  2709 ;; Defined at:
  2710 ;;		line 229 in file "ln.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  lnRxData        1    wreg     unsigned char 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  lnRxData        1   59[COMRAM] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        3 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 4
  2731 ;; This function calls:
  2732 ;;		_rxChecksum
  2733 ;;		i1_malloc
  2734 ;; This function is called by:
  2735 ;;		_lnIsrRc
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text18
  2740   0014F4                     __ptext18:
  2741                           	callstack 0
  2742   0014F4                     _rxHandler:
  2743                           	callstack 20
  2744                           
  2745                           ;incstack = 0
  2746                           ;rxHandler@lnRxData stored from wreg
  2747   0014F4  6E3C               	movwf	rxHandler@lnRxData^0,c
  2748   0014F6                     
  2749                           ;ln.c: 229: void rxHandler(uint8_t lnRxData);ln.c: 230: {;ln.c: 232:     if (lnRxCounter
      +                           == 0)
  2750   0014F6  5055               	movf	_lnRxCounter^0,w,c
  2751   0014F8  A4D8               	btfss	status,2,c
  2752   0014FA  EF81  F00A         	goto	i1u215_21
  2753   0014FE  EF83  F00A         	goto	i1u215_20
  2754   001502                     i1u215_21:
  2755   001502  EF61  F00B         	goto	i1l2683
  2756   001506                     i1u215_20:
  2757   001506                     
  2758                           ;ln.c: 233:     {;ln.c: 234:         if (lnRxData & 0b10000000u)
  2759   001506  AE3C               	btfss	rxHandler@lnRxData^0,7,c
  2760   001508  EF88  F00A         	goto	i1u216_21
  2761   00150C  EF8A  F00A         	goto	i1u216_20
  2762   001510                     i1u216_21:
  2763   001510  EF7A  F00B         	goto	i1l220
  2764   001514                     i1u216_20:
  2765   001514                     
  2766                           ;ln.c: 235:         {;ln.c: 238:             lnRxMessage = malloc(sizeof(struct lnMessag
      +                          e));
  2767   001514  0E00               	movlw	0
  2768   001516  6E16               	movwf	(i1malloc@n+1)^0,c
  2769   001518  0E05               	movlw	5
  2770   00151A  6E15               	movwf	i1malloc@n^0,c
  2771   00151C  EC2D  F00C         	call	i1_malloc	;wreg free
  2772   001520  C015  F04F         	movff	?i1_malloc,_lnRxMessage
  2773   001524  C016  F050         	movff	?i1_malloc+1,_lnRxMessage+1
  2774   001528                     
  2775                           ;ln.c: 242:             lnRxMessage->size = (lnRxData >> 4) & 0b00000110u;
  2776   001528  383C               	swapf	rxHandler@lnRxData^0,w,c
  2777   00152A  0B0F               	andlw	15
  2778   00152C  0B06               	andlw	6
  2779   00152E  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2780   001532  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2781   001536  6EDF               	movwf	indf2,c
  2782   001538                     
  2783                           ;ln.c: 243:             lnRxMessage->opCode = lnRxData;
  2784   001538  EE20 F001          	lfsr	2,1
  2785   00153C  504F               	movf	_lnRxMessage^0,w,c
  2786   00153E  26D9               	addwf	fsr2l,f,c
  2787   001540  5050               	movf	(_lnRxMessage+1)^0,w,c
  2788   001542  22DA               	addwfc	fsr2h,f,c
  2789   001544  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2790   001548                     
  2791                           ;ln.c: 244:             lnRxMessage->checksum = lnRxData;
  2792   001548  EE20 F002          	lfsr	2,2
  2793   00154C  504F               	movf	_lnRxMessage^0,w,c
  2794   00154E  26D9               	addwf	fsr2l,f,c
  2795   001550  5050               	movf	(_lnRxMessage+1)^0,w,c
  2796   001552  22DA               	addwfc	fsr2h,f,c
  2797   001554  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2798   001558                     
  2799                           ;ln.c: 245:             lnRxCounter = 1;
  2800   001558  0E01               	movlw	1
  2801   00155A  6E55               	movwf	_lnRxCounter^0,c
  2802   00155C  EF7A  F00B         	goto	i1l220
  2803   001560                     i1l2649:
  2804                           
  2805                           ;ln.c: 255:             rxChecksum(lnRxQueue, lnRxMessage, lnRxData);
  2806   001560  C0AE  F033         	movff	_lnRxQueue,rxChecksum@lnQueue
  2807   001564  C0AF  F034         	movff	_lnRxQueue+1,rxChecksum@lnQueue+1
  2808   001568  C04F  F035         	movff	_lnRxMessage,rxChecksum@lnMessage
  2809   00156C  C050  F036         	movff	_lnRxMessage+1,rxChecksum@lnMessage+1
  2810   001570  C03C  F037         	movff	rxHandler@lnRxData,rxChecksum@checksum
  2811   001574  EC5D  F010         	call	_rxChecksum	;wreg free
  2812                           
  2813                           ;ln.c: 256:             break;
  2814   001578  EF7A  F00B         	goto	i1l220
  2815   00157C                     i1l2651:
  2816                           
  2817                           ;ln.c: 258:             if (lnRxCounter == 1)
  2818   00157C  0455               	decf	_lnRxCounter^0,w,c
  2819   00157E  A4D8               	btfss	status,2,c
  2820   001580  EFC4  F00A         	goto	i1u217_21
  2821   001584  EFC6  F00A         	goto	i1u217_20
  2822   001588                     i1u217_21:
  2823   001588  EFE7  F00A         	goto	i1l2659
  2824   00158C                     i1u217_20:
  2825   00158C                     
  2826                           ;ln.c: 259:             {;ln.c: 260:                 lnRxMessage->size = lnRxData;
  2827   00158C  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2828   001590  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2829   001594  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2830   001598                     
  2831                           ;ln.c: 261:                 lnRxMessage->lnData = malloc(sizeof(uint8_t) * lnRxMessage->
      +                          size);
  2832   001598  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2833   00159C  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2834   0015A0  50DF               	movf	indf2,w,c
  2835   0015A2  6E3A               	movwf	??_rxHandler^0,c
  2836   0015A4  503A               	movf	??_rxHandler^0,w,c
  2837   0015A6  0D01               	mullw	1
  2838   0015A8  CFF3 F015          	movff	prodl,i1malloc@n
  2839   0015AC  CFF4 F016          	movff	prodh,i1malloc@n+1
  2840   0015B0  EC2D  F00C         	call	i1_malloc	;wreg free
  2841   0015B4  EE20 F003          	lfsr	2,3
  2842   0015B8  504F               	movf	_lnRxMessage^0,w,c
  2843   0015BA  26D9               	addwf	fsr2l,f,c
  2844   0015BC  5050               	movf	(_lnRxMessage+1)^0,w,c
  2845   0015BE  22DA               	addwfc	fsr2h,f,c
  2846   0015C0  C015  FFDE         	movff	?i1_malloc,postinc2
  2847   0015C4  C016  FFDD         	movff	?i1_malloc+1,postdec2
  2848   0015C8                     i1l2657:
  2849                           
  2850                           ;ln.c: 262:                 lnRxCounter++;
  2851   0015C8  2A55               	incf	_lnRxCounter^0,f,c
  2852                           
  2853                           ;ln.c: 263:             }
  2854   0015CA  EF7A  F00B         	goto	i1l220
  2855   0015CE                     i1l2659:
  2856   0015CE  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2857   0015D2  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2858   0015D6  5055               	movf	_lnRxCounter^0,w,c
  2859   0015D8  5CDE               	subwf	postinc2,w,c
  2860   0015DA  A0D8               	btfss	status,0,c
  2861   0015DC  EFF2  F00A         	goto	i1u218_21
  2862   0015E0  EFF4  F00A         	goto	i1u218_20
  2863   0015E4                     i1u218_21:
  2864   0015E4  EFB0  F00A         	goto	i1l2649
  2865   0015E8                     i1u218_20:
  2866   0015E8                     
  2867                           ;ln.c: 265:             {;ln.c: 266:                 lnRxMessage->lnData[lnRxCounter - 2
      +                          ] = lnRxData;
  2868   0015E8  EE20 F003          	lfsr	2,3
  2869   0015EC  504F               	movf	_lnRxMessage^0,w,c
  2870   0015EE  26D9               	addwf	fsr2l,f,c
  2871   0015F0  5050               	movf	(_lnRxMessage+1)^0,w,c
  2872   0015F2  22DA               	addwfc	fsr2h,f,c
  2873   0015F4  CFDE F03A          	movff	postinc2,??_rxHandler
  2874   0015F8  CFDD F03B          	movff	postdec2,??_rxHandler+1
  2875   0015FC  5055               	movf	_lnRxCounter^0,w,c
  2876   0015FE  263A               	addwf	??_rxHandler^0,f,c
  2877   001600  0E00               	movlw	0
  2878   001602  223B               	addwfc	(??_rxHandler+1)^0,f,c
  2879   001604  0EFE               	movlw	254
  2880   001606  243A               	addwf	??_rxHandler^0,w,c
  2881   001608  6ED9               	movwf	fsr2l,c
  2882   00160A  0EFF               	movlw	255
  2883   00160C  203B               	addwfc	(??_rxHandler+1)^0,w,c
  2884   00160E  6EDA               	movwf	fsr2h,c
  2885   001610  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2886                           
  2887                           ;ln.c: 267:                 lnRxMessage->checksum ^= lnRxData;
  2888   001614  EE20 F002          	lfsr	2,2
  2889   001618  504F               	movf	_lnRxMessage^0,w,c
  2890   00161A  26D9               	addwf	fsr2l,f,c
  2891   00161C  5050               	movf	(_lnRxMessage+1)^0,w,c
  2892   00161E  22DA               	addwfc	fsr2h,f,c
  2893   001620  503C               	movf	rxHandler@lnRxData^0,w,c
  2894   001622  1ADF               	xorwf	indf2,f,c
  2895   001624  EFE4  F00A         	goto	i1l2657
  2896   001628                     i1l2667:
  2897                           
  2898                           ;ln.c: 276:             if (lnRxCounter <= lnRxMessage->size)
  2899   001628  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2900   00162C  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2901   001630  5055               	movf	_lnRxCounter^0,w,c
  2902   001632  5CDE               	subwf	postinc2,w,c
  2903   001634  A0D8               	btfss	status,0,c
  2904   001636  EF1F  F00B         	goto	i1u219_21
  2905   00163A  EF21  F00B         	goto	i1u219_20
  2906   00163E                     i1u219_21:
  2907   00163E  EFB0  F00A         	goto	i1l2649
  2908   001642                     i1u219_20:
  2909   001642                     
  2910                           ;ln.c: 277:             {;ln.c: 278:                 if (lnRxCounter == 1)
  2911   001642  0455               	decf	_lnRxCounter^0,w,c
  2912   001644  A4D8               	btfss	status,2,c
  2913   001646  EF27  F00B         	goto	i1u220_21
  2914   00164A  EF29  F00B         	goto	i1u220_20
  2915   00164E                     i1u220_21:
  2916   00164E  EF41  F00B         	goto	i1l2673
  2917   001652                     i1u220_20:
  2918   001652                     
  2919                           ;ln.c: 279:                 {;ln.c: 280:                     lnRxMessage->lnData = mallo
      +                          c(sizeof(uint8_t) * lnRxMessage->size);
  2920   001652  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2921   001656  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2922   00165A  50DF               	movf	indf2,w,c
  2923   00165C  6E3A               	movwf	??_rxHandler^0,c
  2924   00165E  503A               	movf	??_rxHandler^0,w,c
  2925   001660  0D01               	mullw	1
  2926   001662  CFF3 F015          	movff	prodl,i1malloc@n
  2927   001666  CFF4 F016          	movff	prodh,i1malloc@n+1
  2928   00166A  EC2D  F00C         	call	i1_malloc	;wreg free
  2929   00166E  EE20 F003          	lfsr	2,3
  2930   001672  504F               	movf	_lnRxMessage^0,w,c
  2931   001674  26D9               	addwf	fsr2l,f,c
  2932   001676  5050               	movf	(_lnRxMessage+1)^0,w,c
  2933   001678  22DA               	addwfc	fsr2h,f,c
  2934   00167A  C015  FFDE         	movff	?i1_malloc,postinc2
  2935   00167E  C016  FFDD         	movff	?i1_malloc+1,postdec2
  2936   001682                     i1l2673:
  2937                           
  2938                           ;ln.c: 282:                 lnRxMessage->lnData[lnRxCounter - 1] = lnRxData;
  2939   001682  EE20 F003          	lfsr	2,3
  2940   001686  504F               	movf	_lnRxMessage^0,w,c
  2941   001688  26D9               	addwf	fsr2l,f,c
  2942   00168A  5050               	movf	(_lnRxMessage+1)^0,w,c
  2943   00168C  22DA               	addwfc	fsr2h,f,c
  2944   00168E  CFDE F03A          	movff	postinc2,??_rxHandler
  2945   001692  CFDD F03B          	movff	postdec2,??_rxHandler+1
  2946   001696  5055               	movf	_lnRxCounter^0,w,c
  2947   001698  263A               	addwf	??_rxHandler^0,f,c
  2948   00169A  0E00               	movlw	0
  2949   00169C  223B               	addwfc	(??_rxHandler+1)^0,f,c
  2950   00169E  0EFF               	movlw	255
  2951   0016A0  243A               	addwf	??_rxHandler^0,w,c
  2952   0016A2  6ED9               	movwf	fsr2l,c
  2953   0016A4  0EFF               	movlw	255
  2954   0016A6  203B               	addwfc	(??_rxHandler+1)^0,w,c
  2955   0016A8  6EDA               	movwf	fsr2h,c
  2956   0016AA  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2957   0016AE                     
  2958                           ;ln.c: 283:                 lnRxMessage->checksum ^= lnRxData;
  2959   0016AE  EE20 F002          	lfsr	2,2
  2960   0016B2  504F               	movf	_lnRxMessage^0,w,c
  2961   0016B4  26D9               	addwf	fsr2l,f,c
  2962   0016B6  5050               	movf	(_lnRxMessage+1)^0,w,c
  2963   0016B8  22DA               	addwfc	fsr2h,f,c
  2964   0016BA  503C               	movf	rxHandler@lnRxData^0,w,c
  2965   0016BC  1ADF               	xorwf	indf2,f,c
  2966   0016BE  EFE4  F00A         	goto	i1l2657
  2967   0016C2                     i1l2683:
  2968   0016C2  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2969   0016C6  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2970   0016CA  50DF               	movf	indf2,w,c
  2971   0016CC  6E3A               	movwf	??_rxHandler^0,c
  2972   0016CE  6A3B               	clrf	(??_rxHandler+1)^0,c
  2973                           
  2974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2975                           ; Switch size 1, requested type "simple"
  2976                           ; Number of cases is 1, Range of values is 0 to 0
  2977                           ; switch strategies available:
  2978                           ; Name         Instructions Cycles
  2979                           ; simple_byte            4     3 (average)
  2980                           ;	Chosen strategy is simple_byte
  2981   0016D0  503B               	movf	(??_rxHandler+1)^0,w,c
  2982   0016D2  0A00               	xorlw	0	; case 0
  2983   0016D4  B4D8               	btfsc	status,2,c
  2984   0016D6  EF6F  F00B         	goto	i1l3209
  2985   0016DA  EF14  F00B         	goto	i1l2667
  2986   0016DE                     i1l3209:
  2987                           
  2988                           ; Switch size 1, requested type "simple"
  2989                           ; Number of cases is 2, Range of values is 0 to 6
  2990                           ; switch strategies available:
  2991                           ; Name         Instructions Cycles
  2992                           ; simple_byte            7     4 (average)
  2993                           ;	Chosen strategy is simple_byte
  2994   0016DE  503A               	movf	??_rxHandler^0,w,c
  2995   0016E0  0A00               	xorlw	0	; case 0
  2996   0016E2  B4D8               	btfsc	status,2,c
  2997   0016E4  EFB0  F00A         	goto	i1l2649
  2998   0016E8  0A06               	xorlw	6	; case 6
  2999   0016EA  B4D8               	btfsc	status,2,c
  3000   0016EC  EFBE  F00A         	goto	i1l2651
  3001   0016F0  EF14  F00B         	goto	i1l2667
  3002   0016F4                     i1l220:
  3003   0016F4  0012               	return		;funcret
  3004   0016F6                     __end_of_rxHandler:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _rxChecksum *****************
  3008 ;; Defined at:
  3009 ;;		line 295 in file "ln.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  lnQueue         2   50[COMRAM] PTR struct lnQueue
  3012 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3013 ;;  lnMessage       2   52[COMRAM] PTR struct lnMessage
  3014 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3015 ;;  checksum        1   54[COMRAM] unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        7 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 3
  3034 ;; This function calls:
  3035 ;;		_enQueue
  3036 ;;		_free
  3037 ;;		_makeDeepCopy
  3038 ;;		_startCmpDelay
  3039 ;;		_startLinebreak
  3040 ;; This function is called by:
  3041 ;;		_rxHandler
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text19
  3046   0020BA                     __ptext19:
  3047                           	callstack 0
  3048   0020BA                     _rxChecksum:
  3049                           	callstack 20
  3050   0020BA                     
  3051                           ;ln.c: 295: void rxChecksum(lnQueue_t* lnQueue, lnMessage_t* lnMessage, uint8_t checksum
      +                          );ln.c: 296: {;ln.c: 297:     if ((lnMessage->checksum + checksum) == 0xff)
  3052   0020BA  EE20 F002          	lfsr	2,2
  3053   0020BE  5035               	movf	rxChecksum@lnMessage^0,w,c
  3054   0020C0  26D9               	addwf	fsr2l,f,c
  3055   0020C2  5036               	movf	(rxChecksum@lnMessage+1)^0,w,c
  3056   0020C4  22DA               	addwfc	fsr2h,f,c
  3057   0020C6  50DF               	movf	indf2,w,c
  3058   0020C8  6E38               	movwf	??_rxChecksum^0,c
  3059   0020CA  6A39               	clrf	(??_rxChecksum+1)^0,c
  3060   0020CC  5037               	movf	rxChecksum@checksum^0,w,c
  3061   0020CE  2638               	addwf	??_rxChecksum^0,f,c
  3062   0020D0  0E00               	movlw	0
  3063   0020D2  2239               	addwfc	(??_rxChecksum+1)^0,f,c
  3064   0020D4  2838               	incf	??_rxChecksum^0,w,c
  3065   0020D6  1039               	iorwf	(??_rxChecksum+1)^0,w,c
  3066   0020D8  A4D8               	btfss	status,2,c
  3067   0020DA  EF71  F010         	goto	i1u209_21
  3068   0020DE  EF73  F010         	goto	i1u209_20
  3069   0020E2                     i1u209_21:
  3070   0020E2  EF87  F010         	goto	i1l2537
  3071   0020E6                     i1u209_20:
  3072   0020E6                     
  3073                           ;ln.c: 298:     {;ln.c: 300:         enQueue(lnQueue, makeDeepCopy(lnMessage));
  3074   0020E6  C033  F02A         	movff	rxChecksum@lnQueue,enQueue@q
  3075   0020EA  C034  F02B         	movff	rxChecksum@lnQueue+1,enQueue@q+1
  3076   0020EE  C035  F021         	movff	rxChecksum@lnMessage,makeDeepCopy@lnMessageOrig
  3077   0020F2  C036  F022         	movff	rxChecksum@lnMessage+1,makeDeepCopy@lnMessageOrig+1
  3078   0020F6  EC36  F00E         	call	_makeDeepCopy	;wreg free
  3079   0020FA  C021  F02C         	movff	?_makeDeepCopy,enQueue@value
  3080   0020FE  C022  F02D         	movff	?_makeDeepCopy+1,enQueue@value+1
  3081   002102  ECB7  F00E         	call	_enQueue	;wreg free
  3082   002106                     
  3083                           ;ln.c: 302:         startCmpDelay();
  3084   002106  ECA3  F011         	call	_startCmpDelay	;wreg free
  3085                           
  3086                           ;ln.c: 303:     }
  3087   00210A  EF89  F010         	goto	i1l2539
  3088   00210E                     i1l2537:
  3089                           
  3090                           ;ln.c: 305:     {;ln.c: 308:         startLinebreak();
  3091   00210E  EC52  F012         	call	_startLinebreak	;wreg free
  3092   002112                     i1l2539:
  3093                           
  3094                           ;ln.c: 311:     free(lnMessage->lnData);
  3095   002112  EE20 F003          	lfsr	2,3
  3096   002116  5035               	movf	rxChecksum@lnMessage^0,w,c
  3097   002118  26D9               	addwf	fsr2l,f,c
  3098   00211A  5036               	movf	(rxChecksum@lnMessage+1)^0,w,c
  3099   00211C  22DA               	addwfc	fsr2h,f,c
  3100   00211E  CFDE F001          	movff	postinc2,free@ptr
  3101   002122  CFDD F002          	movff	postdec2,free@ptr+1
  3102   002126  ECDE  F00C         	call	_free	;wreg free
  3103   00212A                     
  3104                           ;ln.c: 312:     free(lnMessage);
  3105   00212A  C035  F001         	movff	rxChecksum@lnMessage,free@ptr
  3106   00212E  C036  F002         	movff	rxChecksum@lnMessage+1,free@ptr+1
  3107   002132  ECDE  F00C         	call	_free	;wreg free
  3108   002136                     
  3109                           ;ln.c: 314:     lnRxCounter = 0;
  3110   002136  0E00               	movlw	0
  3111   002138  6E55               	movwf	_lnRxCounter^0,c
  3112   00213A  0012               	return		;funcret
  3113   00213C                     __end_of_rxChecksum:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _startLinebreak *****************
  3117 ;; Defined at:
  3118 ;;		line 434 in file "ln.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_lnIsrRc
  3142 ;;		_rxChecksum
  3143 ;;		_txHandler
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text20
  3148   0024A4                     __ptext20:
  3149                           	callstack 0
  3150   0024A4                     _startLinebreak:
  3151                           	callstack 23
  3152   0024A4                     
  3153                           ;ln.c: 437:     RCSTAbits.SPEN = 0;
  3154   0024A4  9EAB               	bcf	171,7,c	;volatile
  3155                           
  3156                           ;ln.c: 438:     PORTCbits.RC6 = 1;
  3157   0024A6  8C82               	bsf	130,6,c	;volatile
  3158   0024A8                     
  3159                           ;ln.c: 440:     ((void)(TMR1H=((~900)>>8),TMR1L=((~900)&0xFF)));
  3160   0024A8  0EFC               	movlw	252
  3161   0024AA  6ECF               	movwf	207,c	;volatile
  3162   0024AC  0E7B               	movlw	123
  3163   0024AE  6ECE               	movwf	206,c	;volatile
  3164                           
  3165                           ;ln.c: 441:     LNCONbits.TMR1_MODE = 2;
  3166   0024B0  5057               	movf	_LNCONbits^0,w,c
  3167   0024B2  0BFC               	andlw	-4
  3168   0024B4  0902               	iorlw	2
  3169   0024B6  6E57               	movwf	_LNCONbits^0,c
  3170   0024B8  0012               	return		;funcret
  3171   0024BA                     __end_of_startLinebreak:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _startCmpDelay *****************
  3175 ;; Defined at:
  3176 ;;		line 419 in file "ln.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  delay           2    6[COMRAM] unsigned short 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;Total ram usage:        4 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 1
  3197 ;; This function calls:
  3198 ;;		_getRandomValue
  3199 ;; This function is called by:
  3200 ;;		_lnIsrTmr1
  3201 ;;		_rxChecksum
  3202 ;;		_txHandler
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text21
  3207   002346                     __ptext21:
  3208                           	callstack 0
  3209   002346                     _startCmpDelay:
  3210                           	callstack 22
  3211   002346                     
  3212                           ;ln.c: 422:     uint16_t delay = getRandomValue(lastRandomValue);
  3213   002346  C051  F001         	movff	_lastRandomValue,getRandomValue@lfsr
  3214   00234A  C052  F002         	movff	_lastRandomValue+1,getRandomValue@lfsr+1
  3215   00234E  ECED  F011         	call	_getRandomValue	;wreg free
  3216   002352  C001  F007         	movff	?_getRandomValue,startCmpDelay@delay
  3217   002356  C002  F008         	movff	?_getRandomValue+1,startCmpDelay@delay+1
  3218   00235A                     
  3219                           ;ln.c: 423:     lastRandomValue = delay;
  3220   00235A  C007  F051         	movff	startCmpDelay@delay,_lastRandomValue
  3221   00235E  C008  F052         	movff	startCmpDelay@delay+1,_lastRandomValue+1
  3222   002362                     
  3223                           ;ln.c: 424:     delay &= 0x03ff;
  3224   002362  0EFF               	movlw	255
  3225   002364  1607               	andwf	startCmpDelay@delay^0,f,c
  3226   002366  0E03               	movlw	3
  3227   002368  1608               	andwf	(startCmpDelay@delay+1)^0,f,c
  3228   00236A                     
  3229                           ;ln.c: 425:     delay += 1560u;
  3230   00236A  0E18               	movlw	24
  3231   00236C  2607               	addwf	startCmpDelay@delay^0,f,c
  3232   00236E  0E06               	movlw	6
  3233   002370  2208               	addwfc	(startCmpDelay@delay+1)^0,f,c
  3234   002372                     
  3235                           ;ln.c: 426:     ((void)(TMR1H=((~delay)>>8),TMR1L=((~delay)&0xFF)));
  3236   002372  1C07               	comf	startCmpDelay@delay^0,w,c
  3237   002374  6E05               	movwf	??_startCmpDelay^0,c
  3238   002376  1C08               	comf	(startCmpDelay@delay+1)^0,w,c
  3239   002378  6E06               	movwf	(??_startCmpDelay+1)^0,c
  3240   00237A  C006  F005         	movff	??_startCmpDelay+1,??_startCmpDelay
  3241   00237E  6A06               	clrf	(??_startCmpDelay+1)^0,c
  3242   002380  5005               	movf	??_startCmpDelay^0,w,c
  3243   002382  6ECF               	movwf	207,c	;volatile
  3244   002384  5007               	movf	startCmpDelay@delay^0,w,c
  3245   002386  0AFF               	xorlw	255
  3246   002388  6ECE               	movwf	206,c	;volatile
  3247   00238A                     
  3248                           ;ln.c: 428:     LNCONbits.TMR1_MODE = 1;
  3249   00238A  5057               	movf	_LNCONbits^0,w,c
  3250   00238C  0BFC               	andlw	-4
  3251   00238E  0901               	iorlw	1
  3252   002390  6E57               	movwf	_LNCONbits^0,c
  3253   002392  0012               	return		;funcret
  3254   002394                     __end_of_startCmpDelay:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _getRandomValue *****************
  3258 ;; Defined at:
  3259 ;;		line 449 in file "ln.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  lfsr            2    0[COMRAM] unsigned short 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  lsb             2    2[COMRAM] unsigned int 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2    0[COMRAM] unsigned short 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_startCmpDelay
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text22
  3287   0023DA                     __ptext22:
  3288                           	callstack 0
  3289   0023DA                     _getRandomValue:
  3290                           	callstack 22
  3291   0023DA                     
  3292                           ;ln.c: 449: uint16_t getRandomValue(uint16_t lfsr);ln.c: 450: {;ln.c: 456:     unsigned 
      +                          lsb = lfsr & 1u;
  3293   0023DA  0E01               	movlw	1
  3294   0023DC  1401               	andwf	getRandomValue@lfsr^0,w,c
  3295   0023DE  6E03               	movwf	getRandomValue@lsb^0,c
  3296   0023E0  6A04               	clrf	(getRandomValue@lsb+1)^0,c
  3297   0023E2                     
  3298                           ;ln.c: 457:     lfsr >>= 1;
  3299   0023E2  90D8               	bcf	status,0,c
  3300   0023E4  3202               	rrcf	(getRandomValue@lfsr+1)^0,f,c
  3301   0023E6  3201               	rrcf	getRandomValue@lfsr^0,f,c
  3302   0023E8                     
  3303                           ;ln.c: 458:     if (lsb)
  3304   0023E8  5003               	movf	getRandomValue@lsb^0,w,c
  3305   0023EA  1004               	iorwf	(getRandomValue@lsb+1)^0,w,c
  3306   0023EC  B4D8               	btfsc	status,2,c
  3307   0023EE  EFFB  F011         	goto	i1u162_21
  3308   0023F2  EFFD  F011         	goto	i1u162_20
  3309   0023F6                     i1u162_21:
  3310   0023F6  EF01  F012         	goto	i1l2193
  3311   0023FA                     i1u162_20:
  3312   0023FA                     
  3313                           ;ln.c: 459:     {;ln.c: 460:         lfsr ^= 0xB400u;
  3314   0023FA  0E00               	movlw	0
  3315   0023FC  1A01               	xorwf	getRandomValue@lfsr^0,f,c
  3316   0023FE  0EB4               	movlw	180
  3317   002400  1A02               	xorwf	(getRandomValue@lfsr+1)^0,f,c
  3318   002402                     i1l2193:
  3319                           
  3320                           ;ln.c: 462:     return lfsr;
  3321   002402  C001  F001         	movff	getRandomValue@lfsr,?_getRandomValue
  3322   002406  C002  F002         	movff	getRandomValue@lfsr+1,?_getRandomValue+1
  3323   00240A  0012               	return		;funcret
  3324   00240C                     __end_of_getRandomValue:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _makeDeepCopy *****************
  3328 ;; Defined at:
  3329 ;;		line 94 in file "circular_queue.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  lnMessageOri    2   32[COMRAM] PTR struct lnMessage
  3332 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  i               1   38[COMRAM] unsigned char 
  3335 ;;  lnMessageCop    2   39[COMRAM] PTR struct lnMessage
  3336 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2   32[COMRAM] PTR struct lnMessage
  3339 ;; Registers used:
  3340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:        9 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 2
  3353 ;; This function calls:
  3354 ;;		i1_malloc
  3355 ;; This function is called by:
  3356 ;;		_rxChecksum
  3357 ;;		_sendLnMessage
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text23
  3362   001C6C                     __ptext23:
  3363                           	callstack 0
  3364   001C6C                     _makeDeepCopy:
  3365                           	callstack 20
  3366   001C6C                     
  3367                           ;circular_queue.c: 94: lnMessage_t* makeDeepCopy(lnMessage_t* lnMessageOrig);circular_qu
      +                          eue.c: 95: {;circular_queue.c: 98:     lnMessage_t* lnMessageCopy;;circular_queue.c: 99:
      +                               lnMessageCopy = malloc(sizeof(struct lnMessage));
  3368   001C6C  0E00               	movlw	0
  3369   001C6E  6E16               	movwf	(i1malloc@n+1)^0,c
  3370   001C70  0E05               	movlw	5
  3371   001C72  6E15               	movwf	i1malloc@n^0,c
  3372   001C74  EC2D  F00C         	call	i1_malloc	;wreg free
  3373   001C78  C015  F028         	movff	?i1_malloc,makeDeepCopy@lnMessageCopy
  3374   001C7C  C016  F029         	movff	?i1_malloc+1,makeDeepCopy@lnMessageCopy+1
  3375   001C80                     
  3376                           ;circular_queue.c: 102:     lnMessageCopy->opCode = lnMessageOrig->opCode;
  3377   001C80  EE20 F001          	lfsr	2,1
  3378   001C84  5021               	movf	makeDeepCopy@lnMessageOrig^0,w,c
  3379   001C86  26D9               	addwf	fsr2l,f,c
  3380   001C88  5022               	movf	(makeDeepCopy@lnMessageOrig+1)^0,w,c
  3381   001C8A  22DA               	addwfc	fsr2h,f,c
  3382   001C8C  EE10 F001          	lfsr	1,1
  3383   001C90  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3384   001C92  26E1               	addwf	fsr1l,f,c
  3385   001C94  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3386   001C96  22E2               	addwfc	fsr1h,f,c
  3387   001C98  CFDF FFE7          	movff	indf2,indf1
  3388   001C9C                     
  3389                           ;circular_queue.c: 103:     lnMessageCopy->checksum = lnMessageOrig->checksum;
  3390   001C9C  EE20 F002          	lfsr	2,2
  3391   001CA0  5021               	movf	makeDeepCopy@lnMessageOrig^0,w,c
  3392   001CA2  26D9               	addwf	fsr2l,f,c
  3393   001CA4  5022               	movf	(makeDeepCopy@lnMessageOrig+1)^0,w,c
  3394   001CA6  22DA               	addwfc	fsr2h,f,c
  3395   001CA8  EE10 F002          	lfsr	1,2
  3396   001CAC  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3397   001CAE  26E1               	addwf	fsr1l,f,c
  3398   001CB0  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3399   001CB2  22E2               	addwfc	fsr1h,f,c
  3400   001CB4  CFDF FFE7          	movff	indf2,indf1
  3401   001CB8                     
  3402                           ;circular_queue.c: 104:     lnMessageCopy->size = lnMessageOrig->size;
  3403   001CB8  C021  FFD9         	movff	makeDeepCopy@lnMessageOrig,fsr2l
  3404   001CBC  C022  FFDA         	movff	makeDeepCopy@lnMessageOrig+1,fsr2h
  3405   001CC0  C028  FFE1         	movff	makeDeepCopy@lnMessageCopy,fsr1l
  3406   001CC4  C029  FFE2         	movff	makeDeepCopy@lnMessageCopy+1,fsr1h
  3407   001CC8  CFDF FFE7          	movff	indf2,indf1
  3408   001CCC                     
  3409                           ;circular_queue.c: 109:     lnMessageCopy->lnData = malloc(sizeof(uint8_t) * lnMessageCo
      +                          py->size);
  3410   001CCC  C028  FFD9         	movff	makeDeepCopy@lnMessageCopy,fsr2l
  3411   001CD0  C029  FFDA         	movff	makeDeepCopy@lnMessageCopy+1,fsr2h
  3412   001CD4  50DF               	movf	indf2,w,c
  3413   001CD6  6E23               	movwf	??_makeDeepCopy^0,c
  3414   001CD8  5023               	movf	??_makeDeepCopy^0,w,c
  3415   001CDA  0D01               	mullw	1
  3416   001CDC  CFF3 F015          	movff	prodl,i1malloc@n
  3417   001CE0  CFF4 F016          	movff	prodh,i1malloc@n+1
  3418   001CE4  EC2D  F00C         	call	i1_malloc	;wreg free
  3419   001CE8  EE20 F003          	lfsr	2,3
  3420   001CEC  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3421   001CEE  26D9               	addwf	fsr2l,f,c
  3422   001CF0  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3423   001CF2  22DA               	addwfc	fsr2h,f,c
  3424   001CF4  C015  FFDE         	movff	?i1_malloc,postinc2
  3425   001CF8  C016  FFDD         	movff	?i1_malloc+1,postdec2
  3426   001CFC                     
  3427                           ;circular_queue.c: 110:     for (uint8_t i = 0; i < lnMessageCopy->size; i++)
  3428   001CFC  0E00               	movlw	0
  3429   001CFE  6E27               	movwf	makeDeepCopy@i^0,c
  3430   001D00  EFA5  F00E         	goto	i1l2357
  3431   001D04                     i1l2353:
  3432                           
  3433                           ;circular_queue.c: 111:     {;circular_queue.c: 112:         lnMessageCopy->lnData[i] = 
      +                          lnMessageOrig->lnData[i];
  3434   001D04  EE20 F003          	lfsr	2,3
  3435   001D08  5021               	movf	makeDeepCopy@lnMessageOrig^0,w,c
  3436   001D0A  26D9               	addwf	fsr2l,f,c
  3437   001D0C  5022               	movf	(makeDeepCopy@lnMessageOrig+1)^0,w,c
  3438   001D0E  22DA               	addwfc	fsr2h,f,c
  3439   001D10  CFDE F023          	movff	postinc2,??_makeDeepCopy
  3440   001D14  CFDD F024          	movff	postdec2,??_makeDeepCopy+1
  3441   001D18  5027               	movf	makeDeepCopy@i^0,w,c
  3442   001D1A  2423               	addwf	??_makeDeepCopy^0,w,c
  3443   001D1C  6ED9               	movwf	fsr2l,c
  3444   001D1E  0E00               	movlw	0
  3445   001D20  2024               	addwfc	(??_makeDeepCopy+1)^0,w,c
  3446   001D22  6EDA               	movwf	fsr2h,c
  3447   001D24  EE10 F003          	lfsr	1,3
  3448   001D28  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3449   001D2A  26E1               	addwf	fsr1l,f,c
  3450   001D2C  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3451   001D2E  22E2               	addwfc	fsr1h,f,c
  3452   001D30  CFE6 F025          	movff	postinc1,??_makeDeepCopy+2
  3453   001D34  CFE5 F026          	movff	postdec1,??_makeDeepCopy+3
  3454   001D38  5027               	movf	makeDeepCopy@i^0,w,c
  3455   001D3A  2425               	addwf	(??_makeDeepCopy+2)^0,w,c
  3456   001D3C  6EE1               	movwf	fsr1l,c
  3457   001D3E  0E00               	movlw	0
  3458   001D40  2026               	addwfc	(??_makeDeepCopy+3)^0,w,c
  3459   001D42  6EE2               	movwf	fsr1h,c
  3460   001D44  CFDF FFE7          	movff	indf2,indf1
  3461   001D48                     
  3462                           ;circular_queue.c: 113:     }
  3463   001D48  2A27               	incf	makeDeepCopy@i^0,f,c
  3464   001D4A                     i1l2357:
  3465   001D4A  C028  FFD9         	movff	makeDeepCopy@lnMessageCopy,fsr2l
  3466   001D4E  C029  FFDA         	movff	makeDeepCopy@lnMessageCopy+1,fsr2h
  3467   001D52  50DE               	movf	postinc2,w,c
  3468   001D54  5C27               	subwf	makeDeepCopy@i^0,w,c
  3469   001D56  A0D8               	btfss	status,0,c
  3470   001D58  EFB0  F00E         	goto	i1u182_21
  3471   001D5C  EFB2  F00E         	goto	i1u182_20
  3472   001D60                     i1u182_21:
  3473   001D60  EF82  F00E         	goto	i1l2353
  3474   001D64                     i1u182_20:
  3475   001D64                     
  3476                           ;circular_queue.c: 116:     return lnMessageCopy;
  3477   001D64  C028  F021         	movff	makeDeepCopy@lnMessageCopy,?_makeDeepCopy
  3478   001D68  C029  F022         	movff	makeDeepCopy@lnMessageCopy+1,?_makeDeepCopy+1
  3479   001D6C  0012               	return		;funcret
  3480   001D6E                     __end_of_makeDeepCopy:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function i1_malloc *****************
  3484 ;; Defined at:
  3485 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_malloc.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  n               2   20[COMRAM] unsigned int 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  new             2   30[COMRAM] PTR unsigned char 
  3490 ;;		 -> __heap_hi(0), NULL(0), 
  3491 ;;  p               2   28[COMRAM] PTR void 
  3492 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3493 ;;  size            2    0        unsigned int 
  3494 ;;  sz              2   26[COMRAM] PTR unsigned int 
  3495 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3496 ;;  m               2   24[COMRAM] unsigned int 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   20[COMRAM] PTR void 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;Total ram usage:       12 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 1
  3513 ;; This function calls:
  3514 ;;		i1___expand_heap
  3515 ;;		i1___simple_search_fl
  3516 ;; This function is called by:
  3517 ;;		_rxHandler
  3518 ;;		_makeDeepCopy
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text24
  3523   00185A                     __ptext24:
  3524                           	callstack 0
  3525   00185A                     i1_malloc:
  3526                           	callstack 22
  3527   00185A  5015               	movf	i1malloc@n^0,w,c
  3528   00185C  1016               	iorwf	(i1malloc@n+1)^0,w,c
  3529   00185E  A4D8               	btfss	status,2,c
  3530   001860  EF34  F00C         	goto	i1u171_21
  3531   001864  EF36  F00C         	goto	i1u171_20
  3532   001868                     i1u171_21:
  3533   001868  EF38  F00C         	goto	i1l2245
  3534   00186C                     i1u171_20:
  3535   00186C  4A15               	infsnz	i1malloc@n^0,f,c
  3536   00186E  2A16               	incf	(i1malloc@n+1)^0,f,c
  3537   001870                     i1l2245:
  3538   001870  5016               	movf	(i1malloc@n+1)^0,w,c
  3539   001872  E107               	bnz	i1u172_21
  3540   001874  0E03               	movlw	3
  3541   001876  5C15               	subwf	i1malloc@n^0,w,c
  3542   001878  B0D8               	btfsc	status,0,c
  3543   00187A  EF41  F00C         	goto	i1u172_21
  3544   00187E  EF43  F00C         	goto	i1u172_20
  3545   001882                     i1u172_21:
  3546   001882  EF49  F00C         	goto	i1l2249
  3547   001886                     i1u172_20:
  3548   001886  0E00               	movlw	0
  3549   001888  6E16               	movwf	(i1malloc@n+1)^0,c
  3550   00188A  0E03               	movlw	3
  3551   00188C  6E15               	movwf	i1malloc@n^0,c
  3552   00188E  EF62  F00C         	goto	i1l2257
  3553   001892                     i1l2249:
  3554   001892  1C15               	comf	i1malloc@n^0,w,c
  3555   001894  6E17               	movwf	??i1_malloc^0,c
  3556   001896  1C16               	comf	(i1malloc@n+1)^0,w,c
  3557   001898  6E18               	movwf	(??i1_malloc+1)^0,c
  3558   00189A  5018               	movf	(??i1_malloc+1)^0,w,c
  3559   00189C  E107               	bnz	i1u173_21
  3560   00189E  0E02               	movlw	2
  3561   0018A0  5C17               	subwf	??i1_malloc^0,w,c
  3562   0018A2  B0D8               	btfsc	status,0,c
  3563   0018A4  EF56  F00C         	goto	i1u173_21
  3564   0018A8  EF58  F00C         	goto	i1u173_20
  3565   0018AC                     i1u173_21:
  3566   0018AC  EF62  F00C         	goto	i1l2257
  3567   0018B0                     i1u173_20:
  3568   0018B0  0E00               	movlw	0
  3569   0018B2  6E4C               	movwf	(_errno+1)^0,c
  3570   0018B4  0E0C               	movlw	12
  3571   0018B6  6E4B               	movwf	_errno^0,c
  3572   0018B8                     i1l2253:
  3573   0018B8  0E00               	movlw	0
  3574   0018BA  6E15               	movwf	?i1_malloc^0,c
  3575   0018BC  0E00               	movlw	0
  3576   0018BE  6E16               	movwf	(?i1_malloc+1)^0,c
  3577   0018C0  EFDD  F00C         	goto	i1l1010
  3578   0018C4                     i1l2257:
  3579   0018C4  C015  F001         	movff	i1malloc@n,i1___simple_search_fl@n
  3580   0018C8  C016  F002         	movff	i1malloc@n+1,i1___simple_search_fl@n+1
  3581   0018CC  EC01  F008         	call	i1___simple_search_fl	;wreg free
  3582   0018D0  C001  F01D         	movff	?i1___simple_search_fl,i1malloc@p
  3583   0018D4  C002  F01E         	movff	?i1___simple_search_fl+1,i1malloc@p+1
  3584   0018D8  501D               	movf	i1malloc@p^0,w,c
  3585   0018DA  101E               	iorwf	(i1malloc@p+1)^0,w,c
  3586   0018DC  A4D8               	btfss	status,2,c
  3587   0018DE  EF73  F00C         	goto	i1u174_21
  3588   0018E2  EF75  F00C         	goto	i1u174_20
  3589   0018E6                     i1u174_21:
  3590   0018E6  EFD9  F00C         	goto	i1l2289
  3591   0018EA                     i1u174_20:
  3592   0018EA  0100               	movlb	0	; () banked
  3593   0018EC  51AA               	movf	malloc@cur& (0+255),w,b
  3594   0018EE  5DA8               	subwf	malloc@end& (0+255),w,b
  3595   0018F0  6E17               	movwf	??i1_malloc^0,c
  3596   0018F2  51AB               	movf	(malloc@cur+1)& (0+255),w,b
  3597   0018F4  59A9               	subwfb	(malloc@end+1)& (0+255),w,b
  3598   0018F6  6E18               	movwf	(??i1_malloc+1)^0,c
  3599   0018F8  5015               	movf	i1malloc@n^0,w,c
  3600   0018FA  5C17               	subwf	??i1_malloc^0,w,c
  3601   0018FC  5016               	movf	(i1malloc@n+1)^0,w,c
  3602   0018FE  5818               	subwfb	(??i1_malloc+1)^0,w,c
  3603   001900  B0D8               	btfsc	status,0,c
  3604   001902  EF85  F00C         	goto	i1u175_21
  3605   001906  EF87  F00C         	goto	i1u175_20
  3606   00190A                     i1u175_21:
  3607   00190A  EFB7  F00C         	goto	i1l1012
  3608   00190E                     i1u175_20:
  3609   00190E                     
  3610                           ; BSR set to: 0
  3611   00190E  0E02               	movlw	2
  3612   001910  2415               	addwf	i1malloc@n^0,w,c
  3613   001912  6E19               	movwf	i1malloc@m^0,c
  3614   001914  0E00               	movlw	0
  3615   001916  2016               	addwfc	(i1malloc@n+1)^0,w,c
  3616   001918  6E1A               	movwf	(i1malloc@m+1)^0,c
  3617   00191A                     
  3618                           ; BSR set to: 0
  3619   00191A  0E19               	movlw	low i1malloc@m
  3620   00191C  6E01               	movwf	i1___expand_heap@pn^0,c
  3621   00191E  ECC3  F00F         	call	i1___expand_heap	;wreg free
  3622   001922  C001  F01F         	movff	?i1___expand_heap,i1malloc@new
  3623   001926  C002  F020         	movff	?i1___expand_heap+1,i1malloc@new+1
  3624   00192A  501F               	movf	i1malloc@new^0,w,c
  3625   00192C  1020               	iorwf	(i1malloc@new+1)^0,w,c
  3626   00192E  A4D8               	btfss	status,2,c
  3627   001930  EF9C  F00C         	goto	i1u176_21
  3628   001934  EF9E  F00C         	goto	i1u176_20
  3629   001938                     i1u176_21:
  3630   001938  EFA0  F00C         	goto	i1l2275
  3631   00193C                     i1u176_20:
  3632   00193C  EF5C  F00C         	goto	i1l2253
  3633   001940                     i1l2275:
  3634   001940  0100               	movlb	0	; () banked
  3635   001942  51A8               	movf	malloc@end& (0+255),w,b
  3636   001944  181F               	xorwf	i1malloc@new^0,w,c
  3637   001946  E109               	bnz	i1u177_20
  3638   001948  51A9               	movf	(malloc@end+1)& (0+255),w,b
  3639   00194A  1820               	xorwf	(i1malloc@new+1)^0,w,c
  3640   00194C  B4D8               	btfsc	status,2,c
  3641   00194E  EFAB  F00C         	goto	i1u177_21
  3642   001952  EFAD  F00C         	goto	i1u177_20
  3643   001956                     i1u177_21:
  3644   001956  EFB1  F00C         	goto	i1l1014
  3645   00195A                     i1u177_20:
  3646   00195A                     
  3647                           ; BSR set to: 0
  3648   00195A  C01F  F0AA         	movff	i1malloc@new,malloc@cur
  3649   00195E  C020  F0AB         	movff	i1malloc@new+1,malloc@cur+1
  3650   001962                     i1l1014:
  3651                           
  3652                           ; BSR set to: 0
  3653   001962  5019               	movf	i1malloc@m^0,w,c
  3654   001964  241F               	addwf	i1malloc@new^0,w,c
  3655   001966  6FA8               	movwf	malloc@end& (0+255),b
  3656   001968  501A               	movf	(i1malloc@m+1)^0,w,c
  3657   00196A  2020               	addwfc	(i1malloc@new+1)^0,w,c
  3658   00196C  6FA9               	movwf	(malloc@end+1)& (0+255),b
  3659   00196E                     i1l1012:
  3660                           
  3661                           ; BSR set to: 0
  3662   00196E  C0AA  F01D         	movff	malloc@cur,i1malloc@p
  3663   001972  C0AB  F01E         	movff	malloc@cur+1,i1malloc@p+1
  3664   001976                     
  3665                           ; BSR set to: 0
  3666   001976  C01D  F01B         	movff	i1malloc@p,i1malloc@sz
  3667   00197A  C01E  F01C         	movff	i1malloc@p+1,i1malloc@sz+1
  3668   00197E                     
  3669                           ; BSR set to: 0
  3670   00197E  C01B  FFD9         	movff	i1malloc@sz,fsr2l
  3671   001982  C01C  FFDA         	movff	i1malloc@sz+1,fsr2h
  3672   001986  C015  FFDE         	movff	i1malloc@n,postinc2
  3673   00198A  C016  FFDD         	movff	i1malloc@n+1,postdec2
  3674   00198E                     
  3675                           ; BSR set to: 0
  3676   00198E  0E02               	movlw	2
  3677   001990  261B               	addwf	i1malloc@sz^0,f,c
  3678   001992  0E00               	movlw	0
  3679   001994  221C               	addwfc	(i1malloc@sz+1)^0,f,c
  3680   001996                     
  3681                           ; BSR set to: 0
  3682   001996  C01B  F01D         	movff	i1malloc@sz,i1malloc@p
  3683   00199A  C01C  F01E         	movff	i1malloc@sz+1,i1malloc@p+1
  3684   00199E                     
  3685                           ; BSR set to: 0
  3686   00199E  0E02               	movlw	2
  3687   0019A0  2415               	addwf	i1malloc@n^0,w,c
  3688   0019A2  6E17               	movwf	??i1_malloc^0,c
  3689   0019A4  0E00               	movlw	0
  3690   0019A6  2016               	addwfc	(i1malloc@n+1)^0,w,c
  3691   0019A8  6E18               	movwf	(??i1_malloc+1)^0,c
  3692   0019AA  5017               	movf	??i1_malloc^0,w,c
  3693   0019AC  27AA               	addwf	malloc@cur& (0+255),f,b
  3694   0019AE  5018               	movf	(??i1_malloc+1)^0,w,c
  3695   0019B0  23AB               	addwfc	(malloc@cur+1)& (0+255),f,b
  3696   0019B2                     i1l2289:
  3697   0019B2  C01D  F015         	movff	i1malloc@p,?i1_malloc
  3698   0019B6  C01E  F016         	movff	i1malloc@p+1,?i1_malloc+1
  3699   0019BA                     i1l1010:
  3700   0019BA  0012               	return		;funcret
  3701   0019BC                     __end_ofi1_malloc:
  3702                           	callstack 0
  3703                           
  3704 ;; *************** function i1___simple_search_fl *****************
  3705 ;; Defined at:
  3706 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  n               2    0[COMRAM] unsigned int 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  best            2   18[COMRAM] PTR struct chunk
  3711 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3712 ;;  c               2   16[COMRAM] PTR struct chunk
  3713 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3714 ;;  next            2   14[COMRAM] PTR struct chunk
  3715 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3716 ;;  last            2   12[COMRAM] PTR struct chunk
  3717 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3718 ;;  split           2   10[COMRAM] PTR struct chunk
  3719 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3720 ;;  best_last       2    8[COMRAM] PTR struct chunk
  3721 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3722 ;;  remaining_si    2    6[COMRAM] unsigned int 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2    0[COMRAM] PTR void 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:       20 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		i1_malloc
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text25
  3746   001002                     __ptext25:
  3747                           	callstack 0
  3748   001002                     i1___simple_search_fl:
  3749                           	callstack 22
  3750   001002  0E00               	movlw	0
  3751   001004  6E13               	movwf	i1___simple_search_fl@best^0,c
  3752   001006  0E00               	movlw	0
  3753   001008  6E14               	movwf	(i1___simple_search_fl@best+1)^0,c
  3754   00100A  0E00               	movlw	0
  3755   00100C  6E09               	movwf	i1___simple_search_fl@best_last^0,c
  3756   00100E  0E00               	movlw	0
  3757   001010  6E0A               	movwf	(i1___simple_search_fl@best_last+1)^0,c
  3758   001012  0E00               	movlw	0
  3759   001014  6E0D               	movwf	i1___simple_search_fl@last^0,c
  3760   001016  0E00               	movlw	0
  3761   001018  6E0E               	movwf	(i1___simple_search_fl@last+1)^0,c
  3762   00101A  0100               	movlb	0	; () banked
  3763   00101C  51AC               	movf	___freelist& (0+255),w,b
  3764   00101E  11AD               	iorwf	(___freelist+1)& (0+255),w,b
  3765   001020  A4D8               	btfss	status,2,c
  3766   001022  EF15  F008         	goto	i1u148_21
  3767   001026  EF17  F008         	goto	i1u148_20
  3768   00102A                     i1u148_21:
  3769   00102A  EF1D  F008         	goto	i1l2109
  3770   00102E                     i1u148_20:
  3771   00102E                     i1l2105:
  3772   00102E  0E00               	movlw	0
  3773   001030  6E01               	movwf	?i1___simple_search_fl^0,c
  3774   001032  0E00               	movlw	0
  3775   001034  6E02               	movwf	(?i1___simple_search_fl+1)^0,c
  3776   001036  EF3D  F009         	goto	i1l969
  3777   00103A                     i1l2109:
  3778                           
  3779                           ; BSR set to: 0
  3780   00103A  C0AC  F011         	movff	___freelist,i1___simple_search_fl@c
  3781   00103E  C0AD  F012         	movff	___freelist+1,i1___simple_search_fl@c+1
  3782   001042  EFA3  F008         	goto	i1l2135
  3783   001046                     i1l2111:
  3784   001046  C011  FFD9         	movff	i1___simple_search_fl@c,fsr2l
  3785   00104A  C012  FFDA         	movff	i1___simple_search_fl@c+1,fsr2h
  3786   00104E  5001               	movf	i1___simple_search_fl@n^0,w,c
  3787   001050  18DE               	xorwf	postinc2,w,c
  3788   001052  E107               	bnz	i1u149_21
  3789   001054  5002               	movf	(i1___simple_search_fl@n+1)^0,w,c
  3790   001056  18DE               	xorwf	postinc2,w,c
  3791   001058  A4D8               	btfss	status,2,c
  3792   00105A  EF31  F008         	goto	i1u149_21
  3793   00105E  EF33  F008         	goto	i1u149_20
  3794   001062                     i1u149_21:
  3795   001062  EF60  F008         	goto	i1l2123
  3796   001066                     i1u149_20:
  3797   001066  500D               	movf	i1___simple_search_fl@last^0,w,c
  3798   001068  100E               	iorwf	(i1___simple_search_fl@last+1)^0,w,c
  3799   00106A  B4D8               	btfsc	status,2,c
  3800   00106C  EF3A  F008         	goto	i1u150_21
  3801   001070  EF3C  F008         	goto	i1u150_20
  3802   001074                     i1u150_21:
  3803   001074  EF4E  F008         	goto	i1l2117
  3804   001078                     i1u150_20:
  3805   001078  EE20 F002          	lfsr	2,2
  3806   00107C  5011               	movf	i1___simple_search_fl@c^0,w,c
  3807   00107E  26D9               	addwf	fsr2l,f,c
  3808   001080  5012               	movf	(i1___simple_search_fl@c+1)^0,w,c
  3809   001082  22DA               	addwfc	fsr2h,f,c
  3810   001084  EE10 F002          	lfsr	1,2
  3811   001088  500D               	movf	i1___simple_search_fl@last^0,w,c
  3812   00108A  26E1               	addwf	fsr1l,f,c
  3813   00108C  500E               	movf	(i1___simple_search_fl@last+1)^0,w,c
  3814   00108E  22E2               	addwfc	fsr1h,f,c
  3815   001090  CFDE FFE6          	movff	postinc2,postinc1
  3816   001094  CFDD FFE5          	movff	postdec2,postdec1
  3817   001098  EF58  F008         	goto	i1l2119
  3818   00109C                     i1l2117:
  3819   00109C  EE20 F002          	lfsr	2,2
  3820   0010A0  5011               	movf	i1___simple_search_fl@c^0,w,c
  3821   0010A2  26D9               	addwf	fsr2l,f,c
  3822   0010A4  5012               	movf	(i1___simple_search_fl@c+1)^0,w,c
  3823   0010A6  22DA               	addwfc	fsr2h,f,c
  3824   0010A8  CFDE F0AC          	movff	postinc2,___freelist
  3825   0010AC  CFDD F0AD          	movff	postdec2,___freelist+1
  3826   0010B0                     i1l2119:
  3827   0010B0  0E02               	movlw	2
  3828   0010B2  2411               	addwf	i1___simple_search_fl@c^0,w,c
  3829   0010B4  6E01               	movwf	?i1___simple_search_fl^0,c
  3830   0010B6  0E00               	movlw	0
  3831   0010B8  2012               	addwfc	(i1___simple_search_fl@c+1)^0,w,c
  3832   0010BA  6E02               	movwf	(?i1___simple_search_fl+1)^0,c
  3833   0010BC  EF3D  F009         	goto	i1l969
  3834   0010C0                     i1l2123:
  3835   0010C0  C011  FFD9         	movff	i1___simple_search_fl@c,fsr2l
  3836   0010C4  C012  FFDA         	movff	i1___simple_search_fl@c+1,fsr2h
  3837   0010C8  50DE               	movf	postinc2,w,c
  3838   0010CA  5C01               	subwf	i1___simple_search_fl@n^0,w,c
  3839   0010CC  50DE               	movf	postinc2,w,c
  3840   0010CE  5802               	subwfb	(i1___simple_search_fl@n+1)^0,w,c
  3841   0010D0  B0D8               	btfsc	status,0,c
  3842   0010D2  EF6D  F008         	goto	i1u151_21
  3843   0010D6  EF6F  F008         	goto	i1u151_20
  3844   0010DA                     i1u151_21:
  3845   0010DA  EF95  F008         	goto	i1l977
  3846   0010DE                     i1u151_20:
  3847   0010DE  5013               	movf	i1___simple_search_fl@best^0,w,c
  3848   0010E0  1014               	iorwf	(i1___simple_search_fl@best+1)^0,w,c
  3849   0010E2  B4D8               	btfsc	status,2,c
  3850   0010E4  EF76  F008         	goto	i1u152_21
  3851   0010E8  EF78  F008         	goto	i1u152_20
  3852   0010EC                     i1u152_21:
  3853   0010EC  EF8D  F008         	goto	i1l2131
  3854   0010F0                     i1u152_20:
  3855   0010F0  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3856   0010F4  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3857   0010F8  C011  FFE1         	movff	i1___simple_search_fl@c,fsr1l
  3858   0010FC  C012  FFE2         	movff	i1___simple_search_fl@c+1,fsr1h
  3859   001100  50DE               	movf	postinc2,w,c
  3860   001102  5CE6               	subwf	postinc1,w,c
  3861   001104  50DE               	movf	postinc2,w,c
  3862   001106  58E6               	subwfb	postinc1,w,c
  3863   001108  A0D8               	btfss	status,0,c
  3864   00110A  EF89  F008         	goto	i1u153_21
  3865   00110E  EF8B  F008         	goto	i1u153_20
  3866   001112                     i1u153_21:
  3867   001112  EF8D  F008         	goto	i1l2131
  3868   001116                     i1u153_20:
  3869   001116  EF95  F008         	goto	i1l977
  3870   00111A                     i1l2131:
  3871   00111A  C011  F013         	movff	i1___simple_search_fl@c,i1___simple_search_fl@best
  3872   00111E  C012  F014         	movff	i1___simple_search_fl@c+1,i1___simple_search_fl@best+1
  3873   001122  C00D  F009         	movff	i1___simple_search_fl@last,i1___simple_search_fl@best_last
  3874   001126  C00E  F00A         	movff	i1___simple_search_fl@last+1,i1___simple_search_fl@best_last+1
  3875   00112A                     i1l977:
  3876   00112A  C011  F00D         	movff	i1___simple_search_fl@c,i1___simple_search_fl@last
  3877   00112E  C012  F00E         	movff	i1___simple_search_fl@c+1,i1___simple_search_fl@last+1
  3878   001132  EE20 F002          	lfsr	2,2
  3879   001136  5011               	movf	i1___simple_search_fl@c^0,w,c
  3880   001138  26D9               	addwf	fsr2l,f,c
  3881   00113A  5012               	movf	(i1___simple_search_fl@c+1)^0,w,c
  3882   00113C  22DA               	addwfc	fsr2h,f,c
  3883   00113E  CFDE F011          	movff	postinc2,i1___simple_search_fl@c
  3884   001142  CFDD F012          	movff	postdec2,i1___simple_search_fl@c+1
  3885   001146                     i1l2135:
  3886   001146  5011               	movf	i1___simple_search_fl@c^0,w,c
  3887   001148  1012               	iorwf	(i1___simple_search_fl@c+1)^0,w,c
  3888   00114A  A4D8               	btfss	status,2,c
  3889   00114C  EFAA  F008         	goto	i1u154_21
  3890   001150  EFAC  F008         	goto	i1u154_20
  3891   001154                     i1u154_21:
  3892   001154  EF23  F008         	goto	i1l2111
  3893   001158                     i1u154_20:
  3894   001158  5013               	movf	i1___simple_search_fl@best^0,w,c
  3895   00115A  1014               	iorwf	(i1___simple_search_fl@best+1)^0,w,c
  3896   00115C  B4D8               	btfsc	status,2,c
  3897   00115E  EFB3  F008         	goto	i1u155_21
  3898   001162  EFB5  F008         	goto	i1u155_20
  3899   001166                     i1u155_21:
  3900   001166  EF17  F008         	goto	i1l2105
  3901   00116A                     i1u155_20:
  3902   00116A  EE20 F002          	lfsr	2,2
  3903   00116E  5013               	movf	i1___simple_search_fl@best^0,w,c
  3904   001170  26D9               	addwf	fsr2l,f,c
  3905   001172  5014               	movf	(i1___simple_search_fl@best+1)^0,w,c
  3906   001174  22DA               	addwfc	fsr2h,f,c
  3907   001176  CFDE F00F          	movff	postinc2,i1___simple_search_fl@next
  3908   00117A  CFDD F010          	movff	postdec2,i1___simple_search_fl@next+1
  3909   00117E  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3910   001182  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3911   001186  CFDE F003          	movff	postinc2,??i1___simple_search_fl
  3912   00118A  CFDD F004          	movff	postdec2,??i1___simple_search_fl+1
  3913   00118E  5001               	movf	i1___simple_search_fl@n^0,w,c
  3914   001190  5E03               	subwf	??i1___simple_search_fl^0,f,c
  3915   001192  5002               	movf	(i1___simple_search_fl@n+1)^0,w,c
  3916   001194  5A04               	subwfb	(??i1___simple_search_fl+1)^0,f,c
  3917   001196  5004               	movf	(??i1___simple_search_fl+1)^0,w,c
  3918   001198  E109               	bnz	i1u156_20
  3919   00119A  0E05               	movlw	5
  3920   00119C  5C03               	subwf	??i1___simple_search_fl^0,w,c
  3921   00119E  A0D8               	btfss	status,0,c
  3922   0011A0  EFD4  F008         	goto	i1u156_21
  3923   0011A4  EFD6  F008         	goto	i1u156_20
  3924   0011A8                     i1u156_21:
  3925   0011A8  EF1A  F009         	goto	i1l980
  3926   0011AC                     i1u156_20:
  3927   0011AC  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3928   0011B0  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3929   0011B4  CFDE F003          	movff	postinc2,??i1___simple_search_fl
  3930   0011B8  CFDD F004          	movff	postdec2,??i1___simple_search_fl+1
  3931   0011BC  5001               	movf	i1___simple_search_fl@n^0,w,c
  3932   0011BE  5E03               	subwf	??i1___simple_search_fl^0,f,c
  3933   0011C0  5002               	movf	(i1___simple_search_fl@n+1)^0,w,c
  3934   0011C2  5A04               	subwfb	(??i1___simple_search_fl+1)^0,f,c
  3935   0011C4  0EFE               	movlw	254
  3936   0011C6  2403               	addwf	??i1___simple_search_fl^0,w,c
  3937   0011C8  6E07               	movwf	i1___simple_search_fl@remaining_size^0,c
  3938   0011CA  0EFF               	movlw	255
  3939   0011CC  2004               	addwfc	(??i1___simple_search_fl+1)^0,w,c
  3940   0011CE  6E08               	movwf	(i1___simple_search_fl@remaining_size+1)^0,c
  3941   0011D0  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3942   0011D4  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3943   0011D8  C001  FFDE         	movff	i1___simple_search_fl@n,postinc2
  3944   0011DC  C002  FFDD         	movff	i1___simple_search_fl@n+1,postdec2
  3945   0011E0  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3946   0011E4  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3947   0011E8  CFDE F003          	movff	postinc2,??i1___simple_search_fl
  3948   0011EC  CFDD F004          	movff	postdec2,??i1___simple_search_fl+1
  3949   0011F0  5003               	movf	??i1___simple_search_fl^0,w,c
  3950   0011F2  2413               	addwf	i1___simple_search_fl@best^0,w,c
  3951   0011F4  6E05               	movwf	(??i1___simple_search_fl+2)^0,c
  3952   0011F6  5004               	movf	(??i1___simple_search_fl+1)^0,w,c
  3953   0011F8  2014               	addwfc	(i1___simple_search_fl@best+1)^0,w,c
  3954   0011FA  6E06               	movwf	(??i1___simple_search_fl+3)^0,c
  3955   0011FC  0E02               	movlw	2
  3956   0011FE  2405               	addwf	(??i1___simple_search_fl+2)^0,w,c
  3957   001200  6E0B               	movwf	i1___simple_search_fl@split^0,c
  3958   001202  0E00               	movlw	0
  3959   001204  2006               	addwfc	(??i1___simple_search_fl+3)^0,w,c
  3960   001206  6E0C               	movwf	(i1___simple_search_fl@split+1)^0,c
  3961   001208  C00B  FFD9         	movff	i1___simple_search_fl@split,fsr2l
  3962   00120C  C00C  FFDA         	movff	i1___simple_search_fl@split+1,fsr2h
  3963   001210  C007  FFDE         	movff	i1___simple_search_fl@remaining_size,postinc2
  3964   001214  C008  FFDD         	movff	i1___simple_search_fl@remaining_size+1,postdec2
  3965   001218  EE20 F002          	lfsr	2,2
  3966   00121C  500B               	movf	i1___simple_search_fl@split^0,w,c
  3967   00121E  26D9               	addwf	fsr2l,f,c
  3968   001220  500C               	movf	(i1___simple_search_fl@split+1)^0,w,c
  3969   001222  22DA               	addwfc	fsr2h,f,c
  3970   001224  C00F  FFDE         	movff	i1___simple_search_fl@next,postinc2
  3971   001228  C010  FFDD         	movff	i1___simple_search_fl@next+1,postdec2
  3972   00122C  C00B  F00F         	movff	i1___simple_search_fl@split,i1___simple_search_fl@next
  3973   001230  C00C  F010         	movff	i1___simple_search_fl@split+1,i1___simple_search_fl@next+1
  3974   001234                     i1l980:
  3975   001234  5013               	movf	i1___simple_search_fl@best^0,w,c
  3976   001236  0100               	movlb	0	; () banked
  3977   001238  19AC               	xorwf	___freelist& (0+255),w,b
  3978   00123A  E107               	bnz	i1u157_21
  3979   00123C  5014               	movf	(i1___simple_search_fl@best+1)^0,w,c
  3980   00123E  19AD               	xorwf	(___freelist+1)& (0+255),w,b
  3981   001240  A4D8               	btfss	status,2,c
  3982   001242  EF25  F009         	goto	i1u157_21
  3983   001246  EF27  F009         	goto	i1u157_20
  3984   00124A                     i1u157_21:
  3985   00124A  EF2D  F009         	goto	i1l2151
  3986   00124E                     i1u157_20:
  3987   00124E                     
  3988                           ; BSR set to: 0
  3989   00124E  C00F  F0AC         	movff	i1___simple_search_fl@next,___freelist
  3990   001252  C010  F0AD         	movff	i1___simple_search_fl@next+1,___freelist+1
  3991   001256  EF37  F009         	goto	i1l2153
  3992   00125A                     i1l2151:
  3993                           
  3994                           ; BSR set to: 0
  3995   00125A  EE20 F002          	lfsr	2,2
  3996   00125E  5009               	movf	i1___simple_search_fl@best_last^0,w,c
  3997   001260  26D9               	addwf	fsr2l,f,c
  3998   001262  500A               	movf	(i1___simple_search_fl@best_last+1)^0,w,c
  3999   001264  22DA               	addwfc	fsr2h,f,c
  4000   001266  C00F  FFDE         	movff	i1___simple_search_fl@next,postinc2
  4001   00126A  C010  FFDD         	movff	i1___simple_search_fl@next+1,postdec2
  4002   00126E                     i1l2153:
  4003                           
  4004                           ; BSR set to: 0
  4005   00126E  0E02               	movlw	2
  4006   001270  2413               	addwf	i1___simple_search_fl@best^0,w,c
  4007   001272  6E01               	movwf	?i1___simple_search_fl^0,c
  4008   001274  0E00               	movlw	0
  4009   001276  2014               	addwfc	(i1___simple_search_fl@best+1)^0,w,c
  4010   001278  6E02               	movwf	(?i1___simple_search_fl+1)^0,c
  4011   00127A                     i1l969:
  4012   00127A  0012               	return		;funcret
  4013   00127C                     __end_ofi1___simple_search_fl:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function i1___expand_heap *****************
  4017 ;; Defined at:
  4018 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\expand_heap.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  pn              1    0[COMRAM] PTR unsigned int 
  4021 ;;		 -> i1malloc@m(2), malloc@m(2), 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  new_brkp        2    6[COMRAM] PTR unsigned char 
  4024 ;;		 -> __heap_hi(0), NULL(0), 
  4025 ;;  n               2    4[COMRAM] unsigned int 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    0[COMRAM] PTR void 
  4028 ;; Registers used:
  4029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;Total ram usage:        8 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		i1_malloc
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text26
  4049   001F86                     __ptext26:
  4050                           	callstack 0
  4051   001F86                     i1___expand_heap:
  4052                           	callstack 22
  4053   001F86  5001               	movf	i1___expand_heap@pn^0,w,c
  4054   001F88  6ED9               	movwf	fsr2l,c
  4055   001F8A  6ADA               	clrf	fsr2h,c
  4056   001F8C  CFDE F005          	movff	postinc2,i1___expand_heap@n
  4057   001F90  CFDD F006          	movff	postdec2,i1___expand_heap@n+1
  4058   001F94  0100               	movlb	0	; () banked
  4059   001F96  51A6               	movf	_brkp& (0+255),w,b
  4060   001F98  11A7               	iorwf	(_brkp+1)& (0+255),w,b
  4061   001F9A  A4D8               	btfss	status,2,c
  4062   001F9C  EFD2  F00F         	goto	i1u158_21
  4063   001FA0  EFD4  F00F         	goto	i1u158_20
  4064   001FA4                     i1u158_21:
  4065   001FA4  EFD8  F00F         	goto	i1l1028
  4066   001FA8                     i1u158_20:
  4067   001FA8                     
  4068                           ; BSR set to: 0
  4069   001FA8  0E80               	movlw	low ___heap_hi
  4070   001FAA  6FA6               	movwf	_brkp& (0+255),b
  4071   001FAC  0E0F               	movlw	high ___heap_hi
  4072   001FAE  6FA7               	movwf	(_brkp+1)& (0+255),b
  4073   001FB0                     i1l1028:
  4074                           
  4075                           ; BSR set to: 0
  4076   001FB0  5006               	movf	(i1___expand_heap@n+1)^0,w,c
  4077   001FB2  E107               	bnz	i1u159_21
  4078   001FB4  0E05               	movlw	5
  4079   001FB6  5C05               	subwf	i1___expand_heap@n^0,w,c
  4080   001FB8  B0D8               	btfsc	status,0,c
  4081   001FBA  EFE1  F00F         	goto	i1u159_21
  4082   001FBE  EFE3  F00F         	goto	i1u159_20
  4083   001FC2                     i1u159_21:
  4084   001FC2  EFE7  F00F         	goto	i1l2169
  4085   001FC6                     i1u159_20:
  4086   001FC6                     
  4087                           ; BSR set to: 0
  4088   001FC6  0E00               	movlw	0
  4089   001FC8  6E06               	movwf	(i1___expand_heap@n+1)^0,c
  4090   001FCA  0E05               	movlw	5
  4091   001FCC  6E05               	movwf	i1___expand_heap@n^0,c
  4092   001FCE                     i1l2169:
  4093                           
  4094                           ; BSR set to: 0
  4095   001FCE  5005               	movf	i1___expand_heap@n^0,w,c
  4096   001FD0  5DA6               	subwf	_brkp& (0+255),w,b
  4097   001FD2  6E07               	movwf	i1___expand_heap@new_brkp^0,c
  4098   001FD4  5006               	movf	(i1___expand_heap@n+1)^0,w,c
  4099   001FD6  59A7               	subwfb	(_brkp+1)& (0+255),w,b
  4100   001FD8  6E08               	movwf	(i1___expand_heap@new_brkp+1)^0,c
  4101   001FDA                     
  4102                           ; BSR set to: 0
  4103   001FDA  0EB6               	movlw	low ___heap_lo
  4104   001FDC  6E03               	movwf	??i1___expand_heap^0,c
  4105   001FDE  0E00               	movlw	high ___heap_lo
  4106   001FE0  6E04               	movwf	(??i1___expand_heap+1)^0,c
  4107   001FE2  5003               	movf	??i1___expand_heap^0,w,c
  4108   001FE4  5C07               	subwf	i1___expand_heap@new_brkp^0,w,c
  4109   001FE6  5004               	movf	(??i1___expand_heap+1)^0,w,c
  4110   001FE8  5808               	subwfb	(i1___expand_heap@new_brkp+1)^0,w,c
  4111   001FEA  A0D8               	btfss	status,0,c
  4112   001FEC  EFFA  F00F         	goto	i1u160_21
  4113   001FF0  EFFC  F00F         	goto	i1u160_20
  4114   001FF4                     i1u160_21:
  4115   001FF4  EF07  F010         	goto	i1l2175
  4116   001FF8                     i1u160_20:
  4117   001FF8                     
  4118                           ; BSR set to: 0
  4119   001FF8  51A6               	movf	_brkp& (0+255),w,b
  4120   001FFA  5C07               	subwf	i1___expand_heap@new_brkp^0,w,c
  4121   001FFC  51A7               	movf	(_brkp+1)& (0+255),w,b
  4122   001FFE  5808               	subwfb	(i1___expand_heap@new_brkp+1)^0,w,c
  4123   002000  A0D8               	btfss	status,0,c
  4124   002002  EF05  F010         	goto	i1u161_21
  4125   002006  EF07  F010         	goto	i1u161_20
  4126   00200A                     i1u161_21:
  4127   00200A  EF11  F010         	goto	i1l2181
  4128   00200E                     i1u161_20:
  4129   00200E                     i1l2175:
  4130                           
  4131                           ; BSR set to: 0
  4132   00200E  0E00               	movlw	0
  4133   002010  6E4C               	movwf	(_errno+1)^0,c
  4134   002012  0E0C               	movlw	12
  4135   002014  6E4B               	movwf	_errno^0,c
  4136   002016                     
  4137                           ; BSR set to: 0
  4138   002016  0E00               	movlw	0
  4139   002018  6E01               	movwf	?i1___expand_heap^0,c
  4140   00201A  0E00               	movlw	0
  4141   00201C  6E02               	movwf	(?i1___expand_heap+1)^0,c
  4142   00201E  EF19  F010         	goto	i1l1033
  4143   002022                     i1l2181:
  4144                           
  4145                           ; BSR set to: 0
  4146   002022  C007  F0A6         	movff	i1___expand_heap@new_brkp,_brkp
  4147   002026  C008  F0A7         	movff	i1___expand_heap@new_brkp+1,_brkp+1
  4148   00202A  C0A6  F001         	movff	_brkp,?i1___expand_heap
  4149   00202E  C0A7  F002         	movff	_brkp+1,?i1___expand_heap+1
  4150   002032                     i1l1033:
  4151                           
  4152                           ; BSR set to: 0
  4153   002032  0012               	return		;funcret
  4154   002034                     __end_ofi1___expand_heap:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _free *****************
  4158 ;; Defined at:
  4159 ;;		line 67 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  ptr             2    0[COMRAM] PTR void 
  4162 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  c               2    8[COMRAM] PTR struct chunk
  4165 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4166 ;;  cptr            2    6[COMRAM] PTR unsigned char 
  4167 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:       10 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_lnIsr
  4187 ;;		_lnIsrRc
  4188 ;;		_rxChecksum
  4189 ;;		_txHandler
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text27
  4194   0019BC                     __ptext27:
  4195                           	callstack 0
  4196   0019BC                     _free:
  4197                           	callstack 23
  4198   0019BC  C001  F007         	movff	free@ptr,free@cptr
  4199   0019C0  C002  F008         	movff	free@ptr+1,free@cptr+1
  4200   0019C4  5001               	movf	free@ptr^0,w,c
  4201   0019C6  1002               	iorwf	(free@ptr+1)^0,w,c
  4202   0019C8  A4D8               	btfss	status,2,c
  4203   0019CA  EFE9  F00C         	goto	i1u178_21
  4204   0019CE  EFEB  F00C         	goto	i1u178_20
  4205   0019D2                     i1u178_21:
  4206   0019D2  EFED  F00C         	goto	i1l2297
  4207   0019D6                     i1u178_20:
  4208   0019D6  EF8B  F00D         	goto	i1l986
  4209   0019DA                     i1l2297:
  4210   0019DA  0EFE               	movlw	254
  4211   0019DC  2407               	addwf	free@cptr^0,w,c
  4212   0019DE  6E09               	movwf	free@c^0,c
  4213   0019E0  0EFF               	movlw	255
  4214   0019E2  2008               	addwfc	(free@cptr+1)^0,w,c
  4215   0019E4  6E0A               	movwf	(free@c+1)^0,c
  4216   0019E6  0100               	movlb	0	; () banked
  4217   0019E8  51AC               	movf	___freelist& (0+255),w,b
  4218   0019EA  11AD               	iorwf	(___freelist+1)& (0+255),w,b
  4219   0019EC  B4D8               	btfsc	status,2,c
  4220   0019EE  EFFB  F00C         	goto	i1u179_21
  4221   0019F2  EFFD  F00C         	goto	i1u179_20
  4222   0019F6                     i1u179_21:
  4223   0019F6  EF81  F00D         	goto	i1l2319
  4224   0019FA                     i1u179_20:
  4225   0019FA                     
  4226                           ; BSR set to: 0
  4227   0019FA  C009  FFD9         	movff	free@c,fsr2l
  4228   0019FE  C00A  FFDA         	movff	free@c+1,fsr2h
  4229   001A02  CFDE F003          	movff	postinc2,??_free
  4230   001A06  CFDD F004          	movff	postdec2,??_free+1
  4231   001A0A  5003               	movf	??_free^0,w,c
  4232   001A0C  2407               	addwf	free@cptr^0,w,c
  4233   001A0E  6E05               	movwf	(??_free+2)^0,c
  4234   001A10  5004               	movf	(??_free+1)^0,w,c
  4235   001A12  2008               	addwfc	(free@cptr+1)^0,w,c
  4236   001A14  6E06               	movwf	(??_free+3)^0,c
  4237   001A16  5005               	movf	(??_free+2)^0,w,c
  4238   001A18  19AC               	xorwf	___freelist& (0+255),w,b
  4239   001A1A  E107               	bnz	i1u180_21
  4240   001A1C  5006               	movf	(??_free+3)^0,w,c
  4241   001A1E  19AD               	xorwf	(___freelist+1)& (0+255),w,b
  4242   001A20  A4D8               	btfss	status,2,c
  4243   001A22  EF15  F00D         	goto	i1u180_21
  4244   001A26  EF17  F00D         	goto	i1u180_20
  4245   001A2A                     i1u180_21:
  4246   001A2A  EF41  F00D         	goto	i1l2311
  4247   001A2E                     i1u180_20:
  4248   001A2E                     
  4249                           ; BSR set to: 0
  4250   001A2E  EE20 F002          	lfsr	2,2
  4251   001A32  51AC               	movf	___freelist& (0+255),w,b
  4252   001A34  26D9               	addwf	fsr2l,f,c
  4253   001A36  51AD               	movf	(___freelist+1)& (0+255),w,b
  4254   001A38  22DA               	addwfc	fsr2h,f,c
  4255   001A3A  EE10 F002          	lfsr	1,2
  4256   001A3E  5009               	movf	free@c^0,w,c
  4257   001A40  26E1               	addwf	fsr1l,f,c
  4258   001A42  500A               	movf	(free@c+1)^0,w,c
  4259   001A44  22E2               	addwfc	fsr1h,f,c
  4260   001A46  CFDE FFE6          	movff	postinc2,postinc1
  4261   001A4A  CFDD FFE5          	movff	postdec2,postdec1
  4262   001A4E                     
  4263                           ; BSR set to: 0
  4264   001A4E  C0AC  FFD9         	movff	___freelist,fsr2l
  4265   001A52  C0AD  FFDA         	movff	___freelist+1,fsr2h
  4266   001A56  CFDE F003          	movff	postinc2,??_free
  4267   001A5A  CFDD F004          	movff	postdec2,??_free+1
  4268   001A5E  0E02               	movlw	2
  4269   001A60  2603               	addwf	??_free^0,f,c
  4270   001A62  0E00               	movlw	0
  4271   001A64  2204               	addwfc	(??_free+1)^0,f,c
  4272   001A66  C009  FFD9         	movff	free@c,fsr2l
  4273   001A6A  C00A  FFDA         	movff	free@c+1,fsr2h
  4274   001A6E  5003               	movf	??_free^0,w,c
  4275   001A70  26DE               	addwf	postinc2,f,c
  4276   001A72  5004               	movf	(??_free+1)^0,w,c
  4277   001A74  22DD               	addwfc	postdec2,f,c
  4278   001A76                     i1l2305:
  4279                           
  4280                           ; BSR set to: 0
  4281   001A76  C009  F0AC         	movff	free@c,___freelist
  4282   001A7A  C00A  F0AD         	movff	free@c+1,___freelist+1
  4283   001A7E  EF8B  F00D         	goto	i1l986
  4284   001A82                     i1l2311:
  4285                           
  4286                           ; BSR set to: 0
  4287   001A82  C0AC  FFD9         	movff	___freelist,fsr2l
  4288   001A86  C0AD  FFDA         	movff	___freelist+1,fsr2h
  4289   001A8A  CFDE F003          	movff	postinc2,??_free
  4290   001A8E  CFDD F004          	movff	postdec2,??_free+1
  4291   001A92  5003               	movf	??_free^0,w,c
  4292   001A94  25AC               	addwf	___freelist& (0+255),w,b
  4293   001A96  6E05               	movwf	(??_free+2)^0,c
  4294   001A98  5004               	movf	(??_free+1)^0,w,c
  4295   001A9A  21AD               	addwfc	(___freelist+1)& (0+255),w,b
  4296   001A9C  6E06               	movwf	(??_free+3)^0,c
  4297   001A9E  0E02               	movlw	2
  4298   001AA0  2605               	addwf	(??_free+2)^0,f,c
  4299   001AA2  0E00               	movlw	0
  4300   001AA4  2206               	addwfc	(??_free+3)^0,f,c
  4301   001AA6  5009               	movf	free@c^0,w,c
  4302   001AA8  1805               	xorwf	(??_free+2)^0,w,c
  4303   001AAA  E107               	bnz	i1u181_21
  4304   001AAC  500A               	movf	(free@c+1)^0,w,c
  4305   001AAE  1806               	xorwf	(??_free+3)^0,w,c
  4306   001AB0  A4D8               	btfss	status,2,c
  4307   001AB2  EF5D  F00D         	goto	i1u181_21
  4308   001AB6  EF5F  F00D         	goto	i1u181_20
  4309   001ABA                     i1u181_21:
  4310   001ABA  EF75  F00D         	goto	i1l2317
  4311   001ABE                     i1u181_20:
  4312   001ABE                     
  4313                           ; BSR set to: 0
  4314   001ABE  C009  FFD9         	movff	free@c,fsr2l
  4315   001AC2  C00A  FFDA         	movff	free@c+1,fsr2h
  4316   001AC6  CFDE F003          	movff	postinc2,??_free
  4317   001ACA  CFDD F004          	movff	postdec2,??_free+1
  4318   001ACE  0E02               	movlw	2
  4319   001AD0  2603               	addwf	??_free^0,f,c
  4320   001AD2  0E00               	movlw	0
  4321   001AD4  2204               	addwfc	(??_free+1)^0,f,c
  4322   001AD6  C0AC  FFD9         	movff	___freelist,fsr2l
  4323   001ADA  C0AD  FFDA         	movff	___freelist+1,fsr2h
  4324   001ADE  5003               	movf	??_free^0,w,c
  4325   001AE0  26DE               	addwf	postinc2,f,c
  4326   001AE2  5004               	movf	(??_free+1)^0,w,c
  4327   001AE4  22DD               	addwfc	postdec2,f,c
  4328   001AE6  EF8B  F00D         	goto	i1l986
  4329   001AEA                     i1l2317:
  4330                           
  4331                           ; BSR set to: 0
  4332   001AEA  EE20 F002          	lfsr	2,2
  4333   001AEE  5009               	movf	free@c^0,w,c
  4334   001AF0  26D9               	addwf	fsr2l,f,c
  4335   001AF2  500A               	movf	(free@c+1)^0,w,c
  4336   001AF4  22DA               	addwfc	fsr2h,f,c
  4337   001AF6  C0AC  FFDE         	movff	___freelist,postinc2
  4338   001AFA  C0AD  FFDD         	movff	___freelist+1,postdec2
  4339   001AFE  EF3B  F00D         	goto	i1l2305
  4340   001B02                     i1l2319:
  4341                           
  4342                           ; BSR set to: 0
  4343   001B02  EE20 F002          	lfsr	2,2
  4344   001B06  5009               	movf	free@c^0,w,c
  4345   001B08  26D9               	addwf	fsr2l,f,c
  4346   001B0A  500A               	movf	(free@c+1)^0,w,c
  4347   001B0C  22DA               	addwfc	fsr2h,f,c
  4348   001B0E  6ADE               	clrf	postinc2,c
  4349   001B10  6ADD               	clrf	postdec2,c
  4350   001B12  EF3B  F00D         	goto	i1l2305
  4351   001B16                     i1l986:
  4352   001B16  0012               	return		;funcret
  4353   001B18                     __end_of_free:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _enQueue *****************
  4357 ;; Defined at:
  4358 ;;		line 49 in file "circular_queue.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  q               2   41[COMRAM] PTR struct lnQueue
  4361 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4362 ;;  value           2   43[COMRAM] PTR struct lnMessage
  4363 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      _Bool 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;Total ram usage:        9 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 1
  4382 ;; This function calls:
  4383 ;;		___awmod
  4384 ;;		_isQueueFull
  4385 ;; This function is called by:
  4386 ;;		_rxChecksum
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text28
  4391   001D6E                     __ptext28:
  4392                           	callstack 0
  4393   001D6E                     _enQueue:
  4394                           	callstack 21
  4395   001D6E                     
  4396                           ;circular_queue.c: 49: _Bool enQueue(lnQueue_t* q, lnMessage_t* value);circular_queue.c:
      +                           50: {;circular_queue.c: 52:     if (isQueueFull(q))
  4397   001D6E  C02A  F001         	movff	enQueue@q,isQueueFull@q
  4398   001D72  C02B  F002         	movff	enQueue@q+1,isQueueFull@q+1
  4399   001D76  EC06  F012         	call	_isQueueFull	;wreg free
  4400   001D7A  0900               	iorlw	0
  4401   001D7C  B4D8               	btfsc	status,2,c
  4402   001D7E  EFC3  F00E         	goto	i1u183_21
  4403   001D82  EFC5  F00E         	goto	i1u183_20
  4404   001D86                     i1u183_21:
  4405   001D86  EFC7  F00E         	goto	i1l2369
  4406   001D8A                     i1u183_20:
  4407   001D8A  EF13  F00F         	goto	i1l277
  4408   001D8E                     i1l2369:
  4409                           
  4410                           ;circular_queue.c: 58:     {;circular_queue.c: 60:         q->values[q->tail] = value;
  4411   001D8E  EE20 F001          	lfsr	2,1
  4412   001D92  502A               	movf	enQueue@q^0,w,c
  4413   001D94  26D9               	addwf	fsr2l,f,c
  4414   001D96  502B               	movf	(enQueue@q+1)^0,w,c
  4415   001D98  22DA               	addwfc	fsr2h,f,c
  4416   001D9A  50DF               	movf	indf2,w,c
  4417   001D9C  6E2E               	movwf	??_enQueue^0,c
  4418   001D9E  502E               	movf	??_enQueue^0,w,c
  4419   001DA0  0D02               	mullw	2
  4420   001DA2  CFF3 F02F          	movff	prodl,??_enQueue+1
  4421   001DA6  CFF4 F030          	movff	prodh,??_enQueue+2
  4422   001DAA  EE20 F004          	lfsr	2,4
  4423   001DAE  502A               	movf	enQueue@q^0,w,c
  4424   001DB0  26D9               	addwf	fsr2l,f,c
  4425   001DB2  502B               	movf	(enQueue@q+1)^0,w,c
  4426   001DB4  22DA               	addwfc	fsr2h,f,c
  4427   001DB6  CFDE F031          	movff	postinc2,??_enQueue+3
  4428   001DBA  CFDD F032          	movff	postdec2,??_enQueue+4
  4429   001DBE  502F               	movf	(??_enQueue+1)^0,w,c
  4430   001DC0  2431               	addwf	(??_enQueue+3)^0,w,c
  4431   001DC2  6ED9               	movwf	fsr2l,c
  4432   001DC4  5030               	movf	(??_enQueue+2)^0,w,c
  4433   001DC6  2032               	addwfc	(??_enQueue+4)^0,w,c
  4434   001DC8  6EDA               	movwf	fsr2h,c
  4435   001DCA  C02C  FFDE         	movff	enQueue@value,postinc2
  4436   001DCE  C02D  FFDD         	movff	enQueue@value+1,postdec2
  4437   001DD2                     
  4438                           ;circular_queue.c: 61:         q->numEntries++;
  4439   001DD2  EE20 F002          	lfsr	2,2
  4440   001DD6  502A               	movf	enQueue@q^0,w,c
  4441   001DD8  26D9               	addwf	fsr2l,f,c
  4442   001DDA  502B               	movf	(enQueue@q+1)^0,w,c
  4443   001DDC  22DA               	addwfc	fsr2h,f,c
  4444   001DDE  2ADF               	incf	indf2,f,c
  4445   001DE0                     
  4446                           ;circular_queue.c: 62:         q->tail = (q->tail + 1) % q->size;
  4447   001DE0  EE20 F001          	lfsr	2,1
  4448   001DE4  502A               	movf	enQueue@q^0,w,c
  4449   001DE6  26D9               	addwf	fsr2l,f,c
  4450   001DE8  502B               	movf	(enQueue@q+1)^0,w,c
  4451   001DEA  22DA               	addwfc	fsr2h,f,c
  4452   001DEC  EE10 F001          	lfsr	1,1
  4453   001DF0  502A               	movf	enQueue@q^0,w,c
  4454   001DF2  26E1               	addwf	fsr1l,f,c
  4455   001DF4  502B               	movf	(enQueue@q+1)^0,w,c
  4456   001DF6  22E2               	addwfc	fsr1h,f,c
  4457   001DF8  50E7               	movf	indf1,w,c
  4458   001DFA  6E2E               	movwf	??_enQueue^0,c
  4459   001DFC  0E01               	movlw	1
  4460   001DFE  242E               	addwf	??_enQueue^0,w,c
  4461   001E00  6E01               	movwf	___awmod@dividend^0,c
  4462   001E02  6A02               	clrf	(___awmod@dividend+1)^0,c
  4463   001E04  0E00               	movlw	0
  4464   001E06  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  4465   001E08  EE10 F003          	lfsr	1,3
  4466   001E0C  502A               	movf	enQueue@q^0,w,c
  4467   001E0E  26E1               	addwf	fsr1l,f,c
  4468   001E10  502B               	movf	(enQueue@q+1)^0,w,c
  4469   001E12  22E2               	addwfc	fsr1h,f,c
  4470   001E14  50E7               	movf	indf1,w,c
  4471   001E16  6E2F               	movwf	(??_enQueue+1)^0,c
  4472   001E18  502F               	movf	(??_enQueue+1)^0,w,c
  4473   001E1A  6E03               	movwf	___awmod@divisor^0,c
  4474   001E1C  6A04               	clrf	(___awmod@divisor+1)^0,c
  4475   001E1E  EC14  F00F         	call	___awmod	;wreg free
  4476   001E22  5001               	movf	?___awmod^0,w,c
  4477   001E24  6EDF               	movwf	indf2,c
  4478   001E26                     i1l277:
  4479   001E26  0012               	return		;funcret
  4480   001E28                     __end_of_enQueue:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _isQueueFull *****************
  4484 ;; Defined at:
  4485 ;;		line 38 in file "circular_queue.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  q               2    0[COMRAM] PTR struct lnQueue
  4488 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      _Bool 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        4 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_enQueue
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text29
  4514   00240C                     __ptext29:
  4515                           	callstack 0
  4516   00240C                     _isQueueFull:
  4517                           	callstack 21
  4518   00240C                     
  4519                           ;circular_queue.c: 38:    _Bool isQueueFull(lnQueue_t* q);circular_queue.c: 39: {;circul
      +                          ar_queue.c: 40:     return (q->numEntries == q->size);
  4520   00240C  EE20 F003          	lfsr	2,3
  4521   002410  5001               	movf	isQueueFull@q^0,w,c
  4522   002412  26D9               	addwf	fsr2l,f,c
  4523   002414  5002               	movf	(isQueueFull@q+1)^0,w,c
  4524   002416  22DA               	addwfc	fsr2h,f,c
  4525   002418  EE10 F002          	lfsr	1,2
  4526   00241C  5001               	movf	isQueueFull@q^0,w,c
  4527   00241E  26E1               	addwf	fsr1l,f,c
  4528   002420  5002               	movf	(isQueueFull@q+1)^0,w,c
  4529   002422  22E2               	addwfc	fsr1h,f,c
  4530   002424  50DE               	movf	postinc2,w,c
  4531   002426  18E6               	xorwf	postinc1,w,c
  4532   002428  B4D8               	btfsc	status,2,c
  4533   00242A  EF19  F012         	goto	i1u163_21
  4534   00242E  EF1C  F012         	goto	i1u163_20
  4535   002432                     i1u163_21:
  4536   002432  0E01               	movlw	1
  4537   002434  EF1D  F012         	goto	i1u164_20
  4538   002438                     i1u163_20:
  4539   002438  0E00               	movlw	0
  4540   00243A                     i1u164_20:
  4541   00243A  0012               	return		;funcret
  4542   00243C                     __end_of_isQueueFull:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function ___awmod *****************
  4546 ;; Defined at:
  4547 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  dividend        2    0[COMRAM] int 
  4550 ;;  divisor         2    2[COMRAM] int 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  sign            1    5[COMRAM] unsigned char 
  4553 ;;  counter         1    4[COMRAM] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  2    0[COMRAM] int 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;Total ram usage:        6 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_enQueue
  4573 ;;		_deQueue
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text30
  4578   001E28                     __ptext30:
  4579                           	callstack 0
  4580   001E28                     ___awmod:
  4581                           	callstack 22
  4582   001E28  0E00               	movlw	0
  4583   001E2A  6E06               	movwf	___awmod@sign^0,c
  4584   001E2C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4585   001E2E  EF1D  F00F         	goto	i1u165_20
  4586   001E32  EF1B  F00F         	goto	i1u165_21
  4587   001E36                     i1u165_21:
  4588   001E36  EF23  F00F         	goto	i1l2209
  4589   001E3A                     i1u165_20:
  4590   001E3A  6C01               	negf	___awmod@dividend^0,c
  4591   001E3C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4592   001E3E  B0D8               	btfsc	status,0,c
  4593   001E40  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4594   001E42  0E01               	movlw	1
  4595   001E44  6E06               	movwf	___awmod@sign^0,c
  4596   001E46                     i1l2209:
  4597   001E46  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4598   001E48  EF2A  F00F         	goto	i1u166_20
  4599   001E4C  EF28  F00F         	goto	i1u166_21
  4600   001E50                     i1u166_21:
  4601   001E50  EF2E  F00F         	goto	i1l2213
  4602   001E54                     i1u166_20:
  4603   001E54  6C03               	negf	___awmod@divisor^0,c
  4604   001E56  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4605   001E58  B0D8               	btfsc	status,0,c
  4606   001E5A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4607   001E5C                     i1l2213:
  4608   001E5C  5003               	movf	___awmod@divisor^0,w,c
  4609   001E5E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4610   001E60  B4D8               	btfsc	status,2,c
  4611   001E62  EF35  F00F         	goto	i1u167_21
  4612   001E66  EF37  F00F         	goto	i1u167_20
  4613   001E6A                     i1u167_21:
  4614   001E6A  EF5B  F00F         	goto	i1l2229
  4615   001E6E                     i1u167_20:
  4616   001E6E  0E01               	movlw	1
  4617   001E70  6E05               	movwf	___awmod@counter^0,c
  4618   001E72  EF3F  F00F         	goto	i1l2219
  4619   001E76                     i1l2217:
  4620   001E76  90D8               	bcf	status,0,c
  4621   001E78  3603               	rlcf	___awmod@divisor^0,f,c
  4622   001E7A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4623   001E7C  2A05               	incf	___awmod@counter^0,f,c
  4624   001E7E                     i1l2219:
  4625   001E7E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4626   001E80  EF44  F00F         	goto	i1u168_21
  4627   001E84  EF46  F00F         	goto	i1u168_20
  4628   001E88                     i1u168_21:
  4629   001E88  EF3B  F00F         	goto	i1l2217
  4630   001E8C                     i1u168_20:
  4631   001E8C                     i1l2221:
  4632   001E8C  5003               	movf	___awmod@divisor^0,w,c
  4633   001E8E  5C01               	subwf	___awmod@dividend^0,w,c
  4634   001E90  5004               	movf	(___awmod@divisor+1)^0,w,c
  4635   001E92  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4636   001E94  A0D8               	btfss	status,0,c
  4637   001E96  EF4F  F00F         	goto	i1u169_21
  4638   001E9A  EF51  F00F         	goto	i1u169_20
  4639   001E9E                     i1u169_21:
  4640   001E9E  EF55  F00F         	goto	i1l2225
  4641   001EA2                     i1u169_20:
  4642   001EA2  5003               	movf	___awmod@divisor^0,w,c
  4643   001EA4  5E01               	subwf	___awmod@dividend^0,f,c
  4644   001EA6  5004               	movf	(___awmod@divisor+1)^0,w,c
  4645   001EA8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4646   001EAA                     i1l2225:
  4647   001EAA  90D8               	bcf	status,0,c
  4648   001EAC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4649   001EAE  3203               	rrcf	___awmod@divisor^0,f,c
  4650   001EB0  2E05               	decfsz	___awmod@counter^0,f,c
  4651   001EB2  EF46  F00F         	goto	i1l2221
  4652   001EB6                     i1l2229:
  4653   001EB6  5006               	movf	___awmod@sign^0,w,c
  4654   001EB8  B4D8               	btfsc	status,2,c
  4655   001EBA  EF61  F00F         	goto	i1u170_21
  4656   001EBE  EF63  F00F         	goto	i1u170_20
  4657   001EC2                     i1u170_21:
  4658   001EC2  EF67  F00F         	goto	i1l2233
  4659   001EC6                     i1u170_20:
  4660   001EC6  6C01               	negf	___awmod@dividend^0,c
  4661   001EC8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4662   001ECA  B0D8               	btfsc	status,0,c
  4663   001ECC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4664   001ECE                     i1l2233:
  4665   001ECE  C001  F001         	movff	___awmod@dividend,?___awmod
  4666   001ED2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4667   001ED6  0012               	return		;funcret
  4668   001ED8                     __end_of___awmod:
  4669                           	callstack 0
  4670                           
  4671                           	psect	smallconst
  4672   001000                     __psmallconst:
  4673                           	callstack 0
  4674   001000  00                 	db	0
  4675   001001  00                 	db	0	; dummy byte at the end
  4676   000000                     
  4677                           	psect	rparam
  4678   000000                     
  4679                           	psect	temp
  4680   000058                     btemp:
  4681                           	callstack 0
  4682   000058                     	ds	1
  4683   000000                     int$flags	set	btemp
  4684   000000                     wtemp8	set	btemp+1
  4685   000000                     ttemp5	set	btemp+1
  4686   000000                     ttemp6	set	btemp+4
  4687   000000                     ttemp7	set	btemp+8
  4688                           
  4689                           	psect	idloc
  4690                           
  4691                           ;Config register IDLOC0 @ 0x200000
  4692                           ;	unspecified, using default values
  4693   200000                     	org	2097152
  4694   200000  FF                 	db	255
  4695                           
  4696                           ;Config register IDLOC1 @ 0x200001
  4697                           ;	unspecified, using default values
  4698   200001                     	org	2097153
  4699   200001  FF                 	db	255
  4700                           
  4701                           ;Config register IDLOC2 @ 0x200002
  4702                           ;	unspecified, using default values
  4703   200002                     	org	2097154
  4704   200002  FF                 	db	255
  4705                           
  4706                           ;Config register IDLOC3 @ 0x200003
  4707                           ;	unspecified, using default values
  4708   200003                     	org	2097155
  4709   200003  FF                 	db	255
  4710                           
  4711                           ;Config register IDLOC4 @ 0x200004
  4712                           ;	unspecified, using default values
  4713   200004                     	org	2097156
  4714   200004  FF                 	db	255
  4715                           
  4716                           ;Config register IDLOC5 @ 0x200005
  4717                           ;	unspecified, using default values
  4718   200005                     	org	2097157
  4719   200005  FF                 	db	255
  4720                           
  4721                           ;Config register IDLOC6 @ 0x200006
  4722                           ;	unspecified, using default values
  4723   200006                     	org	2097158
  4724   200006  FF                 	db	255
  4725                           
  4726                           ;Config register IDLOC7 @ 0x200007
  4727                           ;	unspecified, using default values
  4728   200007                     	org	2097159
  4729   200007  FF                 	db	255
  4730                           
  4731                           	psect	config
  4732                           
  4733                           ; Padding undefined space
  4734   300000                     	org	3145728
  4735   300000  FF                 	db	255
  4736                           
  4737                           ;Config register CONFIG1H @ 0x300001
  4738                           ;	Oscillator Selection bits
  4739                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4740                           ;	Fail-Safe Clock Monitor Enable bit
  4741                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4742                           ;	Internal/External Oscillator Switchover bit
  4743                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4744   300001                     	org	3145729
  4745   300001  08                 	db	8
  4746                           
  4747                           ;Config register CONFIG2L @ 0x300002
  4748                           ;	Power-up Timer Enable bit
  4749                           ;	PWRT = OFF, PWRT disabled
  4750                           ;	Brown-out Reset Enable bits
  4751                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4752                           ;	Brown Out Reset Voltage bits
  4753                           ;	BORV = 3, Minimum setting
  4754   300002                     	org	3145730
  4755   300002  19                 	db	25
  4756                           
  4757                           ;Config register CONFIG2H @ 0x300003
  4758                           ;	Watchdog Timer Enable bit
  4759                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4760                           ;	Watchdog Timer Postscale Select bits
  4761                           ;	WDTPS = 32768, 1:32768
  4762   300003                     	org	3145731
  4763   300003  1E                 	db	30
  4764                           
  4765                           ; Padding undefined space
  4766   300004                     	org	3145732
  4767   300004  FF                 	db	255
  4768                           
  4769                           ;Config register CONFIG3H @ 0x300005
  4770                           ;	CCP2 MUX bit
  4771                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4772                           ;	PORTB A/D Enable bit
  4773                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4774                           ;	Low-Power Timer1 Oscillator Enable bit
  4775                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4776                           ;	MCLR Pin Enable bit
  4777                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  4778   300005                     	org	3145733
  4779   300005  01                 	db	1
  4780                           
  4781                           ;Config register CONFIG4L @ 0x300006
  4782                           ;	Stack Full/Underflow Reset Enable bit
  4783                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4784                           ;	Single-Supply ICSP Enable bit
  4785                           ;	LVP = OFF, Single-Supply ICSP disabled
  4786                           ;	Extended Instruction Set Enable bit
  4787                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4788                           ;	Background Debugger Enable bit
  4789                           ;	DEBUG = 0x1, unprogrammed default
  4790   300006                     	org	3145734
  4791   300006  80                 	db	128
  4792                           
  4793                           ; Padding undefined space
  4794   300007                     	org	3145735
  4795   300007  FF                 	db	255
  4796                           
  4797                           ;Config register CONFIG5L @ 0x300008
  4798                           ;	Code Protection bit
  4799                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4800                           ;	Code Protection bit
  4801                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4802                           ;	Code Protection bit
  4803                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4804                           ;	Code Protection bit
  4805                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4806   300008                     	org	3145736
  4807   300008  0F                 	db	15
  4808                           
  4809                           ;Config register CONFIG5H @ 0x300009
  4810                           ;	Boot Block Code Protection bit
  4811                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4812                           ;	Data EEPROM Code Protection bit
  4813                           ;	CPD = OFF, Data EEPROM not code-protected
  4814   300009                     	org	3145737
  4815   300009  C0                 	db	192
  4816                           
  4817                           ;Config register CONFIG6L @ 0x30000A
  4818                           ;	Write Protection bit
  4819                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4820                           ;	Write Protection bit
  4821                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4822                           ;	Write Protection bit
  4823                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4824                           ;	Write Protection bit
  4825                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4826   30000A                     	org	3145738
  4827   30000A  0F                 	db	15
  4828                           
  4829                           ;Config register CONFIG6H @ 0x30000B
  4830                           ;	Configuration Register Write Protection bit
  4831                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4832                           ;	Boot Block Write Protection bit
  4833                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4834                           ;	Data EEPROM Write Protection bit
  4835                           ;	WRTD = OFF, Data EEPROM not write-protected
  4836   30000B                     	org	3145739
  4837   30000B  E0                 	db	224
  4838                           
  4839                           ;Config register CONFIG7L @ 0x30000C
  4840                           ;	Table Read Protection bit
  4841                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4842                           ;	Table Read Protection bit
  4843                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4844                           ;	Table Read Protection bit
  4845                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4846                           ;	Table Read Protection bit
  4847                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4848   30000C                     	org	3145740
  4849   30000C  0F                 	db	15
  4850                           
  4851                           ;Config register CONFIG7H @ 0x30000D
  4852                           ;	Boot Block Table Read Protection bit
  4853                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4854   30000D                     	org	3145741
  4855   30000D  40                 	db	64
  4856                           tosu	equ	0xFFF
  4857                           tosh	equ	0xFFE
  4858                           tosl	equ	0xFFD
  4859                           stkptr	equ	0xFFC
  4860                           pclatu	equ	0xFFB
  4861                           pclath	equ	0xFFA
  4862                           pcl	equ	0xFF9
  4863                           tblptru	equ	0xFF8
  4864                           tblptrh	equ	0xFF7
  4865                           tblptrl	equ	0xFF6
  4866                           tablat	equ	0xFF5
  4867                           prodh	equ	0xFF4
  4868                           prodl	equ	0xFF3
  4869                           indf0	equ	0xFEF
  4870                           postinc0	equ	0xFEE
  4871                           postdec0	equ	0xFED
  4872                           preinc0	equ	0xFEC
  4873                           plusw0	equ	0xFEB
  4874                           fsr0h	equ	0xFEA
  4875                           fsr0l	equ	0xFE9
  4876                           wreg	equ	0xFE8
  4877                           indf1	equ	0xFE7
  4878                           postinc1	equ	0xFE6
  4879                           postdec1	equ	0xFE5
  4880                           preinc1	equ	0xFE4
  4881                           plusw1	equ	0xFE3
  4882                           fsr1h	equ	0xFE2
  4883                           fsr1l	equ	0xFE1
  4884                           bsr	equ	0xFE0
  4885                           indf2	equ	0xFDF
  4886                           postinc2	equ	0xFDE
  4887                           postdec2	equ	0xFDD
  4888                           preinc2	equ	0xFDC
  4889                           plusw2	equ	0xFDB
  4890                           fsr2h	equ	0xFDA
  4891                           fsr2l	equ	0xFD9
  4892                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     70      87
    BANK0           128     38      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    deQueue@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    deQueue@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    enQueue@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    enQueue@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    enQueue@q$values$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    enQueue@value	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    free@c$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@cptr	PTR unsigned char  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    free@ptr	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$.$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    ?i1___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    isQueueEmpty@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    isQueueEmpty@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    isQueueFull@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    isQueueFull@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnInitQueue@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnInitQueue@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnRxMessage	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnRxMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnRxQueue	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnTxMessage	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnTxMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnTxQueue	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnTxQueue$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    ?_makeDeepCopy$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageCopy	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageCopy$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageOrig	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageOrig$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    rxChecksum@lnMessage	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    rxChecksum@lnMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    rxChecksum@lnQueue	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    S1507$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    S26lnMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    S31lnQueue$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__makeDeepCopy	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    sp__makeDeepCopy$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lnIsr in COMRAM

    _lnIsr->_lnIsrRc
    _lnIsrTmr1->_txHandler
    _lnIsrRc->_rxHandler
    _txHandler->_deQueue
    _txHandler->_free
    _deQueue->___awmod
    _rxHandler->_rxChecksum
    _rxChecksum->_enQueue
    _startCmpDelay->_getRandomValue
    _makeDeepCopy->i1_malloc
    i1_malloc->i1___simple_search_fl
    _enQueue->_makeDeepCopy

Critical Paths under _main in BANK0

    _lnInit->_lnInitQueue
    _lnInitQueue->_malloc
    _malloc->___simple_search_fl

Critical Paths under _lnIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lnIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lnIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lnIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lnIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lnIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lnIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lnIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lnIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lnIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lnIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lnIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lnIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lnIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lnIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lnIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4948
                                             36 BANK0      2     2      0
                             _lnInit
 ---------------------------------------------------------------------------------
 (1) _lnInit                                               0     0      0    4948
                   _lnInitComparator
                       _lnInitEusart
                          _lnInitIsr
                        _lnInitQueue
                         _lnInitTmr1
                             _malloc
 ---------------------------------------------------------------------------------
 (2) _lnInitTmr1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lnInitQueue                                          4     1      3    2729
                                             32 BANK0      4     1      3
                             _malloc
 ---------------------------------------------------------------------------------
 (2) _malloc                                              14    12      2    2219
                                             20 BANK0     12    10      2
                      ___expand_heap
                 ___simple_search_fl
 ---------------------------------------------------------------------------------
 (3) ___simple_search_fl                                  20    18      2     915
                                              0 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (3) ___expand_heap                                        8     6      2     224
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _lnInitIsr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lnInitEusart                                         0     0      0       0
                             _setBRG
 ---------------------------------------------------------------------------------
 (3) _setBRG                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lnInitComparator                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lnIsr                                                9     9      0   14688
                                             61 COMRAM     9     9      0
                               _free
                            _lnIsrRc
                          _lnIsrTmr1
 ---------------------------------------------------------------------------------
 (6) _lnIsrTmr1                                            2     2      0    2579
                                             14 COMRAM     2     2      0
                           _isLnFree
                      _startCmpDelay
                          _txHandler
 ---------------------------------------------------------------------------------
 (6) _lnIsrRc                                              1     1      0   10931
                                             60 COMRAM     1     1      0
                               _free
                          _rxHandler
                     _startLinebreak
                          _txHandler
 ---------------------------------------------------------------------------------
 (7) _txHandler                                            4     4      0    2328
                                             10 COMRAM     4     4      0
                            _deQueue
                               _free
                           _isLnFree
                      _startCmpDelay
                     _startLinebreak
 ---------------------------------------------------------------------------------
 (8) _isLnFree                                             1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _deQueue                                              4     2      2     899
                                              6 COMRAM     4     2      2
                            ___awmod
                       _isQueueEmpty
 ---------------------------------------------------------------------------------
 (9) _isQueueEmpty                                         2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _rxHandler                                            3     3      0    7380
                                             57 COMRAM     3     3      0
                         _rxChecksum
                           i1_malloc
 ---------------------------------------------------------------------------------
 (8) _rxChecksum                                           7     2      5    5476
                                             50 COMRAM     7     2      5
                            _enQueue
                               _free
                       _makeDeepCopy
                      _startCmpDelay
                     _startLinebreak
 ---------------------------------------------------------------------------------
 (8) _startLinebreak                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _startCmpDelay                                        4     4      0     227
                                              4 COMRAM     4     4      0
                     _getRandomValue
 ---------------------------------------------------------------------------------
 (9) _getRandomValue                                       4     2      2     158
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _makeDeepCopy                                         9     7      2    2151
                                             32 COMRAM     9     7      2
                           i1_malloc
 ---------------------------------------------------------------------------------
 (8) i1_malloc                                            14    12      2    1640
                                             20 COMRAM    12    10      2
                    i1___expand_heap
               i1___simple_search_fl
 ---------------------------------------------------------------------------------
 (9) i1___simple_search_fl                                20    18      2     852
                                              0 COMRAM    20    18      2
 ---------------------------------------------------------------------------------
 (9) i1___expand_heap                                      8     6      2     161
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) _free                                                10     8      2    1178
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (9) _enQueue                                              9     5      4     987
                                             41 COMRAM     9     5      4
                            ___awmod
                        _isQueueFull
                       _makeDeepCopy (ARG)
 ---------------------------------------------------------------------------------
 (10) _isQueueFull                                         4     2      2     133
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     500
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lnInit
     _lnInitComparator
     _lnInitEusart
       _setBRG
     _lnInitIsr
     _lnInitQueue
       _malloc
         ___expand_heap
         ___simple_search_fl
     _lnInitTmr1
     _malloc

 _lnIsr (ROOT)
   _free
   _lnIsrRc
     _free
     _rxHandler
       _rxChecksum
         _enQueue
           ___awmod
           _isQueueFull
           _makeDeepCopy (ARG)
             i1_malloc
               i1___expand_heap
               i1___simple_search_fl
         _free
         _makeDeepCopy
         _startCmpDelay
           _getRandomValue
         _startLinebreak
       i1_malloc
     _startLinebreak
     _txHandler
       _deQueue
         ___awmod
         _isQueueEmpty
       _free
       _isLnFree
       _startCmpDelay
       _startLinebreak
   _lnIsrTmr1
     _isLnFree
     _startCmpDelay
     _txHandler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      36       5       42.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     46      57       1       69.0%
BITBIGSFRhhl        1E      0       0      38        0.0%
BITBIGSFRhlhhl      14      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhlllh       B      0       0      43        0.0%
BITBIGSFRlllh        7      0       0      47        0.0%
BITBIGSFRllh         7      0       0      46        0.0%
BITBIGSFRlh          6      0       0      45        0.0%
BITBIGSFRhllhhh      3      0       0      42        0.0%
BITBIGSFRhlhl        3      0       0      41        0.0%
BITBIGSFRhlhhh       2      0       0      39        0.0%
BITBIGSFRllll        2      0       0      48        0.0%
BITBIGSFRhlllll      1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D      12        0.0%
DATA                 0      0      8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Apr 06 21:38:13 2024

                       ?_lnInitQueue 00A0                                    __ 0056  
                      ?_lnInitEusart 0001                                   l45 228E  
                                 l46 228C                                   l47 229C  
                                 bsr 0FE0                                  l161 24E8  
                                l170 24C8                                  l164 24A2  
                                l262 24E0                                  l158 2344  
                                l167 24D6                                  l267 21AA  
                                l980 14AE                                  l977 13A4  
                                l969 14F2                         ___awmod@sign 0006  
                                wreg 0FE8                        _startCmpDelay 2346  
                               l1010 1858                                 l1012 180C  
                               l1014 1800                                 l1033 1F84  
                               l1028 1F02                         ?_isQueueFull 0001  
                               l2401 133A                                 l2411 13AC  
                               l2403 1358                                 l2421 144A  
                               l2405 136A                                 l2413 13C0  
                               l2501 17E0                                 l2431 14E6  
                               l2423 145A                                 l2415 13D2  
                               l2511 1834                                 l2503 17F8  
                               l2601 24BA                                 l2441 1EE8  
                               l2425 1492                                 l2417 13E4  
                               l2409 1394                                 l2513 183C  
                               l2505 1814                                 l2451 1F4A  
                               l2443 1EFA                                 l2427 14C6  
                               l2419 1426                                 l2507 181C  
                               l2515 1850                                 l2453 1F60  
                               l2445 1F18                                 l2429 14D2  
                               l2381 127C                                 l2509 182C  
                               l2701 2340                                 l2519 24D8  
                               l2455 1F68                                 l2447 1F20  
                               l2439 1ED8                                 l2391 12E0  
                               l2383 12A8                                 l2471 170E  
                               l2463 16F6                                 l2449 1F2C  
                               l2393 12F2                                 l2473 1724  
                               l2465 16F6                                 l2561 2184  
                               l2459 1F74                                 l2395 1316  
                               l2387 12B4                                 l2491 17AC  
                               l2483 1762                                 l2475 1730  
                               l2467 16F6                                 l2563 2192  
                               l2581 2492                                 l2573 2486  
                               l2397 132A                                 l2389 12C0  
                               l2493 17B8                                 l2485 1762  
                               l2477 174E                                 l2469 170A  
                               l2565 219C                                 l2557 213C  
                               l2567 24E2                                 l2591 249C  
                               l2583 2494                                 l2575 248A  
                               l2495 17C8                                 l2487 1776  
                               l2479 1756                                 l2559 214E  
                               l2751 22A0                                 l2569 24E6  
                               l2593 24A0                                 l2585 2496  
                               l2577 248E                                 l2489 178A  
                               l2753 22A4                                 l2587 2498  
                               l2579 2490                                 l2691 22FA  
                               l2755 22A6                                 l2589 249A  
                               l2597 24CA                                 l2693 230C  
                               l2757 22C0                                 l2749 2280  
                               l2695 2334                                 l2759 22C2  
                               l2697 2338                                 l2689 22E4  
                               l2699 233C                    ??i1___expand_heap 0003  
                               u2000 170A                                 u2001 1706  
                               u2010 1724                                 u2011 1720  
                               u2020 174E                                 u2021 174A  
                               u2030 178A                                 u2031 1786  
                               u2040 17AC                                 u2041 17A8  
                               u2050 17DC                                 u2051 17D8  
                               u2060 17F8                                 u2061 17F4  
                               u2250 229C                                 u2251 2298  
                               u1900 136A                                 u1901 1366  
                               u1910 1390                                 u1911 138C  
                               u1920 13D2                                 u1921 13CE  
                               u1930 13E4                                 u1931 13E0  
                               u1940 1426                                 u1860 12A8  
                               u1941 1422                                 u1861 12A4  
                               u1950 14C6                                 u1870 12E0  
                               u1951 14C2                                 u1871 12DC  
                               u1960 1EFA                                 u1880 12F2  
                               u1961 1EF6                                 u1881 12EE  
                               u1970 1F18                                 u1890 1358  
                               u1971 1F14                                 u1891 1354  
                               u1980 1F4A                                 u1981 1F46  
                               u1990 1F60                                 u1991 1F5C  
                               u2957 22B2                                 u2967 22CE  
                     ??_makeDeepCopy 0023                                 _brkp 00A6  
                               _free 19BC                                 _main 2280  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               btemp 0058                                 prodh 0FF4  
                               prodl 0FF3                                 start 0128  
                  ?_lnInitComparator 0001                         ___param_bank 0000  
                     ??_lnInitEusart 0080                   ??_lnInitComparator 0080  
                 startCmpDelay@delay 0007                           i1malloc@sz 001B  
                      ?_isQueueEmpty 0001                                ?_free 0001  
                              ?_main 0001                      __end_of___awmod 1ED8  
                              _CMCON 0FB4                                _T1CON 0FCD  
                      makeDeepCopy@i 0027                                i1l202 227E  
                              i1l220 16F4                                i1l225 213A  
                              i1l241 1C6A                                i1l252 24B8  
                              i1l245 2460                                i1l270 2484  
                              i1l246 2462                                i1l182 0100  
                              i1l175 0064                                i1l256 240A  
                              i1l273 243A                                i1l249 2392  
                              i1l177 0100                                i1l282 2218  
                              i1l186 2038                                i1l195 20B8  
                              i1l179 00BC                                i1l277 1E26  
                              i1l536 1ED6                                i1l289 1D6C  
                              i1l980 1234                                i1l977 112A  
                              i1l969 127A                                i1l986 1B16  
                    __end_of_deQueue 221A                                _RCREG 0FAE  
                              _TMR1H 0FCF                                _TMR1L 0FCE  
                              _SPBRG 0FAF                                _TXREG 0FAD  
                       lnInitQueue@q 00A0                      __end_of_enQueue 1E28  
                     ?_startCmpDelay 0001                      __end_of_lnIsrRc 2280  
                              _lnIsr 0018                                _errno 004B  
                              free@c 0009                                tablat 0FF5  
                         __XTAL_FREQ 00B2                     ___expand_heap@pn 0080  
                              ttemp5 0059                                ttemp6 005C  
                              ttemp7 0060                                status 0FD8  
                              wtemp8 0059                     __end_ofi1_malloc 19BC  
                     _startLinebreak 24A4                      __initialization 2394  
                       __end_of_free 1B18                         __end_of_main 22E4  
                      ___expand_heap 1ED8                       ??_isQueueEmpty 0003  
                  i1___expand_heap@n 0005                               ??_free 0003  
                             ??_main 00A4                        __activetblptr 0002  
       __end_ofi1___simple_search_fl 127C             i1___expand_heap@new_brkp 0007  
                        i1malloc@new 001F                               ?_lnIsr 0001  
                             i1l1010 19BA                               i1l1012 196E  
                             i1l1014 1962                               i1l1033 2032  
                             i1l1028 1FB0                               i1l2111 1046  
                             i1l2103 1002                               i1l2201 1E28  
                             i1l2113 1066                               i1l2105 102E  
                             i1l2211 1E54                               i1l2203 1E2C  
                             i1l2131 111A                               i1l2115 1078  
                             i1l2123 10C0                               i1l2221 1E8C  
                             i1l2213 1E5C                               i1l2205 1E3A  
                             i1l2301 1A2E                               i1l2141 11AC  
                             i1l2133 1132                               i1l2125 10DE  
                             i1l2117 109C                               i1l2109 103A  
             __end_of_startLinebreak 24BA                               i1l2231 1EC6  
                             i1l2223 1EA2                               i1l2215 1E6E  
                             i1l2207 1E42                               i1l2303 1A4E  
                             i1l2311 1A82                               i1l2151 125A  
                             i1l2143 11D0                               i1l2127 10F0  
                             i1l2119 10B0                               i1l2135 1146  
                             i1l2233 1ECE                               i1l2225 1EAA  
                             i1l2217 1E76                               i1l2209 1E46  
                             i1l2313 1ABE                               i1l2305 1A76  
                             i1l2161 1F86                               i1l2153 126E  
                             i1l2145 11E0                               i1l2137 1158  
                             i1l2241 185A                               i1l2227 1EB0  
                             i1l2219 1E7E                               i1l2171 1FDA  
                             i1l2163 1F94                               i1l2147 1218  
                             i1l2139 116A                               i1l2251 18B0  
                             i1l2243 186C                               i1l2331 2372  
                             i1l2323 2346                               i1l2229 1EB6  
                             i1l2317 1AEA                               i1l2181 2022  
                             i1l2173 1FF8                               i1l2165 1FA8  
                             i1l2149 124E                               i1l2261 18D8  
                             i1l2253 18B8                               i1l2245 1870  
                             i1l2237 185A                               i1l2341 1C6C  
                             i1l2333 2384                               i1l2325 235A  
                             i1l2319 1B02                               i1l2175 200E  
                             i1l2167 1FC6                               i1l2263 18EA  
                             i1l2247 1886                               i1l2239 185A  
                             i1l2351 1CFC                               i1l2343 1C80  
                             i1l2191 23FA                               i1l2335 238A  
                             i1l2327 2362                               i1l3207 209A  
                             i1l2177 2016                               i1l2169 1FCE  
                             i1l2281 197E                               i1l2265 190E  
                             i1l2257 18C4                               i1l2249 1892  
                             i1l2353 1D04                               i1l2345 1C9C  
                             i1l2193 2402                               i1l2185 23DA  
                             i1l2329 236A                               i1l2337 24A4  
                             i1l3209 16DE                               i1l2521 243C  
                             i1l2371 1DD2                               i1l2363 1D6E  
                             i1l2283 198E                               i1l2275 1940  
                             i1l2267 191A                               i1l2259 18C4  
                             i1l2355 1D48                               i1l2347 1CB8  
                             i1l2187 23E2                               i1l2339 24A8  
                             i1l2531 20BA                               i1l2523 2440  
                             i1l2611 1B60                               i1l2603 1B18  
                             i1l2197 240C                               i1l2373 1DE0  
                             i1l2293 19BC                               i1l2285 1996  
                             i1l2277 195A                               i1l2269 192A  
                             i1l2357 1D4A                               i1l2349 1CCC  
                             i1l2189 23E8                               i1l2541 212A  
                             i1l2533 20E6                               i1l2525 244E  
                             i1l2613 1B66                               i1l2605 1B2C  
                             i1l2287 199E                               i1l2279 1976  
                             i1l2359 1D64                               i1l2543 2136  
                             i1l2535 2106                               i1l2551 21CC  
                             i1l2527 245C                               i1l2631 1C46  
                             i1l2615 1B9A                               i1l2607 1B3C  
                             i1l2623 1C26                               i1l2711 2058  
                             i1l2369 1D8E                               i1l2297 19DA  
                             i1l2289 19B2                               i1l2537 210E  
                             i1l2641 1528                               i1l2377 2464  
                             i1l2553 220A                               i1l2545 21AC  
                             i1l2633 1C5E                               i1l2625 1C36  
                             i1l2617 1BBA                               i1l2609 1B5C  
                             i1l2721 207C                               i1l2705 2034  
                             i1l2299 19FA                               i1l2539 2112  
                             i1l2651 157C                               i1l2643 1538  
                             i1l2635 14F6                               i1l2627 1C3E  
                             i1l2619 1BCA                               i1l2715 2060  
                             i1l2707 203C                               i1l2661 15E8  
                             i1l2653 158C                               i1l2645 1548  
                             i1l2637 1506                               i1l2629 1C42  
                             i1l2741 2248                               i1l2733 221A  
                             i1l2717 2064                               i1l2709 2044  
                             i1l2671 1652                               i1l2655 1598  
                             i1l2647 1558                               i1l2639 1514  
                             i1l2743 226C                               i1l2735 221E  
                             i1l2719 2078                               i1l2727 2084  
                             i1l2673 1682                               i1l2657 15C8  
                             i1l2649 1560                               i1l2745 2270  
                             i1l2737 222E                               i1l2761 003E  
                             i1l2675 16AE                               i1l2667 1628  
                             i1l2659 15CE                               i1l2683 16C2  
                             i1l2739 2240                               i1l2747 2278  
                             i1l2771 0080                               i1l2763 004C  
                             i1l2669 1642                               i1l2781 00CC  
                             i1l2773 0084                               i1l2765 005A  
                             i1l2783 00D0                               i1l2775 0094  
                             i1l2767 005C                               i1l2785 00E8  
                             i1l2777 0098                               i1l2769 0072  
                             i1l2779 00B0                               i1l2787 00F8  
                             _OSCCON 0FD3                               _SPBRGH 0FB0  
                   __end_of_isLnFree 2464                       ?___expand_heap 0080  
                  getRandomValue@lsb 0003              ___simple_search_fl@best 0092  
            ___simple_search_fl@last 008C              ___simple_search_fl@next 008E  
                          ??___awmod 0005                               _lnInit 22E4  
                          ??_deQueue 0009                               _malloc 16F6  
                             _setBRG 24D8                               clear_0 23BA  
                             clear_1 23C6                      ___awmod@divisor 0003  
                          ??_enQueue 002E                               isa$std 0001  
                    ___awmod@counter 0005                 __end_of_makeDeepCopy 1D6E  
                          ??_lnIsrRc 003D                      ??_startCmpDelay 0005  
          i1___simple_search_fl@best 0013            i1___simple_search_fl@last 000D  
          i1___simple_search_fl@next 000F                         __mediumconst 0000  
                  rxChecksum@lnQueue 0033                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
               __end_of_lnInitEusart 24A4                         isQueueFull@q 0001  
                    ?_startLinebreak 0001                           __accesstop 0080  
            __end_of__initialization 23CC                        ___rparam_used 0001  
                         ___freelist 00AC                       __pcstackCOMRAM 0001  
                       __pidataBANK0 24EA            makeDeepCopy@lnMessageCopy 0028  
                      __end_of_lnIsr 0128            makeDeepCopy@lnMessageOrig 0021  
                    i1___expand_heap 1F86                            ?i1_malloc 0015  
                 i1___expand_heap@pn 0001                              ??_lnIsr 003E  
         __end_of___simple_search_fl 14F4                           __pbssBANK0 00A6  
               __end_of_isQueueEmpty 2486                      ??___expand_heap 0082  
             i1___simple_search_fl@c 0011               i1___simple_search_fl@n 0001  
               i1___simple_search_fl 1002                              ?_lnInit 0001  
                            ?_malloc 0094                              ?_setBRG 0001  
                         ??i1_malloc 0017                              _OSCTUNE 0F9B  
                         _lnInitTmr1 24CA                            ?_isLnFree 0001  
     i1___simple_search_fl@best_last 0009                              __Hparam 0000  
              ?i1___simple_search_fl 0001                              __Lparam 0000  
               ___simple_search_fl@c 0090                 ___simple_search_fl@n 0080  
                       _isLnFree$991 0001              __end_ofi1___expand_heap 2034  
                  __end_of_lnInitIsr 24CA                   getRandomValue@lfsr 0001  
                  __end_of_lnIsrTmr1 20BA                              ___awmod 1E28  
                            _deQueue 21AC                         __psmallconst 1000  
           ___simple_search_fl@split 008A                              __pcinit 2394  
                            __ramtop 1000                              _enQueue 1D6E  
                            __ptext0 2280                              __ptext1 22E4  
                            __ptext2 24CA                              __ptext3 213C  
                            __ptext4 16F6                              __ptext5 127C  
                            __ptext6 1ED8                              __ptext7 24BA  
                            __ptext8 2486                              __ptext9 24D8  
                            _lnIsrRc 221A                     ___awmod@dividend 0001  
                         ??_isLnFree 0001                              free@ptr 0001  
                         _rxChecksum 20BA                 end_of_initialization 23CC  
                 rxChecksum@checksum 0037                    __end_of_rxHandler 16F6  
                            malloc@m 009A                              malloc@n 0094  
                            malloc@p 009C               ___expand_heap@new_brkp 0086  
                          _LNCONbits 0057                        __Lmediumconst 0000  
                  __end_of_txHandler 1C6C                         _makeDeepCopy 1C6C  
         i1___simple_search_fl@split 000B                            _RCSTAbits 0FAB  
                            postdec1 0FE5                              postdec2 0FDD  
                            postinc0 0FEE                              postinc1 0FE6  
                            postinc2 0FDE                         _lnInitEusart 2486  
                      isQueueEmpty@q 0001                            _PORTCbits 0F82  
                          _TRISAbits 0F92                            _TRISBbits 0F93  
                   ??_startLinebreak 0001                            _TRISCbits 0F94  
                        ?_lnInitTmr1 0001                            _TXSTAbits 0FAC  
             ??i1___simple_search_fl 0003                        ??_lnInitQueue 00A3  
                   ?i1___expand_heap 0001                            i1malloc@m 0019  
                          i1malloc@n 0015                            i1malloc@p 001D  
                        _BAUDCONbits 0FB8                       __end_of_lnInit 2346  
                     __end_of_malloc 185A                         _isQueueEmpty 2464  
                     __end_of_setBRG 24E2                       _getRandomValue 23DA  
                    ___expand_heap@n 0084                     _lnInitComparator 24E2  
                start_initialization 2394                           malloc@lock 0047  
              __end_of_startCmpDelay 2394                        ??_isQueueFull 0003  
                        ?_rxChecksum 0033                   ___simple_search_fl 127C  
       ___simple_search_fl@best_last 0088                             ??_lnInit 00A4  
                        __pdataBANK0 00B2                             ??_malloc 0096  
                           ??_setBRG 0080               __end_of_getRandomValue 240C  
                ?___simple_search_fl 0080                  __end_of_lnInitQueue 21AC  
                          ___heap_hi 0F80                            ___heap_lo 00B6  
                        __pbssCOMRAM 0047                        __pcstackBANK0 0080  
               ??___simple_search_fl 0082                  __end_of_isQueueFull 243C  
              __end_of___expand_heap 1F86                      _lastRandomValue 0051  
                           ?___awmod 0001                             ?_deQueue 0007  
                        __pintcodelo 0018                      ?_getRandomValue 0001  
                           ?_enQueue 002A                            _lnInitIsr 24BA  
                          _lnIsrTmr1 2034                             ?_lnIsrRc 0001  
                        __smallconst 1000                            _lnRxQueue 00AE  
                          _lnTxQueue 00B0                             _LATBbits 0F8A  
                          _rxHandler 14F4                             _IPR1bits 0F9F  
                           _PIE1bits 0F9D                             i1u210_20 21C8  
                           i1u210_21 21C4                             i1u211_20 1B2C  
                           i1u211_21 1B28                             i1u220_20 1652  
                           i1u212_20 1B3C                             i1u220_21 164E  
                           i1u212_21 1B38                             i1u213_20 1B9A  
                           i1u221_20 2058                             i1u213_21 1B96  
                           i1u221_21 2054                             i1u150_20 1078  
                           i1u214_20 1C36                             i1u222_20 2078  
                           i1u230_20 0094                             i1u150_21 1074  
                           i1u214_21 1C32                             i1u222_21 2074  
                           i1u230_21 0090                             i1u151_20 10DE  
                           i1u215_20 1506                             i1u207_20 244E  
                           i1u223_20 222E                             i1u231_20 00CC  
                           i1u151_21 10DA                             i1u215_21 1502  
                           i1u207_21 244A                             i1u223_21 222A  
                           i1u231_21 00C8                             i1u160_20 1FF8  
                           i1u152_20 10F0                             i1u216_20 1514  
                           i1u208_20 245C                             i1u224_20 2240  
                           i1u160_21 1FF4                             i1u152_21 10EC  
                           i1u216_21 1510                             i1u208_21 2458  
                           i1u224_21 223C                             i1u161_20 200E  
                           i1u153_20 1116                             i1u209_20 20E6  
                           i1u217_20 158C                             i1u161_21 200A  
                           i1u153_21 1112                             i1u209_21 20E2  
                           i1u217_21 1588                             i1u170_20 1EC6  
                           i1u154_20 1158                             i1u162_20 23FA  
                           i1u218_20 15E8                             i1u226_20 004C  
                           i1u170_21 1EC2                             i1u154_21 1154  
                           i1u162_21 23F6                             i1u218_21 15E4  
                           i1u226_21 0048                             i1u163_20 2438  
                           i1u155_20 116A                             i1u171_20 186C  
                           i1u219_20 1642                             i1u227_20 005A  
                           i1u163_21 2432                             i1u155_21 1166  
                           i1u171_21 1868                             i1u219_21 163E  
                           i1u227_21 0056                             i1u164_20 243A  
                           i1u180_20 1A2E                             i1u156_20 11AC  
                           i1u148_20 102E                             i1u172_20 1886  
                           i1u228_20 0072                             i1u180_21 1A2A  
                           i1u156_21 11A8                             i1u148_21 102A  
                           i1u172_21 1882                             i1u228_21 006E  
                           i1u165_20 1E3A                             i1u181_20 1ABE  
                           i1u157_20 124E                             i1u149_20 1066  
                           i1u173_20 18B0                             i1u229_20 0080  
                           i1u165_21 1E36                             i1u181_21 1ABA  
                           i1u157_21 124A                             i1u149_21 1062  
                           i1u173_21 18AC                             i1u229_21 007C  
                           i1u166_20 1E54                             i1u158_20 1FA8  
                           i1u174_20 18EA                             i1u182_20 1D64  
                           i1u166_21 1E50                             i1u158_21 1FA4  
                           i1u174_21 18E6                             i1u182_21 1D60  
                           i1u167_20 1E6E                             i1u183_20 1D8A  
                           i1u159_20 1FC6                             i1u175_20 190E  
                           i1u167_21 1E6A                             i1u183_21 1D86  
                           i1u159_21 1FC2                             i1u175_21 190A  
                           i1u168_20 1E8C                             i1u176_20 193C  
                           i1u184_20 2482                             i1u168_21 1E88  
                           i1u176_21 1938                             i1u184_21 247C  
                           i1u169_20 1EA2                             i1u177_20 195A  
                           i1u185_20 2484                             i1u169_21 1E9E  
                           i1u177_21 1956                             i1u178_20 19D6  
                           i1u178_21 19D2                             i1u179_20 19FA  
                           i1u179_21 19F6                             _PIR1bits 0F9E  
                          _txHandler 1B18                             _RCONbits 0FD0  
                        _lnInitQueue 213C                           ?_lnInitIsr 0001  
                         ?_lnIsrTmr1 0001                             i1_malloc 185A  
                    lnInitQueue@size 00A2                      lnIsrRc@lnRxData 003D  
                        _lnRxCounter 0055                         ??_lnInitTmr1 0080  
                        _lnRxMessage 004F                          _lnTxCounter 0054  
                          copy_data0 23A8                          _isQueueFull 240C  
                        _lnTxMessage 004D                            malloc@end 00A8  
                          malloc@cur 00AA                            malloc@new 009E  
                         ?_rxHandler 0001             __end_of_lnInitComparator 24EA  
                           __Hrparam 0000                         enQueue@value 002C  
                         ?_txHandler 0001                             __Lrparam 0000  
                 __end_of_lnInitTmr1 24D8                             __ptext10 24E2  
                           __ptext20 24A4                             __ptext12 2034  
                           __ptext21 2346                             __ptext13 221A  
                           __ptext30 1E28                             __ptext22 23DA  
                           __ptext14 1B18                             __ptext23 1C6C  
                           __ptext15 243C                             __ptext24 185A  
                           __ptext16 21AC                             __ptext25 1002  
                           __ptext17 2464                             __ptext26 1F86  
                           __ptext18 14F4                             __ptext27 19BC  
                           __ptext19 20BA                             __ptext28 1D6E  
                           __ptext29 240C                             _isLnFree 243C  
                           deQueue@q 0007                         ??_rxChecksum 0038  
                           _lnTxData 0053                             enQueue@q 002A  
                           isa$xinst 0000                             int$flags 0058  
                           free@cptr 0007                   __end_of_rxChecksum 213C  
                        ??_lnInitIsr 0080                          ??_lnIsrTmr1 000F  
                           malloc@sz 0098                          _OSCTUNEbits 0F9B  
                         _INTCONbits 0FF2  i1___simple_search_fl@remaining_size 0007  
  ___simple_search_fl@remaining_size 0086                             intlevel1 0000  
                rxChecksum@lnMessage 0035                          ??_rxHandler 003A  
                         _OSCCONbits 0FD3                          ??_txHandler 000B  
                   ??_getRandomValue 0003                        ?_makeDeepCopy 0021  
                  rxHandler@lnRxData 003C  
