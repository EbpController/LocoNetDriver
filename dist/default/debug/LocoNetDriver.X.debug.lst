

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Apr 07 08:36:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 23/03/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4620 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	idataBANK0
    87   0024FC                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for __XTAL_FREQ
    91   0024FC  4800               	dw	18432
    92   0024FE  01E8               	dw	488
    93   000000                     _SPBRG	set	4015
    94   000000                     _SPBRGH	set	4016
    95   000000                     _TXREG	set	4013
    96   000000                     _PIR1bits	set	3998
    97   000000                     _PIE1bits	set	3997
    98   000000                     _IPR1bits	set	3999
    99   000000                     _RCREG	set	4014
   100   000000                     _RCSTAbits	set	4011
   101   000000                     _TXSTAbits	set	4012
   102   000000                     _CMCON	set	4020
   103   000000                     _OSCCON	set	4051
   104   000000                     _OSCTUNEbits	set	3995
   105   000000                     _OSCCONbits	set	4051
   106   000000                     _PORTCbits	set	3970
   107   000000                     _LATBbits	set	3978
   108   000000                     _TRISBbits	set	3987
   109   000000                     _OSCTUNE	set	3995
   110   000000                     _INTCONbits	set	4082
   111   000000                     _TRISCbits	set	3988
   112   000000                     _TRISAbits	set	3986
   113   000000                     _BAUDCONbits	set	4024
   114   000000                     _T1CON	set	4045
   115   000000                     _TMR1L	set	4046
   116   000000                     _TMR1H	set	4047
   117   000000                     _RCONbits	set	4048
   118                           
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   002394                     __pcinit:
   123                           	callstack 0
   124   002394                     start_initialization:
   125                           	callstack 0
   126   002394                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Initialize objects allocated to BANK0 (4 bytes)
   130                           ; load TBLPTR registers with __pidataBANK0
   131   002394  0EFC               	movlw	low __pidataBANK0
   132   002396  6EF6               	movwf	tblptrl,c
   133   002398  0E24               	movlw	high __pidataBANK0
   134   00239A  6EF7               	movwf	tblptrh,c
   135   00239C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   136   00239E  6EF8               	movwf	tblptru,c
   137   0023A0  EE00  F0B2         	lfsr	0,__pdataBANK0
   138   0023A4  EE10 F004          	lfsr	1,4
   139   0023A8                     copy_data0:
   140   0023A8  0009               	tblrd		*+
   141   0023AA  CFF5 FFEE          	movff	tablat,postinc0
   142   0023AE  50E5               	movf	postdec1,w,c
   143   0023B0  50E1               	movf	fsr1l,w,c
   144   0023B2  E1FA               	bnz	copy_data0
   145                           
   146                           ; Clear objects allocated to BANK0 (12 bytes)
   147   0023B4  EE00  F0A6         	lfsr	0,__pbssBANK0
   148   0023B8  0E0C               	movlw	12
   149   0023BA                     clear_0:
   150   0023BA  6AEE               	clrf	postinc0,c
   151   0023BC  06E8               	decf	wreg,f,c
   152   0023BE  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to COMRAM (17 bytes)
   155   0023C0  EE00  F047         	lfsr	0,__pbssCOMRAM
   156   0023C4  0E11               	movlw	17
   157   0023C6                     clear_1:
   158   0023C6  6AEE               	clrf	postinc0,c
   159   0023C8  06E8               	decf	wreg,f,c
   160   0023CA  E1FD               	bnz	clear_1
   161   0023CC                     end_of_initialization:
   162                           	callstack 0
   163   0023CC                     __end_of__initialization:
   164                           	callstack 0
   165   0023CC  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166   0023CE  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167   0023D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168   0023D2  6EF8               	movwf	tblptru,c
   169   0023D4  0100               	movlb	0
   170   0023D6  EF40  F011         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173   000047                     __pbssCOMRAM:
   174                           	callstack 0
   175   000047                     malloc@lock:
   176                           	callstack 0
   177   000047                     	ds	4
   178   00004B                     _errno:
   179                           	callstack 0
   180   00004B                     	ds	2
   181   00004D                     _lnTxMessage:
   182                           	callstack 0
   183   00004D                     	ds	2
   184   00004F                     _lnRxMessage:
   185                           	callstack 0
   186   00004F                     	ds	2
   187   000051                     _lastRandomValue:
   188                           	callstack 0
   189   000051                     	ds	2
   190   000053                     _lnTxData:
   191                           	callstack 0
   192   000053                     	ds	1
   193   000054                     _lnTxCounter:
   194                           	callstack 0
   195   000054                     	ds	1
   196   000055                     _lnRxCounter:
   197                           	callstack 0
   198   000055                     	ds	1
   199   000056                     __:
   200                           	callstack 0
   201   000056                     	ds	1
   202   000057                     _LNCONbits:
   203                           	callstack 0
   204   000057                     	ds	1
   205                           
   206                           	psect	bssBANK0
   207   0000A6                     __pbssBANK0:
   208                           	callstack 0
   209   0000A6                     _brkp:
   210                           	callstack 0
   211   0000A6                     	ds	2
   212   0000A8                     malloc@end:
   213                           	callstack 0
   214   0000A8                     	ds	2
   215   0000AA                     malloc@cur:
   216                           	callstack 0
   217   0000AA                     	ds	2
   218   0000AC                     ___freelist:
   219                           	callstack 0
   220   0000AC                     	ds	2
   221   0000AE                     _lnRxQueue:
   222                           	callstack 0
   223   0000AE                     	ds	2
   224   0000B0                     _lnTxQueue:
   225                           	callstack 0
   226   0000B0                     	ds	2
   227                           
   228                           	psect	dataBANK0
   229   0000B2                     __pdataBANK0:
   230                           	callstack 0
   231   0000B2                     __XTAL_FREQ:
   232                           	callstack 0
   233   0000B2                     	ds	4
   234                           
   235                           	psect	cstackBANK0
   236   000080                     __pcstackBANK0:
   237                           	callstack 0
   238   000080                     ?___simple_search_fl:
   239                           	callstack 0
   240   000080                     ?___expand_heap:
   241                           	callstack 0
   242   000080                     ___expand_heap@pn:
   243                           	callstack 0
   244   000080                     ___simple_search_fl@n:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248   000080                     	ds	2
   249   000082                     ??___simple_search_fl:
   250   000082                     ??___expand_heap:
   251                           
   252                           ; 1 bytes @ 0x2
   253   000082                     	ds	2
   254   000084                     ___expand_heap@n:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x4
   258   000084                     	ds	2
   259   000086                     ___simple_search_fl@remaining_size:
   260                           	callstack 0
   261   000086                     ___expand_heap@new_brkp:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x6
   265   000086                     	ds	2
   266   000088                     ___simple_search_fl@best_last:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x8
   270   000088                     	ds	2
   271   00008A                     ___simple_search_fl@split:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0xA
   275   00008A                     	ds	2
   276   00008C                     ___simple_search_fl@last:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0xC
   280   00008C                     	ds	2
   281   00008E                     ___simple_search_fl@next:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0xE
   285   00008E                     	ds	2
   286   000090                     ___simple_search_fl@c:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x10
   290   000090                     	ds	2
   291   000092                     ___simple_search_fl@best:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x12
   295   000092                     	ds	2
   296   000094                     ?_malloc:
   297                           	callstack 0
   298   000094                     malloc@n:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x14
   302   000094                     	ds	2
   303   000096                     ??_malloc:
   304                           
   305                           ; 1 bytes @ 0x16
   306   000096                     	ds	2
   307   000098                     malloc@sz:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x18
   311   000098                     	ds	2
   312   00009A                     malloc@m:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x1A
   316   00009A                     	ds	2
   317   00009C                     malloc@p:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x1C
   321   00009C                     	ds	2
   322   00009E                     malloc@new:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x1E
   326   00009E                     	ds	2
   327   0000A0                     lnInitQueue@q:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x20
   331   0000A0                     	ds	2
   332   0000A2                     lnInitQueue@size:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x22
   336   0000A2                     	ds	1
   337   0000A3                     ??_lnInitQueue:
   338                           
   339                           ; 1 bytes @ 0x23
   340   0000A3                     	ds	1
   341   0000A4                     ??_main:
   342                           
   343                           ; 1 bytes @ 0x24
   344   0000A4                     	ds	2
   345                           
   346                           	psect	cstackCOMRAM
   347   000001                     __pcstackCOMRAM:
   348                           	callstack 0
   349   000001                     ?_getRandomValue:
   350                           	callstack 0
   351   000001                     ?___awmod:
   352                           	callstack 0
   353   000001                     ?i1___simple_search_fl:
   354                           	callstack 0
   355   000001                     ?i1___expand_heap:
   356                           	callstack 0
   357   000001                     _isLnFree$995:
   358                           	callstack 0
   359   000001                     i1___expand_heap@pn:
   360                           	callstack 0
   361   000001                     getRandomValue@lfsr:
   362                           	callstack 0
   363   000001                     isQueueEmpty@q:
   364                           	callstack 0
   365   000001                     isQueueFull@q:
   366                           	callstack 0
   367   000001                     ___awmod@dividend:
   368                           	callstack 0
   369   000001                     free@ptr:
   370                           	callstack 0
   371   000001                     i1___simple_search_fl@n:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x0
   375   000001                     	ds	2
   376   000003                     ??_free:
   377   000003                     ??i1___simple_search_fl:
   378   000003                     ??i1___expand_heap:
   379   000003                     getRandomValue@lsb:
   380                           	callstack 0
   381   000003                     ___awmod@divisor:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x2
   385   000003                     	ds	2
   386   000005                     ??_startCmpDelay:
   387   000005                     ___awmod@counter:
   388                           	callstack 0
   389   000005                     i1___expand_heap@n:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x4
   393   000005                     	ds	1
   394   000006                     ___awmod@sign:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x5
   398   000006                     	ds	1
   399   000007                     startCmpDelay@delay:
   400                           	callstack 0
   401   000007                     deQueue@q:
   402                           	callstack 0
   403   000007                     free@cptr:
   404                           	callstack 0
   405   000007                     i1___simple_search_fl@remaining_size:
   406                           	callstack 0
   407   000007                     i1___expand_heap@new_brkp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x6
   411   000007                     	ds	2
   412   000009                     ??_deQueue:
   413   000009                     free@c:
   414                           	callstack 0
   415   000009                     i1___simple_search_fl@best_last:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x8
   419   000009                     	ds	2
   420   00000B                     ??_txHandler:
   421   00000B                     i1___simple_search_fl@split:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0xA
   425   00000B                     	ds	2
   426   00000D                     i1___simple_search_fl@last:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xC
   430   00000D                     	ds	2
   431   00000F                     ??_lnIsrTmr1:
   432   00000F                     i1___simple_search_fl@next:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xE
   436   00000F                     	ds	2
   437   000011                     i1___simple_search_fl@c:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x10
   441   000011                     	ds	2
   442   000013                     i1___simple_search_fl@best:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x12
   446   000013                     	ds	2
   447   000015                     ?i1_malloc:
   448                           	callstack 0
   449   000015                     i1malloc@n:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x14
   453   000015                     	ds	2
   454   000017                     ??i1_malloc:
   455                           
   456                           ; 1 bytes @ 0x16
   457   000017                     	ds	2
   458   000019                     i1malloc@m:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x18
   462   000019                     	ds	2
   463   00001B                     i1malloc@sz:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x1A
   467   00001B                     	ds	2
   468   00001D                     i1malloc@p:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x1C
   472   00001D                     	ds	2
   473   00001F                     i1malloc@new:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x1E
   477   00001F                     	ds	2
   478   000021                     ?_makeDeepCopy:
   479                           	callstack 0
   480   000021                     makeDeepCopy@lnMessageOrig:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x20
   484   000021                     	ds	2
   485   000023                     ??_makeDeepCopy:
   486                           
   487                           ; 1 bytes @ 0x22
   488   000023                     	ds	4
   489   000027                     makeDeepCopy@i:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x26
   493   000027                     	ds	1
   494   000028                     makeDeepCopy@lnMessageCopy:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x27
   498   000028                     	ds	2
   499   00002A                     enQueue@q:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x29
   503   00002A                     	ds	2
   504   00002C                     enQueue@value:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x2B
   508   00002C                     	ds	2
   509   00002E                     ??_enQueue:
   510                           
   511                           ; 1 bytes @ 0x2D
   512   00002E                     	ds	5
   513   000033                     rxChecksum@lnQueue:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x32
   517   000033                     	ds	2
   518   000035                     rxChecksum@lnMessage:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x34
   522   000035                     	ds	2
   523   000037                     rxChecksum@checksum:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x36
   527   000037                     	ds	1
   528   000038                     ??_rxChecksum:
   529                           
   530                           ; 1 bytes @ 0x37
   531   000038                     	ds	2
   532   00003A                     ??_rxHandler:
   533                           
   534                           ; 1 bytes @ 0x39
   535   00003A                     	ds	2
   536   00003C                     rxHandler@lnRxData:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x3B
   540   00003C                     	ds	1
   541   00003D                     lnIsrRc@lnRxData:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x3C
   545   00003D                     	ds	1
   546   00003E                     ??_lnIsr:
   547                           
   548                           ; 1 bytes @ 0x3D
   549   00003E                     	ds	9
   550                           
   551 ;;
   552 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   553 ;;
   554 ;; *************** function _main *****************
   555 ;; Defined at:
   556 ;;		line 13 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        2 bytes
   575 ;; Hardware stack levels required when called: 11
   576 ;; This function calls:
   577 ;;		_lnInit
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584   002280                     __ptext0:
   585                           	callstack 0
   586   002280                     _main:
   587                           	callstack 20
   588   002280                     
   589                           ;main.c: 18:     OSCTUNE = 0x00;
   590   002280  0E00               	movlw	0
   591   002282  6E9B               	movwf	155,c	;volatile
   592                           
   593                           ;main.c: 19:     OSCCON = 0x70;
   594   002284  0E70               	movlw	112
   595   002286  6ED3               	movwf	211,c	;volatile
   596                           
   597                           ;main.c: 21:     while (OSCCONbits.IOFS == 0)
   598   002288  EF47  F011         	goto	l45
   599   00228C                     l46:
   600                           
   601                           ;main.c: 22:     {;main.c: 23:         __nop();
   602   00228C  0000               	nop	
   603   00228E                     l45:
   604                           
   605                           ;main.c: 21:     while (OSCCONbits.IOFS == 0)
   606   00228E  A4D3               	btfss	211,2,c	;volatile
   607   002290  EF4C  F011         	goto	u2261
   608   002294  EF4E  F011         	goto	u2260
   609   002298                     u2261:
   610   002298  EF46  F011         	goto	l46
   611   00229C                     u2260:
   612   00229C                     
   613                           ;main.c: 25:     OSCTUNEbits.PLLEN = 1;
   614   00229C  8C9B               	bsf	155,6,c	;volatile
   615                           
   616                           ;main.c: 28:     TRISBbits.TRISB1 = 0;
   617   00229E  9293               	bcf	147,1,c	;volatile
   618   0022A0                     
   619                           ;main.c: 30:     lnInit();
   620   0022A0  EC72  F011         	call	_lnInit	;wreg free
   621   0022A4                     l2765:
   622                           
   623                           ;main.c: 33:     {;main.c: 34:         LATBbits.LATB1 = 0;
   624   0022A4  928A               	bcf	138,1,c	;volatile
   625   0022A6                     
   626                           ;main.c: 35:         _delay((unsigned long)((500)*(_XTAL_FREQ/4000.0)));
   627   0022A6  0E15               	movlw	21
   628   0022A8  0100               	movlb	0	; () banked
   629   0022AA  6FA5               	movwf	(??_main+1)& (0+255),b
   630   0022AC  0E4B               	movlw	75
   631   0022AE  6FA4               	movwf	??_main& (0+255),b
   632   0022B0  0EBE               	movlw	190
   633   0022B2                     u2977:
   634   0022B2  2EE8               	decfsz	wreg,f,c
   635   0022B4  D7FE               	bra	u2977
   636   0022B6  2FA4               	decfsz	??_main& (0+255),f,b
   637   0022B8  D7FC               	bra	u2977
   638   0022BA  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   639   0022BC  D7FA               	bra	u2977
   640   0022BE  0000               	nop	
   641   0022C0                     
   642                           ;main.c: 36:         LATBbits.LATB1 = 1;
   643   0022C0  828A               	bsf	138,1,c	;volatile
   644   0022C2                     
   645                           ;main.c: 37:         _delay((unsigned long)((500)*(_XTAL_FREQ/4000.0)));
   646   0022C2  0E15               	movlw	21
   647   0022C4  0100               	movlb	0	; () banked
   648   0022C6  6FA5               	movwf	(??_main+1)& (0+255),b
   649   0022C8  0E4B               	movlw	75
   650   0022CA  6FA4               	movwf	??_main& (0+255),b
   651   0022CC  0EBE               	movlw	190
   652   0022CE                     u2987:
   653   0022CE  2EE8               	decfsz	wreg,f,c
   654   0022D0  D7FE               	bra	u2987
   655   0022D2  2FA4               	decfsz	??_main& (0+255),f,b
   656   0022D4  D7FC               	bra	u2987
   657   0022D6  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   658   0022D8  D7FA               	bra	u2987
   659   0022DA  0000               	nop	
   660   0022DC  EF52  F011         	goto	l2765
   661   0022E0  EFA0  F000         	goto	start
   662   0022E4                     __end_of_main:
   663                           	callstack 0
   664                           
   665 ;; *************** function _lnInit *****************
   666 ;; Defined at:
   667 ;;		line 17 in file "ln.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; Hardware stack levels required when called: 10
   688 ;; This function calls:
   689 ;;		_lnInitComparator
   690 ;;		_lnInitEusart
   691 ;;		_lnInitIsr
   692 ;;		_lnInitQueue
   693 ;;		_lnInitTmr1
   694 ;;		_malloc
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701   0022E4                     __ptext1:
   702                           	callstack 0
   703   0022E4                     _lnInit:
   704                           	callstack 20
   705   0022E4                     
   706                           ;ln.c: 21: {
   707   0022E4  0E00               	movlw	0
   708   0022E6  0100               	movlb	0	; () banked
   709   0022E8  6F95               	movwf	(malloc@n+1)& (0+255),b
   710   0022EA  0E03               	movlw	3
   711   0022EC  6F94               	movwf	malloc@n& (0+255),b
   712   0022EE  EC7B  F00B         	call	_malloc	;wreg free
   713   0022F2  C094  F0B0         	movff	?_malloc,_lnTxQueue
   714   0022F6  C095  F0B1         	movff	?_malloc+1,_lnTxQueue+1
   715   0022FA                     
   716                           ;ln.c: 22:     CMCON = 0b00000001;
   717   0022FA  C0B0  F0A0         	movff	_lnTxQueue,lnInitQueue@q
   718   0022FE  C0B1  F0A1         	movff	_lnTxQueue+1,lnInitQueue@q+1
   719   002302  0E80               	movlw	128
   720   002304  0100               	movlb	0	; () banked
   721   002306  6FA2               	movwf	lnInitQueue@size& (0+255),b
   722   002308  EC9E  F010         	call	_lnInitQueue	;wreg free
   723   00230C                     
   724                           ;ln.c: 23: 
   725   00230C  0E00               	movlw	0
   726   00230E  0100               	movlb	0	; () banked
   727   002310  6F95               	movwf	(malloc@n+1)& (0+255),b
   728   002312  0E03               	movlw	3
   729   002314  6F94               	movwf	malloc@n& (0+255),b
   730   002316  EC7B  F00B         	call	_malloc	;wreg free
   731   00231A  C094  F0AE         	movff	?_malloc,_lnRxQueue
   732   00231E  C095  F0AF         	movff	?_malloc+1,_lnRxQueue+1
   733                           
   734                           ;ln.c: 24: 
   735   002322  C0AE  F0A0         	movff	_lnRxQueue,lnInitQueue@q
   736   002326  C0AF  F0A1         	movff	_lnRxQueue+1,lnInitQueue@q+1
   737   00232A  0E80               	movlw	128
   738   00232C  0100               	movlb	0	; () banked
   739   00232E  6FA2               	movwf	lnInitQueue@size& (0+255),b
   740   002330  EC9E  F010         	call	_lnInitQueue	;wreg free
   741   002334                     
   742                           ;ln.c: 27:     return;
   743   002334  EC7A  F012         	call	_lnInitComparator	;wreg free
   744   002338                     
   745                           ;ln.c: 28: }
   746   002338  EC43  F012         	call	_lnInitEusart	;wreg free
   747   00233C                     
   748                           ;ln.c: 29: 
   749   00233C  EC6E  F012         	call	_lnInitTmr1	;wreg free
   750   002340                     
   751                           ;ln.c: 30: void lnInitEusart(void)
   752   002340  EC66  F012         	call	_lnInitIsr	;wreg free
   753   002344  0012               	return		;funcret
   754   002346                     __end_of_lnInit:
   755                           	callstack 0
   756                           
   757 ;; *************** function _lnInitTmr1 *****************
   758 ;; Defined at:
   759 ;;		line 65 in file "ln.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 7
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_lnInit
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text2
   788   0024DC                     __ptext2:
   789                           	callstack 0
   790   0024DC                     _lnInitTmr1:
   791                           	callstack 22
   792   0024DC                     
   793                           ;ln.c: 67:     IPR1bits.TMR1IP = 0;
   794   0024DC  0E00               	movlw	0
   795   0024DE  6ECF               	movwf	207,c	;volatile
   796                           
   797                           ;ln.c: 68:     IPR1bits.RCIP = 0;
   798   0024E0  0E00               	movlw	0
   799   0024E2  6ECE               	movwf	206,c	;volatile
   800                           
   801                           ;ln.c: 69:     RCONbits.IPEN = 1;
   802   0024E4  0E31               	movlw	49
   803   0024E6  6ECD               	movwf	205,c	;volatile
   804   0024E8  0012               	return		;funcret
   805   0024EA                     __end_of_lnInitTmr1:
   806                           	callstack 0
   807                           
   808 ;; *************** function _lnInitQueue *****************
   809 ;; Defined at:
   810 ;;		line 15 in file "circular_queue.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  q               2   32[BANK0 ] PTR struct lnQueue
   813 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
   814 ;;  size            1   34[BANK0 ] unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   826 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 9
   833 ;; This function calls:
   834 ;;		_malloc
   835 ;; This function is called by:
   836 ;;		_lnInit
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text3
   841   00213C                     __ptext3:
   842                           	callstack 0
   843   00213C                     _lnInitQueue:
   844                           	callstack 20
   845   00213C                     
   846                           ;circular_queue.c: 15: void lnInitQueue(lnQueue_t* q, uint8_t size);circular_queue.c: 16
      +                          : {;circular_queue.c: 17:     q->size = size;
   847   00213C  0100               	movlb	0	; () banked
   848   00213E  EE20 F003          	lfsr	2,3
   849   002142  51A0               	movf	lnInitQueue@q& (0+255),w,b
   850   002144  26D9               	addwf	fsr2l,f,c
   851   002146  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   852   002148  22DA               	addwfc	fsr2h,f,c
   853   00214A  C0A2  FFDF         	movff	lnInitQueue@size,indf2
   854   00214E                     
   855                           ; BSR set to: 0
   856                           ;circular_queue.c: 18:     q->values = malloc(sizeof(struct lnMessage*) * q->size);
   857   00214E  EE20 F003          	lfsr	2,3
   858   002152  51A0               	movf	lnInitQueue@q& (0+255),w,b
   859   002154  26D9               	addwf	fsr2l,f,c
   860   002156  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   861   002158  22DA               	addwfc	fsr2h,f,c
   862   00215A  50DF               	movf	indf2,w,c
   863   00215C  6FA3               	movwf	??_lnInitQueue& (0+255),b
   864   00215E  51A3               	movf	??_lnInitQueue& (0+255),w,b
   865   002160  0D03               	mullw	3
   866   002162  CFF3 F094          	movff	prodl,malloc@n
   867   002166  CFF4 F095          	movff	prodh,malloc@n+1
   868   00216A  EC7B  F00B         	call	_malloc	;wreg free
   869   00216E  0100               	movlb	0	; () banked
   870   002170  EE20 F004          	lfsr	2,4
   871   002174  51A0               	movf	lnInitQueue@q& (0+255),w,b
   872   002176  26D9               	addwf	fsr2l,f,c
   873   002178  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   874   00217A  22DA               	addwfc	fsr2h,f,c
   875   00217C  C094  FFDE         	movff	?_malloc,postinc2
   876   002180  C095  FFDD         	movff	?_malloc+1,postdec2
   877   002184                     
   878                           ; BSR set to: 0
   879                           ;circular_queue.c: 19:     q->numEntries = 0;
   880   002184  EE20 F002          	lfsr	2,2
   881   002188  51A0               	movf	lnInitQueue@q& (0+255),w,b
   882   00218A  26D9               	addwf	fsr2l,f,c
   883   00218C  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   884   00218E  22DA               	addwfc	fsr2h,f,c
   885   002190  6ADF               	clrf	indf2,c
   886   002192                     
   887                           ; BSR set to: 0
   888                           ;circular_queue.c: 20:     q->head = 0;
   889   002192  C0A0  FFD9         	movff	lnInitQueue@q,fsr2l
   890   002196  C0A1  FFDA         	movff	lnInitQueue@q+1,fsr2h
   891   00219A  6ADF               	clrf	indf2,c
   892   00219C                     
   893                           ; BSR set to: 0
   894                           ;circular_queue.c: 21:     q->tail = 0;
   895   00219C  EE20 F001          	lfsr	2,1
   896   0021A0  51A0               	movf	lnInitQueue@q& (0+255),w,b
   897   0021A2  26D9               	addwf	fsr2l,f,c
   898   0021A4  51A1               	movf	(lnInitQueue@q+1)& (0+255),w,b
   899   0021A6  22DA               	addwfc	fsr2h,f,c
   900   0021A8  6ADF               	clrf	indf2,c
   901   0021AA                     
   902                           ; BSR set to: 0
   903   0021AA  0012               	return		;funcret
   904   0021AC                     __end_of_lnInitQueue:
   905                           	callstack 0
   906                           
   907 ;; *************** function _malloc *****************
   908 ;; Defined at:
   909 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_malloc.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  n               2   20[BANK0 ] unsigned int 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  sz              2   24[BANK0 ] PTR unsigned int 
   914 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
   915 ;;  new             2   30[BANK0 ] PTR unsigned char 
   916 ;;		 -> __heap_hi(0), NULL(0), 
   917 ;;  m               2   26[BANK0 ] unsigned int 
   918 ;;  p               2   28[BANK0 ] PTR void 
   919 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
   920 ;;  size            2    0        unsigned int 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  2   20[BANK0 ] PTR void 
   923 ;; Registers used:
   924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:       12 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; Hardware stack levels required when called: 8
   937 ;; This function calls:
   938 ;;		___expand_heap
   939 ;;		___simple_search_fl
   940 ;; This function is called by:
   941 ;;		_lnInit
   942 ;;		_lnInitQueue
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text4
   947   0016F6                     __ptext4:
   948                           	callstack 0
   949   0016F6                     _malloc:
   950                           	callstack 21
   951   0016F6  0100               	movlb	0	; () banked
   952   0016F8  5194               	movf	malloc@n& (0+255),w,b
   953   0016FA  1195               	iorwf	(malloc@n+1)& (0+255),w,b
   954   0016FC  A4D8               	btfss	status,2,c
   955   0016FE  EF83  F00B         	goto	u2011
   956   001702  EF85  F00B         	goto	u2010
   957   001706                     u2011:
   958   001706  EF87  F00B         	goto	l2483
   959   00170A                     u2010:
   960   00170A                     
   961                           ; BSR set to: 0
   962   00170A  4B94               	infsnz	malloc@n& (0+255),f,b
   963   00170C  2B95               	incf	(malloc@n+1)& (0+255),f,b
   964   00170E                     l2483:
   965                           
   966                           ; BSR set to: 0
   967   00170E  5195               	movf	(malloc@n+1)& (0+255),w,b
   968   001710  E107               	bnz	u2021
   969   001712  0E03               	movlw	3
   970   001714  5D94               	subwf	malloc@n& (0+255),w,b
   971   001716  B0D8               	btfsc	status,0,c
   972   001718  EF90  F00B         	goto	u2021
   973   00171C  EF92  F00B         	goto	u2020
   974   001720                     u2021:
   975   001720  EF98  F00B         	goto	l2487
   976   001724                     u2020:
   977   001724                     
   978                           ; BSR set to: 0
   979   001724  0E00               	movlw	0
   980   001726  6F95               	movwf	(malloc@n+1)& (0+255),b
   981   001728  0E03               	movlw	3
   982   00172A  6F94               	movwf	malloc@n& (0+255),b
   983   00172C  EFB1  F00B         	goto	l2495
   984   001730                     l2487:
   985                           
   986                           ; BSR set to: 0
   987   001730  1D94               	comf	malloc@n& (0+255),w,b
   988   001732  6F96               	movwf	??_malloc& (0+255),b
   989   001734  1D95               	comf	(malloc@n+1)& (0+255),w,b
   990   001736  6F97               	movwf	(??_malloc+1)& (0+255),b
   991   001738  5197               	movf	(??_malloc+1)& (0+255),w,b
   992   00173A  E107               	bnz	u2031
   993   00173C  0E02               	movlw	2
   994   00173E  5D96               	subwf	??_malloc& (0+255),w,b
   995   001740  B0D8               	btfsc	status,0,c
   996   001742  EFA5  F00B         	goto	u2031
   997   001746  EFA7  F00B         	goto	u2030
   998   00174A                     u2031:
   999   00174A  EFB1  F00B         	goto	l2495
  1000   00174E                     u2030:
  1001   00174E                     
  1002                           ; BSR set to: 0
  1003   00174E  0E00               	movlw	0
  1004   001750  6E4C               	movwf	(_errno+1)^0,c
  1005   001752  0E0C               	movlw	12
  1006   001754  6E4B               	movwf	_errno^0,c
  1007   001756                     l2491:
  1008                           
  1009                           ; BSR set to: 0
  1010   001756  0E00               	movlw	0
  1011   001758  6F94               	movwf	?_malloc& (0+255),b
  1012   00175A  0E00               	movlw	0
  1013   00175C  6F95               	movwf	(?_malloc+1)& (0+255),b
  1014   00175E  EF2C  F00C         	goto	l1016
  1015   001762                     l2495:
  1016   001762                     
  1017                           ; BSR set to: 0
  1018   001762  C094  F080         	movff	malloc@n,___simple_search_fl@n
  1019   001766  C095  F081         	movff	malloc@n+1,___simple_search_fl@n+1
  1020   00176A  EC3E  F009         	call	___simple_search_fl	;wreg free
  1021   00176E  C080  F09C         	movff	?___simple_search_fl,malloc@p
  1022   001772  C081  F09D         	movff	?___simple_search_fl+1,malloc@p+1
  1023   001776  0100               	movlb	0	; () banked
  1024   001778  519C               	movf	malloc@p& (0+255),w,b
  1025   00177A  119D               	iorwf	(malloc@p+1)& (0+255),w,b
  1026   00177C  A4D8               	btfss	status,2,c
  1027   00177E  EFC3  F00B         	goto	u2041
  1028   001782  EFC5  F00B         	goto	u2040
  1029   001786                     u2041:
  1030   001786  EF28  F00C         	goto	l2527
  1031   00178A                     u2040:
  1032   00178A                     
  1033                           ; BSR set to: 0
  1034   00178A  51AA               	movf	malloc@cur& (0+255),w,b
  1035   00178C  5DA8               	subwf	malloc@end& (0+255),w,b
  1036   00178E  6F96               	movwf	??_malloc& (0+255),b
  1037   001790  51AB               	movf	(malloc@cur+1)& (0+255),w,b
  1038   001792  59A9               	subwfb	(malloc@end+1)& (0+255),w,b
  1039   001794  6F97               	movwf	(??_malloc+1)& (0+255),b
  1040   001796  5194               	movf	malloc@n& (0+255),w,b
  1041   001798  5D96               	subwf	??_malloc& (0+255),w,b
  1042   00179A  5195               	movf	(malloc@n+1)& (0+255),w,b
  1043   00179C  5997               	subwfb	(??_malloc+1)& (0+255),w,b
  1044   00179E  B0D8               	btfsc	status,0,c
  1045   0017A0  EFD4  F00B         	goto	u2051
  1046   0017A4  EFD6  F00B         	goto	u2050
  1047   0017A8                     u2051:
  1048   0017A8  EF06  F00C         	goto	l1018
  1049   0017AC                     u2050:
  1050   0017AC                     
  1051                           ; BSR set to: 0
  1052   0017AC  0E02               	movlw	2
  1053   0017AE  2594               	addwf	malloc@n& (0+255),w,b
  1054   0017B0  6F9A               	movwf	malloc@m& (0+255),b
  1055   0017B2  0E00               	movlw	0
  1056   0017B4  2195               	addwfc	(malloc@n+1)& (0+255),w,b
  1057   0017B6  6F9B               	movwf	(malloc@m+1)& (0+255),b
  1058   0017B8                     
  1059                           ; BSR set to: 0
  1060   0017B8  0E9A               	movlw	low malloc@m
  1061   0017BA  6F80               	movwf	___expand_heap@pn& (0+255),b
  1062   0017BC  EC6C  F00F         	call	___expand_heap	;wreg free
  1063   0017C0  C080  F09E         	movff	?___expand_heap,malloc@new
  1064   0017C4  C081  F09F         	movff	?___expand_heap+1,malloc@new+1
  1065   0017C8  0100               	movlb	0	; () banked
  1066   0017CA  519E               	movf	malloc@new& (0+255),w,b
  1067   0017CC  119F               	iorwf	(malloc@new+1)& (0+255),w,b
  1068   0017CE  A4D8               	btfss	status,2,c
  1069   0017D0  EFEC  F00B         	goto	u2061
  1070   0017D4  EFEE  F00B         	goto	u2060
  1071   0017D8                     u2061:
  1072   0017D8  EFF0  F00B         	goto	l2513
  1073   0017DC                     u2060:
  1074   0017DC  EFAB  F00B         	goto	l2491
  1075   0017E0                     l2513:
  1076                           
  1077                           ; BSR set to: 0
  1078   0017E0  51A8               	movf	malloc@end& (0+255),w,b
  1079   0017E2  199E               	xorwf	malloc@new& (0+255),w,b
  1080   0017E4  E109               	bnz	u2070
  1081   0017E6  51A9               	movf	(malloc@end+1)& (0+255),w,b
  1082   0017E8  199F               	xorwf	(malloc@new+1)& (0+255),w,b
  1083   0017EA  B4D8               	btfsc	status,2,c
  1084   0017EC  EFFA  F00B         	goto	u2071
  1085   0017F0  EFFC  F00B         	goto	u2070
  1086   0017F4                     u2071:
  1087   0017F4  EF00  F00C         	goto	l1020
  1088   0017F8                     u2070:
  1089   0017F8                     
  1090                           ; BSR set to: 0
  1091   0017F8  C09E  F0AA         	movff	malloc@new,malloc@cur
  1092   0017FC  C09F  F0AB         	movff	malloc@new+1,malloc@cur+1
  1093   001800                     l1020:
  1094                           
  1095                           ; BSR set to: 0
  1096   001800  519A               	movf	malloc@m& (0+255),w,b
  1097   001802  259E               	addwf	malloc@new& (0+255),w,b
  1098   001804  6FA8               	movwf	malloc@end& (0+255),b
  1099   001806  519B               	movf	(malloc@m+1)& (0+255),w,b
  1100   001808  219F               	addwfc	(malloc@new+1)& (0+255),w,b
  1101   00180A  6FA9               	movwf	(malloc@end+1)& (0+255),b
  1102   00180C                     l1018:
  1103                           
  1104                           ; BSR set to: 0
  1105   00180C  C0AA  F09C         	movff	malloc@cur,malloc@p
  1106   001810  C0AB  F09D         	movff	malloc@cur+1,malloc@p+1
  1107   001814                     
  1108                           ; BSR set to: 0
  1109   001814  C09C  F098         	movff	malloc@p,malloc@sz
  1110   001818  C09D  F099         	movff	malloc@p+1,malloc@sz+1
  1111   00181C                     
  1112                           ; BSR set to: 0
  1113   00181C  C098  FFD9         	movff	malloc@sz,fsr2l
  1114   001820  C099  FFDA         	movff	malloc@sz+1,fsr2h
  1115   001824  C094  FFDE         	movff	malloc@n,postinc2
  1116   001828  C095  FFDD         	movff	malloc@n+1,postdec2
  1117   00182C                     
  1118                           ; BSR set to: 0
  1119   00182C  0E02               	movlw	2
  1120   00182E  2798               	addwf	malloc@sz& (0+255),f,b
  1121   001830  0E00               	movlw	0
  1122   001832  2399               	addwfc	(malloc@sz+1)& (0+255),f,b
  1123   001834                     
  1124                           ; BSR set to: 0
  1125   001834  C098  F09C         	movff	malloc@sz,malloc@p
  1126   001838  C099  F09D         	movff	malloc@sz+1,malloc@p+1
  1127   00183C                     
  1128                           ; BSR set to: 0
  1129   00183C  0E02               	movlw	2
  1130   00183E  2594               	addwf	malloc@n& (0+255),w,b
  1131   001840  6F96               	movwf	??_malloc& (0+255),b
  1132   001842  0E00               	movlw	0
  1133   001844  2195               	addwfc	(malloc@n+1)& (0+255),w,b
  1134   001846  6F97               	movwf	(??_malloc+1)& (0+255),b
  1135   001848  5196               	movf	??_malloc& (0+255),w,b
  1136   00184A  27AA               	addwf	malloc@cur& (0+255),f,b
  1137   00184C  5197               	movf	(??_malloc+1)& (0+255),w,b
  1138   00184E  23AB               	addwfc	(malloc@cur+1)& (0+255),f,b
  1139   001850                     l2527:
  1140                           
  1141                           ; BSR set to: 0
  1142   001850  C09C  F094         	movff	malloc@p,?_malloc
  1143   001854  C09D  F095         	movff	malloc@p+1,?_malloc+1
  1144   001858                     l1016:
  1145                           
  1146                           ; BSR set to: 0
  1147   001858  0012               	return		;funcret
  1148   00185A                     __end_of_malloc:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function ___simple_search_fl *****************
  1152 ;; Defined at:
  1153 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  n               2    0[BANK0 ] unsigned int 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  split           2   10[BANK0 ] PTR struct chunk
  1158 ;;		 -> __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1159 ;;  remaining_si    2    6[BANK0 ] unsigned int 
  1160 ;;  next            2   14[BANK0 ] PTR struct chunk
  1161 ;;		 -> __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1162 ;;  best            2   18[BANK0 ] PTR struct chunk
  1163 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1164 ;;  c               2   16[BANK0 ] PTR struct chunk
  1165 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1166 ;;  last            2   12[BANK0 ] PTR struct chunk
  1167 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1168 ;;  best_last       2    8[BANK0 ] PTR struct chunk
  1169 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2    0[BANK0 ] PTR void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;Total ram usage:       20 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 7
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_malloc
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text5
  1194   00127C                     __ptext5:
  1195                           	callstack 0
  1196   00127C                     ___simple_search_fl:
  1197                           	callstack 21
  1198   00127C  0E00               	movlw	0
  1199   00127E  0100               	movlb	0	; () banked
  1200   001280  6F92               	movwf	___simple_search_fl@best& (0+255),b
  1201   001282  0E00               	movlw	0
  1202   001284  6F93               	movwf	(___simple_search_fl@best+1)& (0+255),b
  1203   001286  0E00               	movlw	0
  1204   001288  6F88               	movwf	___simple_search_fl@best_last& (0+255),b
  1205   00128A  0E00               	movlw	0
  1206   00128C  6F89               	movwf	(___simple_search_fl@best_last+1)& (0+255),b
  1207   00128E  0E00               	movlw	0
  1208   001290  6F8C               	movwf	___simple_search_fl@last& (0+255),b
  1209   001292  0E00               	movlw	0
  1210   001294  6F8D               	movwf	(___simple_search_fl@last+1)& (0+255),b
  1211   001296  51AC               	movf	___freelist& (0+255),w,b
  1212   001298  11AD               	iorwf	(___freelist+1)& (0+255),w,b
  1213   00129A  A4D8               	btfss	status,2,c
  1214   00129C  EF52  F009         	goto	u1871
  1215   0012A0  EF54  F009         	goto	u1870
  1216   0012A4                     u1871:
  1217   0012A4  EF5A  F009         	goto	l2399
  1218   0012A8                     u1870:
  1219   0012A8                     l2395:
  1220                           
  1221                           ; BSR set to: 0
  1222   0012A8  0E00               	movlw	0
  1223   0012AA  6F80               	movwf	?___simple_search_fl& (0+255),b
  1224   0012AC  0E00               	movlw	0
  1225   0012AE  6F81               	movwf	(?___simple_search_fl+1)& (0+255),b
  1226   0012B0  EF79  F00A         	goto	l975
  1227   0012B4                     l2399:
  1228                           
  1229                           ; BSR set to: 0
  1230   0012B4  C0AC  F090         	movff	___freelist,___simple_search_fl@c
  1231   0012B8  C0AD  F091         	movff	___freelist+1,___simple_search_fl@c+1
  1232   0012BC  EFE0  F009         	goto	l2425
  1233   0012C0                     l2401:
  1234                           
  1235                           ; BSR set to: 0
  1236   0012C0  C090  FFD9         	movff	___simple_search_fl@c,fsr2l
  1237   0012C4  C091  FFDA         	movff	___simple_search_fl@c+1,fsr2h
  1238   0012C8  5180               	movf	___simple_search_fl@n& (0+255),w,b
  1239   0012CA  18DE               	xorwf	postinc2,w,c
  1240   0012CC  E107               	bnz	u1881
  1241   0012CE  5181               	movf	(___simple_search_fl@n+1)& (0+255),w,b
  1242   0012D0  18DE               	xorwf	postinc2,w,c
  1243   0012D2  A4D8               	btfss	status,2,c
  1244   0012D4  EF6E  F009         	goto	u1881
  1245   0012D8  EF70  F009         	goto	u1880
  1246   0012DC                     u1881:
  1247   0012DC  EF9D  F009         	goto	l2413
  1248   0012E0                     u1880:
  1249   0012E0                     
  1250                           ; BSR set to: 0
  1251   0012E0  518C               	movf	___simple_search_fl@last& (0+255),w,b
  1252   0012E2  118D               	iorwf	(___simple_search_fl@last+1)& (0+255),w,b
  1253   0012E4  B4D8               	btfsc	status,2,c
  1254   0012E6  EF77  F009         	goto	u1891
  1255   0012EA  EF79  F009         	goto	u1890
  1256   0012EE                     u1891:
  1257   0012EE  EF8B  F009         	goto	l2407
  1258   0012F2                     u1890:
  1259   0012F2                     
  1260                           ; BSR set to: 0
  1261   0012F2  EE20 F002          	lfsr	2,2
  1262   0012F6  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1263   0012F8  26D9               	addwf	fsr2l,f,c
  1264   0012FA  5191               	movf	(___simple_search_fl@c+1)& (0+255),w,b
  1265   0012FC  22DA               	addwfc	fsr2h,f,c
  1266   0012FE  EE10 F002          	lfsr	1,2
  1267   001302  518C               	movf	___simple_search_fl@last& (0+255),w,b
  1268   001304  26E1               	addwf	fsr1l,f,c
  1269   001306  518D               	movf	(___simple_search_fl@last+1)& (0+255),w,b
  1270   001308  22E2               	addwfc	fsr1h,f,c
  1271   00130A  CFDE FFE6          	movff	postinc2,postinc1
  1272   00130E  CFDD FFE5          	movff	postdec2,postdec1
  1273   001312  EF95  F009         	goto	l2409
  1274   001316                     l2407:
  1275                           
  1276                           ; BSR set to: 0
  1277   001316  EE20 F002          	lfsr	2,2
  1278   00131A  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1279   00131C  26D9               	addwf	fsr2l,f,c
  1280   00131E  5191               	movf	(___simple_search_fl@c+1)& (0+255),w,b
  1281   001320  22DA               	addwfc	fsr2h,f,c
  1282   001322  CFDE F0AC          	movff	postinc2,___freelist
  1283   001326  CFDD F0AD          	movff	postdec2,___freelist+1
  1284   00132A                     l2409:
  1285                           
  1286                           ; BSR set to: 0
  1287   00132A  0E02               	movlw	2
  1288   00132C  2590               	addwf	___simple_search_fl@c& (0+255),w,b
  1289   00132E  6F80               	movwf	?___simple_search_fl& (0+255),b
  1290   001330  0E00               	movlw	0
  1291   001332  2191               	addwfc	(___simple_search_fl@c+1)& (0+255),w,b
  1292   001334  6F81               	movwf	(?___simple_search_fl+1)& (0+255),b
  1293   001336  EF79  F00A         	goto	l975
  1294   00133A                     l2413:
  1295                           
  1296                           ; BSR set to: 0
  1297   00133A  C090  FFD9         	movff	___simple_search_fl@c,fsr2l
  1298   00133E  C091  FFDA         	movff	___simple_search_fl@c+1,fsr2h
  1299   001342  50DE               	movf	postinc2,w,c
  1300   001344  5D80               	subwf	___simple_search_fl@n& (0+255),w,b
  1301   001346  50DE               	movf	postinc2,w,c
  1302   001348  5981               	subwfb	(___simple_search_fl@n+1)& (0+255),w,b
  1303   00134A  B0D8               	btfsc	status,0,c
  1304   00134C  EFAA  F009         	goto	u1901
  1305   001350  EFAC  F009         	goto	u1900
  1306   001354                     u1901:
  1307   001354  EFD2  F009         	goto	l983
  1308   001358                     u1900:
  1309   001358                     
  1310                           ; BSR set to: 0
  1311   001358  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1312   00135A  1193               	iorwf	(___simple_search_fl@best+1)& (0+255),w,b
  1313   00135C  B4D8               	btfsc	status,2,c
  1314   00135E  EFB3  F009         	goto	u1911
  1315   001362  EFB5  F009         	goto	u1910
  1316   001366                     u1911:
  1317   001366  EFCA  F009         	goto	l2421
  1318   00136A                     u1910:
  1319   00136A                     
  1320                           ; BSR set to: 0
  1321   00136A  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1322   00136E  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1323   001372  C090  FFE1         	movff	___simple_search_fl@c,fsr1l
  1324   001376  C091  FFE2         	movff	___simple_search_fl@c+1,fsr1h
  1325   00137A  50DE               	movf	postinc2,w,c
  1326   00137C  5CE6               	subwf	postinc1,w,c
  1327   00137E  50DE               	movf	postinc2,w,c
  1328   001380  58E6               	subwfb	postinc1,w,c
  1329   001382  A0D8               	btfss	status,0,c
  1330   001384  EFC6  F009         	goto	u1921
  1331   001388  EFC8  F009         	goto	u1920
  1332   00138C                     u1921:
  1333   00138C  EFCA  F009         	goto	l2421
  1334   001390                     u1920:
  1335   001390  EFD2  F009         	goto	l983
  1336   001394                     l2421:
  1337                           
  1338                           ; BSR set to: 0
  1339   001394  C090  F092         	movff	___simple_search_fl@c,___simple_search_fl@best
  1340   001398  C091  F093         	movff	___simple_search_fl@c+1,___simple_search_fl@best+1
  1341   00139C  C08C  F088         	movff	___simple_search_fl@last,___simple_search_fl@best_last
  1342   0013A0  C08D  F089         	movff	___simple_search_fl@last+1,___simple_search_fl@best_last+1
  1343   0013A4                     l983:
  1344                           
  1345                           ; BSR set to: 0
  1346   0013A4  C090  F08C         	movff	___simple_search_fl@c,___simple_search_fl@last
  1347   0013A8  C091  F08D         	movff	___simple_search_fl@c+1,___simple_search_fl@last+1
  1348   0013AC                     
  1349                           ; BSR set to: 0
  1350   0013AC  EE20 F002          	lfsr	2,2
  1351   0013B0  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1352   0013B2  26D9               	addwf	fsr2l,f,c
  1353   0013B4  5191               	movf	(___simple_search_fl@c+1)& (0+255),w,b
  1354   0013B6  22DA               	addwfc	fsr2h,f,c
  1355   0013B8  CFDE F090          	movff	postinc2,___simple_search_fl@c
  1356   0013BC  CFDD F091          	movff	postdec2,___simple_search_fl@c+1
  1357   0013C0                     l2425:
  1358                           
  1359                           ; BSR set to: 0
  1360   0013C0  5190               	movf	___simple_search_fl@c& (0+255),w,b
  1361   0013C2  1191               	iorwf	(___simple_search_fl@c+1)& (0+255),w,b
  1362   0013C4  A4D8               	btfss	status,2,c
  1363   0013C6  EFE7  F009         	goto	u1931
  1364   0013CA  EFE9  F009         	goto	u1930
  1365   0013CE                     u1931:
  1366   0013CE  EF60  F009         	goto	l2401
  1367   0013D2                     u1930:
  1368   0013D2                     
  1369                           ; BSR set to: 0
  1370   0013D2  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1371   0013D4  1193               	iorwf	(___simple_search_fl@best+1)& (0+255),w,b
  1372   0013D6  B4D8               	btfsc	status,2,c
  1373   0013D8  EFF0  F009         	goto	u1941
  1374   0013DC  EFF2  F009         	goto	u1940
  1375   0013E0                     u1941:
  1376   0013E0  EF54  F009         	goto	l2395
  1377   0013E4                     u1940:
  1378   0013E4                     
  1379                           ; BSR set to: 0
  1380   0013E4  EE20 F002          	lfsr	2,2
  1381   0013E8  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1382   0013EA  26D9               	addwf	fsr2l,f,c
  1383   0013EC  5193               	movf	(___simple_search_fl@best+1)& (0+255),w,b
  1384   0013EE  22DA               	addwfc	fsr2h,f,c
  1385   0013F0  CFDE F08E          	movff	postinc2,___simple_search_fl@next
  1386   0013F4  CFDD F08F          	movff	postdec2,___simple_search_fl@next+1
  1387   0013F8  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1388   0013FC  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1389   001400  CFDE F082          	movff	postinc2,??___simple_search_fl
  1390   001404  CFDD F083          	movff	postdec2,??___simple_search_fl+1
  1391   001408  5180               	movf	___simple_search_fl@n& (0+255),w,b
  1392   00140A  5F82               	subwf	??___simple_search_fl& (0+255),f,b
  1393   00140C  5181               	movf	(___simple_search_fl@n+1)& (0+255),w,b
  1394   00140E  5B83               	subwfb	(??___simple_search_fl+1)& (0+255),f,b
  1395   001410  5183               	movf	(??___simple_search_fl+1)& (0+255),w,b
  1396   001412  E109               	bnz	u1950
  1397   001414  0E05               	movlw	5
  1398   001416  5D82               	subwf	??___simple_search_fl& (0+255),w,b
  1399   001418  A0D8               	btfss	status,0,c
  1400   00141A  EF11  F00A         	goto	u1951
  1401   00141E  EF13  F00A         	goto	u1950
  1402   001422                     u1951:
  1403   001422  EF57  F00A         	goto	l986
  1404   001426                     u1950:
  1405   001426                     
  1406                           ; BSR set to: 0
  1407   001426  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1408   00142A  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1409   00142E  CFDE F082          	movff	postinc2,??___simple_search_fl
  1410   001432  CFDD F083          	movff	postdec2,??___simple_search_fl+1
  1411   001436  5180               	movf	___simple_search_fl@n& (0+255),w,b
  1412   001438  5F82               	subwf	??___simple_search_fl& (0+255),f,b
  1413   00143A  5181               	movf	(___simple_search_fl@n+1)& (0+255),w,b
  1414   00143C  5B83               	subwfb	(??___simple_search_fl+1)& (0+255),f,b
  1415   00143E  0EFE               	movlw	254
  1416   001440  2582               	addwf	??___simple_search_fl& (0+255),w,b
  1417   001442  6F86               	movwf	___simple_search_fl@remaining_size& (0+255),b
  1418   001444  0EFF               	movlw	255
  1419   001446  2183               	addwfc	(??___simple_search_fl+1)& (0+255),w,b
  1420   001448  6F87               	movwf	(___simple_search_fl@remaining_size+1)& (0+255),b
  1421   00144A                     
  1422                           ; BSR set to: 0
  1423   00144A  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1424   00144E  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1425   001452  C080  FFDE         	movff	___simple_search_fl@n,postinc2
  1426   001456  C081  FFDD         	movff	___simple_search_fl@n+1,postdec2
  1427   00145A                     
  1428                           ; BSR set to: 0
  1429   00145A  C092  FFD9         	movff	___simple_search_fl@best,fsr2l
  1430   00145E  C093  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  1431   001462  CFDE F082          	movff	postinc2,??___simple_search_fl
  1432   001466  CFDD F083          	movff	postdec2,??___simple_search_fl+1
  1433   00146A  5182               	movf	??___simple_search_fl& (0+255),w,b
  1434   00146C  2592               	addwf	___simple_search_fl@best& (0+255),w,b
  1435   00146E  6F84               	movwf	(??___simple_search_fl+2)& (0+255),b
  1436   001470  5183               	movf	(??___simple_search_fl+1)& (0+255),w,b
  1437   001472  2193               	addwfc	(___simple_search_fl@best+1)& (0+255),w,b
  1438   001474  6F85               	movwf	(??___simple_search_fl+3)& (0+255),b
  1439   001476  0E02               	movlw	2
  1440   001478  2584               	addwf	(??___simple_search_fl+2)& (0+255),w,b
  1441   00147A  6F8A               	movwf	___simple_search_fl@split& (0+255),b
  1442   00147C  0E00               	movlw	0
  1443   00147E  2185               	addwfc	(??___simple_search_fl+3)& (0+255),w,b
  1444   001480  6F8B               	movwf	(___simple_search_fl@split+1)& (0+255),b
  1445   001482  C08A  FFD9         	movff	___simple_search_fl@split,fsr2l
  1446   001486  C08B  FFDA         	movff	___simple_search_fl@split+1,fsr2h
  1447   00148A  C086  FFDE         	movff	___simple_search_fl@remaining_size,postinc2
  1448   00148E  C087  FFDD         	movff	___simple_search_fl@remaining_size+1,postdec2
  1449   001492                     
  1450                           ; BSR set to: 0
  1451   001492  EE20 F002          	lfsr	2,2
  1452   001496  518A               	movf	___simple_search_fl@split& (0+255),w,b
  1453   001498  26D9               	addwf	fsr2l,f,c
  1454   00149A  518B               	movf	(___simple_search_fl@split+1)& (0+255),w,b
  1455   00149C  22DA               	addwfc	fsr2h,f,c
  1456   00149E  C08E  FFDE         	movff	___simple_search_fl@next,postinc2
  1457   0014A2  C08F  FFDD         	movff	___simple_search_fl@next+1,postdec2
  1458   0014A6  C08A  F08E         	movff	___simple_search_fl@split,___simple_search_fl@next
  1459   0014AA  C08B  F08F         	movff	___simple_search_fl@split+1,___simple_search_fl@next+1
  1460   0014AE                     l986:
  1461                           
  1462                           ; BSR set to: 0
  1463   0014AE  5192               	movf	___simple_search_fl@best& (0+255),w,b
  1464   0014B0  19AC               	xorwf	___freelist& (0+255),w,b
  1465   0014B2  E107               	bnz	u1961
  1466   0014B4  5193               	movf	(___simple_search_fl@best+1)& (0+255),w,b
  1467   0014B6  19AD               	xorwf	(___freelist+1)& (0+255),w,b
  1468   0014B8  A4D8               	btfss	status,2,c
  1469   0014BA  EF61  F00A         	goto	u1961
  1470   0014BE  EF63  F00A         	goto	u1960
  1471   0014C2                     u1961:
  1472   0014C2  EF69  F00A         	goto	l2441
  1473   0014C6                     u1960:
  1474   0014C6                     
  1475                           ; BSR set to: 0
  1476   0014C6  C08E  F0AC         	movff	___simple_search_fl@next,___freelist
  1477   0014CA  C08F  F0AD         	movff	___simple_search_fl@next+1,___freelist+1
  1478   0014CE  EF73  F00A         	goto	l2443
  1479   0014D2                     l2441:
  1480                           
  1481                           ; BSR set to: 0
  1482   0014D2  EE20 F002          	lfsr	2,2
  1483   0014D6  5188               	movf	___simple_search_fl@best_last& (0+255),w,b
  1484   0014D8  26D9               	addwf	fsr2l,f,c
  1485   0014DA  5189               	movf	(___simple_search_fl@best_last+1)& (0+255),w,b
  1486   0014DC  22DA               	addwfc	fsr2h,f,c
  1487   0014DE  C08E  FFDE         	movff	___simple_search_fl@next,postinc2
  1488   0014E2  C08F  FFDD         	movff	___simple_search_fl@next+1,postdec2
  1489   0014E6                     l2443:
  1490                           
  1491                           ; BSR set to: 0
  1492   0014E6  0E02               	movlw	2
  1493   0014E8  2592               	addwf	___simple_search_fl@best& (0+255),w,b
  1494   0014EA  6F80               	movwf	?___simple_search_fl& (0+255),b
  1495   0014EC  0E00               	movlw	0
  1496   0014EE  2193               	addwfc	(___simple_search_fl@best+1)& (0+255),w,b
  1497   0014F0  6F81               	movwf	(?___simple_search_fl+1)& (0+255),b
  1498   0014F2                     l975:
  1499                           
  1500                           ; BSR set to: 0
  1501   0014F2  0012               	return		;funcret
  1502   0014F4                     __end_of___simple_search_fl:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function ___expand_heap *****************
  1506 ;; Defined at:
  1507 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\expand_heap.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  pn              1    0[BANK0 ] PTR unsigned int 
  1510 ;;		 -> malloc@m(2), 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  new_brkp        2    6[BANK0 ] PTR unsigned char 
  1513 ;;		 -> __heap_hi(0), NULL(0), 
  1514 ;;  n               2    4[BANK0 ] unsigned int 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  2    0[BANK0 ] PTR void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;Total ram usage:        8 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 7
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_malloc
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text6
  1539   001ED8                     __ptext6:
  1540                           	callstack 0
  1541   001ED8                     ___expand_heap:
  1542                           	callstack 21
  1543   001ED8  0100               	movlb	0	; () banked
  1544   001EDA  5180               	movf	___expand_heap@pn& (0+255),w,b
  1545   001EDC  6ED9               	movwf	fsr2l,c
  1546   001EDE  6ADA               	clrf	fsr2h,c
  1547   001EE0  CFDE F084          	movff	postinc2,___expand_heap@n
  1548   001EE4  CFDD F085          	movff	postdec2,___expand_heap@n+1
  1549   001EE8                     
  1550                           ; BSR set to: 0
  1551   001EE8  51A6               	movf	_brkp& (0+255),w,b
  1552   001EEA  11A7               	iorwf	(_brkp+1)& (0+255),w,b
  1553   001EEC  A4D8               	btfss	status,2,c
  1554   001EEE  EF7B  F00F         	goto	u1971
  1555   001EF2  EF7D  F00F         	goto	u1970
  1556   001EF6                     u1971:
  1557   001EF6  EF81  F00F         	goto	l1034
  1558   001EFA                     u1970:
  1559   001EFA                     
  1560                           ; BSR set to: 0
  1561   001EFA  0EEF               	movlw	low ___heap_hi
  1562   001EFC  6FA6               	movwf	_brkp& (0+255),b
  1563   001EFE  0E0E               	movlw	high ___heap_hi
  1564   001F00  6FA7               	movwf	(_brkp+1)& (0+255),b
  1565   001F02                     l1034:
  1566                           
  1567                           ; BSR set to: 0
  1568   001F02  5185               	movf	(___expand_heap@n+1)& (0+255),w,b
  1569   001F04  E107               	bnz	u1981
  1570   001F06  0E05               	movlw	5
  1571   001F08  5D84               	subwf	___expand_heap@n& (0+255),w,b
  1572   001F0A  B0D8               	btfsc	status,0,c
  1573   001F0C  EF8A  F00F         	goto	u1981
  1574   001F10  EF8C  F00F         	goto	u1980
  1575   001F14                     u1981:
  1576   001F14  EF90  F00F         	goto	l2459
  1577   001F18                     u1980:
  1578   001F18                     
  1579                           ; BSR set to: 0
  1580   001F18  0E00               	movlw	0
  1581   001F1A  6F85               	movwf	(___expand_heap@n+1)& (0+255),b
  1582   001F1C  0E05               	movlw	5
  1583   001F1E  6F84               	movwf	___expand_heap@n& (0+255),b
  1584   001F20                     l2459:
  1585                           
  1586                           ; BSR set to: 0
  1587   001F20  5184               	movf	___expand_heap@n& (0+255),w,b
  1588   001F22  5DA6               	subwf	_brkp& (0+255),w,b
  1589   001F24  6F86               	movwf	___expand_heap@new_brkp& (0+255),b
  1590   001F26  5185               	movf	(___expand_heap@n+1)& (0+255),w,b
  1591   001F28  59A7               	subwfb	(_brkp+1)& (0+255),w,b
  1592   001F2A  6F87               	movwf	(___expand_heap@new_brkp+1)& (0+255),b
  1593   001F2C                     
  1594                           ; BSR set to: 0
  1595   001F2C  0EB6               	movlw	low ___heap_lo
  1596   001F2E  6F82               	movwf	??___expand_heap& (0+255),b
  1597   001F30  0E00               	movlw	high ___heap_lo
  1598   001F32  6F83               	movwf	(??___expand_heap+1)& (0+255),b
  1599   001F34  5182               	movf	??___expand_heap& (0+255),w,b
  1600   001F36  5D86               	subwf	___expand_heap@new_brkp& (0+255),w,b
  1601   001F38  5183               	movf	(??___expand_heap+1)& (0+255),w,b
  1602   001F3A  5987               	subwfb	(___expand_heap@new_brkp+1)& (0+255),w,b
  1603   001F3C  A0D8               	btfss	status,0,c
  1604   001F3E  EFA3  F00F         	goto	u1991
  1605   001F42  EFA5  F00F         	goto	u1990
  1606   001F46                     u1991:
  1607   001F46  EFB0  F00F         	goto	l2465
  1608   001F4A                     u1990:
  1609   001F4A                     
  1610                           ; BSR set to: 0
  1611   001F4A  51A6               	movf	_brkp& (0+255),w,b
  1612   001F4C  5D86               	subwf	___expand_heap@new_brkp& (0+255),w,b
  1613   001F4E  51A7               	movf	(_brkp+1)& (0+255),w,b
  1614   001F50  5987               	subwfb	(___expand_heap@new_brkp+1)& (0+255),w,b
  1615   001F52  A0D8               	btfss	status,0,c
  1616   001F54  EFAE  F00F         	goto	u2001
  1617   001F58  EFB0  F00F         	goto	u2000
  1618   001F5C                     u2001:
  1619   001F5C  EFBA  F00F         	goto	l2471
  1620   001F60                     u2000:
  1621   001F60                     l2465:
  1622                           
  1623                           ; BSR set to: 0
  1624   001F60  0E00               	movlw	0
  1625   001F62  6E4C               	movwf	(_errno+1)^0,c
  1626   001F64  0E0C               	movlw	12
  1627   001F66  6E4B               	movwf	_errno^0,c
  1628   001F68                     
  1629                           ; BSR set to: 0
  1630   001F68  0E00               	movlw	0
  1631   001F6A  6F80               	movwf	?___expand_heap& (0+255),b
  1632   001F6C  0E00               	movlw	0
  1633   001F6E  6F81               	movwf	(?___expand_heap+1)& (0+255),b
  1634   001F70  EFC2  F00F         	goto	l1039
  1635   001F74                     l2471:
  1636                           
  1637                           ; BSR set to: 0
  1638   001F74  C086  F0A6         	movff	___expand_heap@new_brkp,_brkp
  1639   001F78  C087  F0A7         	movff	___expand_heap@new_brkp+1,_brkp+1
  1640   001F7C  C0A6  F080         	movff	_brkp,?___expand_heap
  1641   001F80  C0A7  F081         	movff	_brkp+1,?___expand_heap+1
  1642   001F84                     l1039:
  1643                           
  1644                           ; BSR set to: 0
  1645   001F84  0012               	return		;funcret
  1646   001F86                     __end_of___expand_heap:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _lnInitIsr *****************
  1650 ;; Defined at:
  1651 ;;		line 79 in file "ln.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		None
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 7
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_lnInit
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text7
  1680   0024CC                     __ptext7:
  1681                           	callstack 0
  1682   0024CC                     _lnInitIsr:
  1683                           	callstack 22
  1684   0024CC  909F               	bcf	159,0,c	;volatile
  1685   0024CE  9A9F               	bcf	159,5,c	;volatile
  1686   0024D0  8ED0               	bsf	208,7,c	;volatile
  1687   0024D2  8EF2               	bsf	242,7,c	;volatile
  1688   0024D4  8CF2               	bsf	242,6,c	;volatile
  1689   0024D6  8A9D               	bsf	157,5,c	;volatile
  1690   0024D8  809D               	bsf	157,0,c	;volatile
  1691   0024DA  0012               	return		;funcret
  1692   0024DC                     __end_of_lnInitIsr:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _lnInitEusart *****************
  1696 ;; Defined at:
  1697 ;;		line 44 in file "ln.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 8
  1718 ;; This function calls:
  1719 ;;		_setBRG
  1720 ;; This function is called by:
  1721 ;;		_lnInit
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text8
  1726   002486                     __ptext8:
  1727                           	callstack 0
  1728   002486                     _lnInitEusart:
  1729                           	callstack 21
  1730   002486                     
  1731                           ;ln.c: 47:     RCSTAbits.SPEN = 1;
  1732   002486  9C94               	bcf	148,6,c	;volatile
  1733                           
  1734                           ;ln.c: 48:     return;
  1735   002488  8E94               	bsf	148,7,c	;volatile
  1736   00248A                     
  1737                           ;ln.c: 51: void lnInitTmr1(void)
  1738   00248A  EC75  F012         	call	_setBRG	;wreg free
  1739   00248E                     
  1740                           ;ln.c: 52: {
  1741   00248E  86B8               	bsf	184,3,c	;volatile
  1742   002490                     
  1743                           ;ln.c: 53:     TMR1H = 0x00;
  1744   002490  88B8               	bsf	184,4,c	;volatile
  1745   002492                     
  1746                           ;ln.c: 54:     TMR1L = 0x00;
  1747   002492  98AC               	bcf	172,4,c	;volatile
  1748   002494                     
  1749                           ;ln.c: 55:     T1CON = 0b00110001;
  1750   002494  94AC               	bcf	172,2,c	;volatile
  1751   002496                     
  1752                           ;ln.c: 56: 
  1753   002496  8AAC               	bsf	172,5,c	;volatile
  1754   002498                     
  1755                           ;ln.c: 57: 
  1756   002498  98AB               	bcf	171,4,c	;volatile
  1757   00249A                     
  1758                           ;ln.c: 58: 
  1759   00249A  88AB               	bsf	171,4,c	;volatile
  1760   00249C                     
  1761                           ;ln.c: 59: 
  1762   00249C  CFAE F056          	movff	4014,__	;volatile
  1763   0024A0                     
  1764                           ;ln.c: 61: 
  1765   0024A0  8EAB               	bsf	171,7,c	;volatile
  1766   0024A2  0012               	return		;funcret
  1767   0024A4                     __end_of_lnInitEusart:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _setBRG *****************
  1771 ;; Defined at:
  1772 ;;		line 509 in file "ln.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 7
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_lnInitEusart
  1797 ;;		_syncBRG
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text9
  1802   0024EA                     __ptext9:
  1803                           	callstack 0
  1804   0024EA                     _setBRG:
  1805                           	callstack 21
  1806   0024EA                     
  1807                           ;ln.c: 511:     SPBRGH = 0;
  1808   0024EA  0E00               	movlw	0
  1809   0024EC  6EB0               	movwf	176,c	;volatile
  1810                           
  1811                           ;ln.c: 512:     SPBRG = 119u;
  1812   0024EE  0E77               	movlw	119
  1813   0024F0  6EAF               	movwf	175,c	;volatile
  1814   0024F2  0012               	return		;funcret
  1815   0024F4                     __end_of_setBRG:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _lnInitComparator *****************
  1819 ;; Defined at:
  1820 ;;		line 34 in file "ln.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 7
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_lnInit
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text10
  1849   0024F4                     __ptext10:
  1850                           	callstack 0
  1851   0024F4                     _lnInitComparator:
  1852                           	callstack 22
  1853   0024F4                     
  1854                           ;ln.c: 36: 
  1855   0024F4  0E01               	movlw	1
  1856   0024F6  6EB4               	movwf	180,c	;volatile
  1857   0024F8                     
  1858                           ;ln.c: 40:     TXSTAbits.SYNC = 0;
  1859   0024F8  9892               	bcf	146,4,c	;volatile
  1860   0024FA  0012               	return		;funcret
  1861   0024FC                     __end_of_lnInitComparator:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _lnIsr *****************
  1865 ;; Defined at:
  1866 ;;		line 99 in file "ln.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;Total ram usage:        9 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 6
  1887 ;; This function calls:
  1888 ;;		_free
  1889 ;;		_lnIsrRc
  1890 ;;		_lnIsrTmr1
  1891 ;;		_startLinebreakExtension
  1892 ;; This function is called by:
  1893 ;;		Interrupt level 1
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	intcodelo
  1898   000018                     __pintcodelo:
  1899                           	callstack 0
  1900   000018                     _lnIsr:
  1901                           	callstack 20
  1902                           
  1903                           ;incstack = 0
  1904   000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1905   00001A  CFD8 F03E          	movff	status,??_lnIsr
  1906   00001E  CFE8 F03F          	movff	wreg,??_lnIsr+1
  1907   000022  CFE0 F040          	movff	bsr,??_lnIsr+2
  1908   000026  CFE1 F041          	movff	fsr1l,??_lnIsr+3
  1909   00002A  CFE2 F042          	movff	fsr1h,??_lnIsr+4
  1910   00002E  CFD9 F043          	movff	fsr2l,??_lnIsr+5
  1911   000032  CFDA F044          	movff	fsr2h,??_lnIsr+6
  1912   000036  CFF3 F045          	movff	prodl,??_lnIsr+7
  1913   00003A  CFF4 F046          	movff	prodh,??_lnIsr+8
  1914   00003E                     
  1915                           ;ln.c: 101:     if (PIE1bits.TMR1IE && PIR1bits.TMR1IF)
  1916   00003E  A09D               	btfss	157,0,c	;volatile
  1917   000040  EF24  F000         	goto	i1u227_21
  1918   000044  EF26  F000         	goto	i1u227_20
  1919   000048                     i1u227_21:
  1920   000048  EF32  F000         	goto	i1l177
  1921   00004C                     i1u227_20:
  1922   00004C  A09E               	btfss	158,0,c	;volatile
  1923   00004E  EF2B  F000         	goto	i1u228_21
  1924   000052  EF2D  F000         	goto	i1u228_20
  1925   000056                     i1u228_21:
  1926   000056  EF32  F000         	goto	i1l177
  1927   00005A                     i1u228_20:
  1928   00005A                     
  1929                           ;ln.c: 102:     {;ln.c: 104:         PIR1bits.TMR1IF = 0;
  1930   00005A  909E               	bcf	158,0,c	;volatile
  1931   00005C                     
  1932                           ;ln.c: 105:         lnIsrTmr1();
  1933   00005C  EC1A  F010         	call	_lnIsrTmr1	;wreg free
  1934                           
  1935                           ;ln.c: 106:     }
  1936   000060  EF8C  F000         	goto	i1l185
  1937   000064                     i1l177:
  1938                           
  1939                           ;ln.c: 108:     {;ln.c: 109:         if (PIE1bits.RCIE)
  1940   000064  AA9D               	btfss	157,5,c	;volatile
  1941   000066  EF37  F000         	goto	i1u229_21
  1942   00006A  EF39  F000         	goto	i1u229_20
  1943   00006E                     i1u229_21:
  1944   00006E  EF8C  F000         	goto	i1l185
  1945   000072                     i1u229_20:
  1946   000072                     
  1947                           ;ln.c: 110:         {;ln.c: 111:             if (RCSTAbits.FERR)
  1948   000072  A4AB               	btfss	171,2,c	;volatile
  1949   000074  EF3E  F000         	goto	i1u230_21
  1950   000078  EF40  F000         	goto	i1u230_20
  1951   00007C                     i1u230_21:
  1952   00007C  EF88  F000         	goto	i1l2803
  1953   000080                     i1u230_20:
  1954   000080                     
  1955                           ;ln.c: 112:             {;ln.c: 114:                 _ = RCREG;
  1956   000080  CFAE F056          	movff	4014,__	;volatile
  1957   000084                     
  1958                           ;ln.c: 115:                 if (lnRxCounter > 0)
  1959   000084  5055               	movf	_lnRxCounter^0,w,c
  1960   000086  B4D8               	btfsc	status,2,c
  1961   000088  EF48  F000         	goto	i1u231_21
  1962   00008C  EF4A  F000         	goto	i1u231_20
  1963   000090                     i1u231_21:
  1964   000090  EF5E  F000         	goto	i1l181
  1965   000094                     i1u231_20:
  1966   000094                     
  1967                           ;ln.c: 116:                 {;ln.c: 118:                     lnRxCounter = 0;
  1968   000094  0E00               	movlw	0
  1969   000096  6E55               	movwf	_lnRxCounter^0,c
  1970   000098                     
  1971                           ;ln.c: 119:                     free(lnRxMessage->lnData);
  1972   000098  EE20 F003          	lfsr	2,3
  1973   00009C  504F               	movf	_lnRxMessage^0,w,c
  1974   00009E  26D9               	addwf	fsr2l,f,c
  1975   0000A0  5050               	movf	(_lnRxMessage+1)^0,w,c
  1976   0000A2  22DA               	addwfc	fsr2h,f,c
  1977   0000A4  CFDE F001          	movff	postinc2,free@ptr
  1978   0000A8  CFDD F002          	movff	postdec2,free@ptr+1
  1979   0000AC  ECDE  F00C         	call	_free	;wreg free
  1980   0000B0                     
  1981                           ;ln.c: 120:                     free(lnRxMessage);
  1982   0000B0  C04F  F001         	movff	_lnRxMessage,free@ptr
  1983   0000B4  C050  F002         	movff	_lnRxMessage+1,free@ptr+1
  1984   0000B8  ECDE  F00C         	call	_free	;wreg free
  1985   0000BC                     i1l181:
  1986                           
  1987                           ;ln.c: 122:                 if (lnTxCounter > 0)
  1988   0000BC  5054               	movf	_lnTxCounter^0,w,c
  1989   0000BE  B4D8               	btfsc	status,2,c
  1990   0000C0  EF64  F000         	goto	i1u232_21
  1991   0000C4  EF66  F000         	goto	i1u232_20
  1992   0000C8                     i1u232_21:
  1993   0000C8  EF7A  F000         	goto	i1l2799
  1994   0000CC                     i1u232_20:
  1995   0000CC                     
  1996                           ;ln.c: 123:                 {;ln.c: 125:                     lnTxCounter = 0;
  1997   0000CC  0E00               	movlw	0
  1998   0000CE  6E54               	movwf	_lnTxCounter^0,c
  1999   0000D0                     
  2000                           ;ln.c: 126:                     free(lnTxMessage->lnData);
  2001   0000D0  EE20 F003          	lfsr	2,3
  2002   0000D4  504D               	movf	_lnTxMessage^0,w,c
  2003   0000D6  26D9               	addwf	fsr2l,f,c
  2004   0000D8  504E               	movf	(_lnTxMessage+1)^0,w,c
  2005   0000DA  22DA               	addwfc	fsr2h,f,c
  2006   0000DC  CFDE F001          	movff	postinc2,free@ptr
  2007   0000E0  CFDD F002          	movff	postdec2,free@ptr+1
  2008   0000E4  ECDE  F00C         	call	_free	;wreg free
  2009   0000E8                     
  2010                           ;ln.c: 127:                     free(lnTxMessage);
  2011   0000E8  C04D  F001         	movff	_lnTxMessage,free@ptr
  2012   0000EC  C04E  F002         	movff	_lnTxMessage+1,free@ptr+1
  2013   0000F0  ECDE  F00C         	call	_free	;wreg free
  2014   0000F4                     i1l2799:
  2015                           
  2016                           ;ln.c: 129:                 if (LNCONbits.TMR1_MODE != 2)
  2017   0000F4  5057               	movf	_LNCONbits^0,w,c
  2018   0000F6  0B03               	andlw	3
  2019   0000F8  0A02               	xorlw	2
  2020   0000FA  B4D8               	btfsc	status,2,c
  2021   0000FC  EF82  F000         	goto	i1u233_21
  2022   000100  EF84  F000         	goto	i1u233_20
  2023   000104                     i1u233_21:
  2024   000104  EF8C  F000         	goto	i1l179
  2025   000108                     i1u233_20:
  2026   000108                     
  2027                           ;ln.c: 130:                 {;ln.c: 136:                     startLinebreakExtension();
  2028   000108  EC5D  F012         	call	_startLinebreakExtension	;wreg free
  2029   00010C  EF8C  F000         	goto	i1l185
  2030   000110                     i1l2803:
  2031                           
  2032                           ;ln.c: 140:             {;ln.c: 142:                 lnIsrRc();
  2033   000110  EC0D  F011         	call	_lnIsrRc	;wreg free
  2034   000114  EF8C  F000         	goto	i1l185
  2035   000118                     i1l179:
  2036   000118                     i1l185:
  2037   000118  C046  FFF4         	movff	??_lnIsr+8,prodh
  2038   00011C  C045  FFF3         	movff	??_lnIsr+7,prodl
  2039   000120  C044  FFDA         	movff	??_lnIsr+6,fsr2h
  2040   000124  C043  FFD9         	movff	??_lnIsr+5,fsr2l
  2041   000128  C042  FFE2         	movff	??_lnIsr+4,fsr1h
  2042   00012C  C041  FFE1         	movff	??_lnIsr+3,fsr1l
  2043   000130  C040  FFE0         	movff	??_lnIsr+2,bsr
  2044   000134  C03F  FFE8         	movff	??_lnIsr+1,wreg
  2045   000138  C03E  FFD8         	movff	??_lnIsr,status
  2046   00013C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2047   00013E  0010               	retfie	
  2048   000140                     __end_of_lnIsr:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _startLinebreakExtension *****************
  2052 ;; Defined at:
  2053 ;;		line 456 in file "ln.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_lnIsr
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text12
  2081   0024BA                     __ptext12:
  2082                           	callstack 0
  2083   0024BA                     _startLinebreakExtension:
  2084                           	callstack 25
  2085   0024BA                     
  2086                           ;ln.c: 458:     ((void)(TMR1H=((~900)>>8),TMR1L=((~900)&0xFF)));
  2087   0024BA  0EFC               	movlw	252
  2088   0024BC  6ECF               	movwf	207,c	;volatile
  2089   0024BE  0E7B               	movlw	123
  2090   0024C0  6ECE               	movwf	206,c	;volatile
  2091                           
  2092                           ;ln.c: 459:     LNCONbits.TMR1_MODE = 2;
  2093   0024C2  5057               	movf	_LNCONbits^0,w,c
  2094   0024C4  0BFC               	andlw	-4
  2095   0024C6  0902               	iorlw	2
  2096   0024C8  6E57               	movwf	_LNCONbits^0,c
  2097   0024CA  0012               	return		;funcret
  2098   0024CC                     __end_of_startLinebreakExtension:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _lnIsrTmr1 *****************
  2102 ;; Defined at:
  2103 ;;		line 155 in file "ln.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        2 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 3
  2124 ;; This function calls:
  2125 ;;		_isLnFree
  2126 ;;		_startCmpDelay
  2127 ;;		_txHandler
  2128 ;; This function is called by:
  2129 ;;		_lnIsr
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text13
  2134   002034                     __ptext13:
  2135                           	callstack 0
  2136   002034                     _lnIsrTmr1:
  2137                           	callstack 22
  2138   002034                     
  2139                           ;ln.c: 157:     switch (LNCONbits.TMR1_MODE)
  2140   002034  EF42  F010         	goto	i1l2739
  2141   002038                     i1l189:
  2142                           
  2143                           ;ln.c: 161:         RCSTAbits.SPEN = 1;
  2144   002038  8EAB               	bsf	171,7,c	;volatile
  2145                           
  2146                           ;ln.c: 162:         PORTCbits.RC6 = 0;
  2147   00203A  9C82               	bcf	130,6,c	;volatile
  2148   00203C                     i1l2719:
  2149                           
  2150                           ;ln.c: 163:         startCmpDelay();
  2151   00203C  ECA3  F011         	call	_startCmpDelay	;wreg free
  2152                           
  2153                           ;ln.c: 164:         break;
  2154   002040  EF5C  F010         	goto	i1l198
  2155   002044                     i1l2721:
  2156                           
  2157                           ;ln.c: 169:         if (isLnFree())
  2158   002044  EC1E  F012         	call	_isLnFree	;wreg free
  2159   002048  0900               	iorlw	0
  2160   00204A  B4D8               	btfsc	status,2,c
  2161   00204C  EF2A  F010         	goto	i1u222_21
  2162   002050  EF2C  F010         	goto	i1u222_20
  2163   002054                     i1u222_21:
  2164   002054  EF1E  F010         	goto	i1l2719
  2165   002058                     i1u222_20:
  2166   002058                     
  2167                           ;ln.c: 170:         {;ln.c: 171:             LNCONbits.TMR1_MODE = 0;
  2168   002058  0EFC               	movlw	-4
  2169   00205A  1657               	andwf	_LNCONbits^0,f,c
  2170                           
  2171                           ;ln.c: 172:         }
  2172   00205C  EF5C  F010         	goto	i1l198
  2173   002060                     i1l2727:
  2174                           
  2175                           ;ln.c: 181:         txHandler();
  2176   002060  EC8C  F00D         	call	_txHandler	;wreg free
  2177   002064                     
  2178                           ;ln.c: 182:         if (isLnFree())
  2179   002064  EC1E  F012         	call	_isLnFree	;wreg free
  2180   002068  0900               	iorlw	0
  2181   00206A  B4D8               	btfsc	status,2,c
  2182   00206C  EF3A  F010         	goto	i1u223_21
  2183   002070  EF3C  F010         	goto	i1u223_20
  2184   002074                     i1u223_21:
  2185   002074  EF1E  F010         	goto	i1l2719
  2186   002078                     i1u223_20:
  2187   002078                     
  2188                           ;ln.c: 183:         {;ln.c: 184:             LNCONbits.TMR1_MODE = 0;
  2189   002078  0EFC               	movlw	-4
  2190   00207A  1657               	andwf	_LNCONbits^0,f,c
  2191   00207C                     
  2192                           ;ln.c: 185:             txHandler();
  2193   00207C  EC8C  F00D         	call	_txHandler	;wreg free
  2194                           
  2195                           ;ln.c: 186:         }
  2196   002080  EF5C  F010         	goto	i1l198
  2197   002084                     i1l2739:
  2198   002084  5057               	movf	_LNCONbits^0,w,c
  2199   002086  0B03               	andlw	3
  2200   002088  6E0F               	movwf	??_lnIsrTmr1^0,c
  2201   00208A  6A10               	clrf	(??_lnIsrTmr1+1)^0,c
  2202                           
  2203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2204                           ; Switch size 1, requested type "simple"
  2205                           ; Number of cases is 1, Range of values is 0 to 0
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte            4     3 (average)
  2209                           ;	Chosen strategy is simple_byte
  2210   00208C  5010               	movf	(??_lnIsrTmr1+1)^0,w,c
  2211   00208E  0A00               	xorlw	0	; case 0
  2212   002090  B4D8               	btfsc	status,2,c
  2213   002092  EF4D  F010         	goto	i1l3223
  2214   002096  EF5C  F010         	goto	i1l198
  2215   00209A                     i1l3223:
  2216                           
  2217                           ; Switch size 1, requested type "simple"
  2218                           ; Number of cases is 3, Range of values is 1 to 3
  2219                           ; switch strategies available:
  2220                           ; Name         Instructions Cycles
  2221                           ; simple_byte           10     6 (average)
  2222                           ;	Chosen strategy is simple_byte
  2223   00209A  500F               	movf	??_lnIsrTmr1^0,w,c
  2224   00209C  0A01               	xorlw	1	; case 1
  2225   00209E  B4D8               	btfsc	status,2,c
  2226   0020A0  EF1C  F010         	goto	i1l189
  2227   0020A4  0A03               	xorlw	3	; case 2
  2228   0020A6  B4D8               	btfsc	status,2,c
  2229   0020A8  EF22  F010         	goto	i1l2721
  2230   0020AC  0A01               	xorlw	1	; case 3
  2231   0020AE  B4D8               	btfsc	status,2,c
  2232   0020B0  EF30  F010         	goto	i1l2727
  2233   0020B4  EF5C  F010         	goto	i1l198
  2234   0020B8                     i1l198:
  2235   0020B8  0012               	return		;funcret
  2236   0020BA                     __end_of_lnIsrTmr1:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _lnIsrRc *****************
  2240 ;; Defined at:
  2241 ;;		line 201 in file "ln.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  lnRxData        1   60[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:        1 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 5
  2262 ;; This function calls:
  2263 ;;		_free
  2264 ;;		_rxHandler
  2265 ;;		_startLinebreak
  2266 ;;		_txHandler
  2267 ;; This function is called by:
  2268 ;;		_lnIsr
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text14
  2273   00221A                     __ptext14:
  2274                           	callstack 0
  2275   00221A                     _lnIsrRc:
  2276                           	callstack 20
  2277   00221A                     
  2278                           ;ln.c: 203:     uint8_t lnRxData = RCREG;
  2279   00221A  CFAE F03D          	movff	4014,lnIsrRc@lnRxData	;volatile
  2280   00221E                     
  2281                           ;ln.c: 205:     if (lnTxCounter != 0)
  2282   00221E  5054               	movf	_lnTxCounter^0,w,c
  2283   002220  B4D8               	btfsc	status,2,c
  2284   002222  EF15  F011         	goto	i1u224_21
  2285   002226  EF17  F011         	goto	i1u224_20
  2286   00222A                     i1u224_21:
  2287   00222A  EF3C  F011         	goto	i1l2759
  2288   00222E                     i1u224_20:
  2289   00222E                     
  2290                           ;ln.c: 206:     {;ln.c: 208:         if (lnTxData == lnRxData)
  2291   00222E  503D               	movf	lnIsrRc@lnRxData^0,w,c
  2292   002230  1853               	xorwf	_lnTxData^0,w,c
  2293   002232  A4D8               	btfss	status,2,c
  2294   002234  EF1E  F011         	goto	i1u225_21
  2295   002238  EF20  F011         	goto	i1u225_20
  2296   00223C                     i1u225_21:
  2297   00223C  EF24  F011         	goto	i1l2753
  2298   002240                     i1u225_20:
  2299   002240                     
  2300                           ;ln.c: 209:         {;ln.c: 211:             txHandler();
  2301   002240  EC8C  F00D         	call	_txHandler	;wreg free
  2302                           
  2303                           ;ln.c: 212:         }
  2304   002244  EF3F  F011         	goto	i1l205
  2305   002248                     i1l2753:
  2306                           
  2307                           ;ln.c: 214:         {;ln.c: 217:             free(lnTxMessage->lnData);
  2308   002248  EE20 F003          	lfsr	2,3
  2309   00224C  504D               	movf	_lnTxMessage^0,w,c
  2310   00224E  26D9               	addwf	fsr2l,f,c
  2311   002250  504E               	movf	(_lnTxMessage+1)^0,w,c
  2312   002252  22DA               	addwfc	fsr2h,f,c
  2313   002254  CFDE F001          	movff	postinc2,free@ptr
  2314   002258  CFDD F002          	movff	postdec2,free@ptr+1
  2315   00225C  ECDE  F00C         	call	_free	;wreg free
  2316                           
  2317                           ;ln.c: 218:             free(lnTxMessage);
  2318   002260  C04D  F001         	movff	_lnTxMessage,free@ptr
  2319   002264  C04E  F002         	movff	_lnTxMessage+1,free@ptr+1
  2320   002268  ECDE  F00C         	call	_free	;wreg free
  2321   00226C                     
  2322                           ;ln.c: 220:             lnTxCounter = 0;
  2323   00226C  0E00               	movlw	0
  2324   00226E  6E54               	movwf	_lnTxCounter^0,c
  2325   002270                     
  2326                           ;ln.c: 222:             startLinebreak();
  2327   002270  EC52  F012         	call	_startLinebreak	;wreg free
  2328   002274  EF3F  F011         	goto	i1l205
  2329   002278                     i1l2759:
  2330                           
  2331                           ;ln.c: 226:     {;ln.c: 228:         rxHandler(lnRxData);
  2332   002278  503D               	movf	lnIsrRc@lnRxData^0,w,c
  2333   00227A  EC7A  F00A         	call	_rxHandler
  2334   00227E                     i1l205:
  2335   00227E  0012               	return		;funcret
  2336   002280                     __end_of_lnIsrRc:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _txHandler *****************
  2340 ;; Defined at:
  2341 ;;		line 354 in file "ln.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 2
  2362 ;; This function calls:
  2363 ;;		_deQueue
  2364 ;;		_free
  2365 ;;		_isLnFree
  2366 ;;		_startCmpDelay
  2367 ;;		_startLinebreak
  2368 ;; This function is called by:
  2369 ;;		_lnIsrTmr1
  2370 ;;		_lnIsrRc
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text15
  2375   001B18                     __ptext15:
  2376                           	callstack 0
  2377   001B18                     _txHandler:
  2378                           	callstack 22
  2379   001B18                     
  2380                           ;ln.c: 356:     if (isLnFree())
  2381   001B18  EC1E  F012         	call	_isLnFree	;wreg free
  2382   001B1C  0900               	iorlw	0
  2383   001B1E  B4D8               	btfsc	status,2,c
  2384   001B20  EF94  F00D         	goto	i1u212_21
  2385   001B24  EF96  F00D         	goto	i1u212_20
  2386   001B28                     i1u212_21:
  2387   001B28  EF13  F00E         	goto	i1l2635
  2388   001B2C                     i1u212_20:
  2389   001B2C                     
  2390                           ;ln.c: 357:     {;ln.c: 361:         if (lnTxCounter == 0)
  2391   001B2C  5054               	movf	_lnTxCounter^0,w,c
  2392   001B2E  A4D8               	btfss	status,2,c
  2393   001B30  EF9C  F00D         	goto	i1u213_21
  2394   001B34  EF9E  F00D         	goto	i1u213_20
  2395   001B38                     i1u213_21:
  2396   001B38  EFB3  F00D         	goto	i1l2625
  2397   001B3C                     i1u213_20:
  2398   001B3C                     
  2399                           ;ln.c: 362:         {;ln.c: 363:             TXREG = lnTxMessage->opCode;
  2400   001B3C  EE20 F001          	lfsr	2,1
  2401   001B40  504D               	movf	_lnTxMessage^0,w,c
  2402   001B42  26D9               	addwf	fsr2l,f,c
  2403   001B44  504E               	movf	(_lnTxMessage+1)^0,w,c
  2404   001B46  22DA               	addwfc	fsr2h,f,c
  2405   001B48  50DF               	movf	indf2,w,c
  2406   001B4A  6EAD               	movwf	173,c	;volatile
  2407                           
  2408                           ;ln.c: 364:             lnTxData = lnTxMessage->opCode;
  2409   001B4C  EE20 F001          	lfsr	2,1
  2410   001B50  504D               	movf	_lnTxMessage^0,w,c
  2411   001B52  26D9               	addwf	fsr2l,f,c
  2412   001B54  504E               	movf	(_lnTxMessage+1)^0,w,c
  2413   001B56  22DA               	addwfc	fsr2h,f,c
  2414   001B58  50DF               	movf	indf2,w,c
  2415   001B5A  6E53               	movwf	_lnTxData^0,c
  2416   001B5C                     
  2417                           ;ln.c: 365:             LNCONbits.TMR1_MODE = 0;
  2418   001B5C  0EFC               	movlw	-4
  2419   001B5E  1657               	andwf	_LNCONbits^0,f,c
  2420   001B60                     i1l2623:
  2421                           
  2422                           ;ln.c: 366:             lnTxCounter++;
  2423   001B60  2A54               	incf	_lnTxCounter^0,f,c
  2424                           
  2425                           ;ln.c: 367:         }
  2426   001B62  EF35  F00E         	goto	i1l244
  2427   001B66                     i1l2625:
  2428                           
  2429                           ;ln.c: 369:         {;ln.c: 370:             if (lnTxCounter == lnTxMessage->size + 1)
  2430   001B66  5054               	movf	_lnTxCounter^0,w,c
  2431   001B68  6E0B               	movwf	??_txHandler^0,c
  2432   001B6A  6A0C               	clrf	(??_txHandler+1)^0,c
  2433   001B6C  C04D  FFD9         	movff	_lnTxMessage,fsr2l
  2434   001B70  C04E  FFDA         	movff	_lnTxMessage+1,fsr2h
  2435   001B74  50DF               	movf	indf2,w,c
  2436   001B76  6E0D               	movwf	(??_txHandler+2)^0,c
  2437   001B78  6A0E               	clrf	(??_txHandler+3)^0,c
  2438   001B7A  0E01               	movlw	1
  2439   001B7C  260D               	addwf	(??_txHandler+2)^0,f,c
  2440   001B7E  0E00               	movlw	0
  2441   001B80  220E               	addwfc	(??_txHandler+3)^0,f,c
  2442   001B82  500B               	movf	??_txHandler^0,w,c
  2443   001B84  180D               	xorwf	(??_txHandler+2)^0,w,c
  2444   001B86  E107               	bnz	i1u214_21
  2445   001B88  500C               	movf	(??_txHandler+1)^0,w,c
  2446   001B8A  180E               	xorwf	(??_txHandler+3)^0,w,c
  2447   001B8C  A4D8               	btfss	status,2,c
  2448   001B8E  EFCB  F00D         	goto	i1u214_21
  2449   001B92  EFCD  F00D         	goto	i1u214_20
  2450   001B96                     i1u214_21:
  2451   001B96  EFE5  F00D         	goto	i1l2631
  2452   001B9A                     i1u214_20:
  2453   001B9A                     
  2454                           ;ln.c: 371:             {;ln.c: 373:                 TXREG = lnTxMessage->checksum;
  2455   001B9A  EE20 F002          	lfsr	2,2
  2456   001B9E  504D               	movf	_lnTxMessage^0,w,c
  2457   001BA0  26D9               	addwf	fsr2l,f,c
  2458   001BA2  504E               	movf	(_lnTxMessage+1)^0,w,c
  2459   001BA4  22DA               	addwfc	fsr2h,f,c
  2460   001BA6  50DF               	movf	indf2,w,c
  2461   001BA8  6EAD               	movwf	173,c	;volatile
  2462                           
  2463                           ;ln.c: 374:                 lnTxData = lnTxMessage->checksum;
  2464   001BAA  EE20 F002          	lfsr	2,2
  2465   001BAE  504D               	movf	_lnTxMessage^0,w,c
  2466   001BB0  26D9               	addwf	fsr2l,f,c
  2467   001BB2  504E               	movf	(_lnTxMessage+1)^0,w,c
  2468   001BB4  22DA               	addwfc	fsr2h,f,c
  2469   001BB6  50DF               	movf	indf2,w,c
  2470   001BB8  6E53               	movwf	_lnTxData^0,c
  2471   001BBA                     
  2472                           ;ln.c: 375:                 deQueue(lnTxQueue);
  2473   001BBA  C0B0  F007         	movff	_lnTxQueue,deQueue@q
  2474   001BBE  C0B1  F008         	movff	_lnTxQueue+1,deQueue@q+1
  2475   001BC2  ECD6  F010         	call	_deQueue	;wreg free
  2476                           
  2477                           ;ln.c: 376:             }
  2478   001BC6  EF35  F00E         	goto	i1l244
  2479   001BCA                     i1l2631:
  2480                           
  2481                           ;ln.c: 378:             {;ln.c: 379:                 TXREG = lnTxMessage->lnData[lnTxCou
      +                          nter - 1];
  2482   001BCA  EE20 F003          	lfsr	2,3
  2483   001BCE  504D               	movf	_lnTxMessage^0,w,c
  2484   001BD0  26D9               	addwf	fsr2l,f,c
  2485   001BD2  504E               	movf	(_lnTxMessage+1)^0,w,c
  2486   001BD4  22DA               	addwfc	fsr2h,f,c
  2487   001BD6  CFDE F00B          	movff	postinc2,??_txHandler
  2488   001BDA  CFDD F00C          	movff	postdec2,??_txHandler+1
  2489   001BDE  5054               	movf	_lnTxCounter^0,w,c
  2490   001BE0  260B               	addwf	??_txHandler^0,f,c
  2491   001BE2  0E00               	movlw	0
  2492   001BE4  220C               	addwfc	(??_txHandler+1)^0,f,c
  2493   001BE6  0EFF               	movlw	255
  2494   001BE8  240B               	addwf	??_txHandler^0,w,c
  2495   001BEA  6ED9               	movwf	fsr2l,c
  2496   001BEC  0EFF               	movlw	255
  2497   001BEE  200C               	addwfc	(??_txHandler+1)^0,w,c
  2498   001BF0  6EDA               	movwf	fsr2h,c
  2499   001BF2  50DF               	movf	indf2,w,c
  2500   001BF4  6EAD               	movwf	173,c	;volatile
  2501                           
  2502                           ;ln.c: 380:                 lnTxData = lnTxMessage->lnData[lnTxCounter - 1];
  2503   001BF6  EE20 F003          	lfsr	2,3
  2504   001BFA  504D               	movf	_lnTxMessage^0,w,c
  2505   001BFC  26D9               	addwf	fsr2l,f,c
  2506   001BFE  504E               	movf	(_lnTxMessage+1)^0,w,c
  2507   001C00  22DA               	addwfc	fsr2h,f,c
  2508   001C02  CFDE F00B          	movff	postinc2,??_txHandler
  2509   001C06  CFDD F00C          	movff	postdec2,??_txHandler+1
  2510   001C0A  5054               	movf	_lnTxCounter^0,w,c
  2511   001C0C  260B               	addwf	??_txHandler^0,f,c
  2512   001C0E  0E00               	movlw	0
  2513   001C10  220C               	addwfc	(??_txHandler+1)^0,f,c
  2514   001C12  0EFF               	movlw	255
  2515   001C14  240B               	addwf	??_txHandler^0,w,c
  2516   001C16  6ED9               	movwf	fsr2l,c
  2517   001C18  0EFF               	movlw	255
  2518   001C1A  200C               	addwfc	(??_txHandler+1)^0,w,c
  2519   001C1C  6EDA               	movwf	fsr2h,c
  2520   001C1E  50DF               	movf	indf2,w,c
  2521   001C20  6E53               	movwf	_lnTxData^0,c
  2522   001C22  EFB0  F00D         	goto	i1l2623
  2523   001C26                     i1l2635:
  2524                           
  2525                           ;ln.c: 386:     {;ln.c: 391:         if (lnTxCounter == 0)
  2526   001C26  5054               	movf	_lnTxCounter^0,w,c
  2527   001C28  A4D8               	btfss	status,2,c
  2528   001C2A  EF19  F00E         	goto	i1u215_21
  2529   001C2E  EF1B  F00E         	goto	i1u215_20
  2530   001C32                     i1u215_21:
  2531   001C32  EF1F  F00E         	goto	i1l2639
  2532   001C36                     i1u215_20:
  2533   001C36                     
  2534                           ;ln.c: 392:         {;ln.c: 393:             startCmpDelay();
  2535   001C36  ECA3  F011         	call	_startCmpDelay	;wreg free
  2536                           
  2537                           ;ln.c: 394:         }
  2538   001C3A  EF23  F00E         	goto	i1l2643
  2539   001C3E                     i1l2639:
  2540                           
  2541                           ;ln.c: 396:         {;ln.c: 397:             startLinebreak();
  2542   001C3E  EC52  F012         	call	_startLinebreak	;wreg free
  2543   001C42                     
  2544                           ;ln.c: 398:             lnTxCounter = 0;
  2545   001C42  0E00               	movlw	0
  2546   001C44  6E54               	movwf	_lnTxCounter^0,c
  2547   001C46                     i1l2643:
  2548                           
  2549                           ;ln.c: 401:         free(lnTxMessage->lnData);
  2550   001C46  EE20 F003          	lfsr	2,3
  2551   001C4A  504D               	movf	_lnTxMessage^0,w,c
  2552   001C4C  26D9               	addwf	fsr2l,f,c
  2553   001C4E  504E               	movf	(_lnTxMessage+1)^0,w,c
  2554   001C50  22DA               	addwfc	fsr2h,f,c
  2555   001C52  CFDE F001          	movff	postinc2,free@ptr
  2556   001C56  CFDD F002          	movff	postdec2,free@ptr+1
  2557   001C5A  ECDE  F00C         	call	_free	;wreg free
  2558   001C5E                     
  2559                           ;ln.c: 402:         free(lnTxMessage);
  2560   001C5E  C04D  F001         	movff	_lnTxMessage,free@ptr
  2561   001C62  C04E  F002         	movff	_lnTxMessage+1,free@ptr+1
  2562   001C66  ECDE  F00C         	call	_free	;wreg free
  2563   001C6A                     i1l244:
  2564   001C6A  0012               	return		;funcret
  2565   001C6C                     __end_of_txHandler:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _isLnFree *****************
  2569 ;; Defined at:
  2570 ;;		line 414 in file "ln.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      _Bool 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        1 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_lnIsrTmr1
  2594 ;;		_txHandler
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text16
  2599   00243C                     __ptext16:
  2600                           	callstack 0
  2601   00243C                     _isLnFree:
  2602                           	callstack 23
  2603   00243C                     
  2604                           ;ln.c: 419:     return (PORTCbits.RC7 && BAUDCONbits.RCIDL);
  2605   00243C  0E00               	movlw	0
  2606   00243E  6E01               	movwf	_isLnFree$995^0,c
  2607   002440  AE82               	btfss	130,7,c	;volatile
  2608   002442  EF25  F012         	goto	i1u208_21
  2609   002446  EF27  F012         	goto	i1u208_20
  2610   00244A                     i1u208_21:
  2611   00244A  EF30  F012         	goto	i1l248
  2612   00244E                     i1u208_20:
  2613   00244E  ACB8               	btfss	184,6,c	;volatile
  2614   002450  EF2C  F012         	goto	i1u209_21
  2615   002454  EF2E  F012         	goto	i1u209_20
  2616   002458                     i1u209_21:
  2617   002458  EF30  F012         	goto	i1l248
  2618   00245C                     i1u209_20:
  2619   00245C  0E01               	movlw	1
  2620   00245E  6E01               	movwf	_isLnFree$995^0,c
  2621   002460                     i1l248:
  2622   002460  5001               	movf	_isLnFree$995^0,w,c
  2623   002462  0012               	return		;funcret
  2624   002464                     __end_of_isLnFree:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _deQueue *****************
  2628 ;; Defined at:
  2629 ;;		line 72 in file "circular_queue.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  q               2    6[COMRAM] PTR struct lnQueue
  2632 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      _Bool 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;Total ram usage:        4 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 1
  2651 ;; This function calls:
  2652 ;;		___awmod
  2653 ;;		_isQueueEmpty
  2654 ;; This function is called by:
  2655 ;;		_txHandler
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text17
  2660   0021AC                     __ptext17:
  2661                           	callstack 0
  2662   0021AC                     _deQueue:
  2663                           	callstack 22
  2664   0021AC                     
  2665                           ;circular_queue.c: 72: _Bool deQueue(lnQueue_t* q);circular_queue.c: 73: {;circular_queu
      +                          e.c: 75:     if (isQueueEmpty(q))
  2666   0021AC  C007  F001         	movff	deQueue@q,isQueueEmpty@q
  2667   0021B0  C008  F002         	movff	deQueue@q+1,isQueueEmpty@q+1
  2668   0021B4  EC32  F012         	call	_isQueueEmpty	;wreg free
  2669   0021B8  0900               	iorlw	0
  2670   0021BA  B4D8               	btfsc	status,2,c
  2671   0021BC  EFE2  F010         	goto	i1u211_21
  2672   0021C0  EFE4  F010         	goto	i1u211_20
  2673   0021C4                     i1u211_21:
  2674   0021C4  EFE6  F010         	goto	i1l2563
  2675   0021C8                     i1u211_20:
  2676   0021C8  EF0C  F011         	goto	i1l288
  2677   0021CC                     i1l2563:
  2678                           
  2679                           ;circular_queue.c: 81:     {;circular_queue.c: 83:         q->head = (q->head + 1) % q->
      +                          size;
  2680   0021CC  C007  FFD9         	movff	deQueue@q,fsr2l
  2681   0021D0  C008  FFDA         	movff	deQueue@q+1,fsr2h
  2682   0021D4  50DF               	movf	indf2,w,c
  2683   0021D6  6E09               	movwf	??_deQueue^0,c
  2684   0021D8  0E01               	movlw	1
  2685   0021DA  2409               	addwf	??_deQueue^0,w,c
  2686   0021DC  6E01               	movwf	___awmod@dividend^0,c
  2687   0021DE  6A02               	clrf	(___awmod@dividend+1)^0,c
  2688   0021E0  0E00               	movlw	0
  2689   0021E2  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2690   0021E4  EE20 F003          	lfsr	2,3
  2691   0021E8  5007               	movf	deQueue@q^0,w,c
  2692   0021EA  26D9               	addwf	fsr2l,f,c
  2693   0021EC  5008               	movf	(deQueue@q+1)^0,w,c
  2694   0021EE  22DA               	addwfc	fsr2h,f,c
  2695   0021F0  50DF               	movf	indf2,w,c
  2696   0021F2  6E0A               	movwf	(??_deQueue+1)^0,c
  2697   0021F4  500A               	movf	(??_deQueue+1)^0,w,c
  2698   0021F6  6E03               	movwf	___awmod@divisor^0,c
  2699   0021F8  6A04               	clrf	(___awmod@divisor+1)^0,c
  2700   0021FA  EC14  F00F         	call	___awmod	;wreg free
  2701   0021FE  5001               	movf	?___awmod^0,w,c
  2702   002200  C007  FFD9         	movff	deQueue@q,fsr2l
  2703   002204  C008  FFDA         	movff	deQueue@q+1,fsr2h
  2704   002208  6EDF               	movwf	indf2,c
  2705   00220A                     
  2706                           ;circular_queue.c: 84:         q->numEntries--;
  2707   00220A  EE20 F002          	lfsr	2,2
  2708   00220E  5007               	movf	deQueue@q^0,w,c
  2709   002210  26D9               	addwf	fsr2l,f,c
  2710   002212  5008               	movf	(deQueue@q+1)^0,w,c
  2711   002214  22DA               	addwfc	fsr2h,f,c
  2712   002216  06DF               	decf	indf2,f,c
  2713   002218                     i1l288:
  2714   002218  0012               	return		;funcret
  2715   00221A                     __end_of_deQueue:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function _isQueueEmpty *****************
  2719 ;; Defined at:
  2720 ;;		line 29 in file "circular_queue.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  q               2    0[COMRAM] PTR struct lnQueue
  2723 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      _Bool 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;Total ram usage:        2 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_deQueue
  2745 ;;		_sendLnMessage
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text18
  2750   002464                     __ptext18:
  2751                           	callstack 0
  2752   002464                     _isQueueEmpty:
  2753                           	callstack 22
  2754   002464                     
  2755                           ;circular_queue.c: 29: _Bool isQueueEmpty(lnQueue_t* q);circular_queue.c: 30: {;circular
      +                          _queue.c: 31:     return (q->numEntries == 0);
  2756   002464  EE20 F002          	lfsr	2,2
  2757   002468  5001               	movf	isQueueEmpty@q^0,w,c
  2758   00246A  26D9               	addwf	fsr2l,f,c
  2759   00246C  5002               	movf	(isQueueEmpty@q+1)^0,w,c
  2760   00246E  22DA               	addwfc	fsr2h,f,c
  2761   002470  50DF               	movf	indf2,w,c
  2762   002472  B4D8               	btfsc	status,2,c
  2763   002474  EF3E  F012         	goto	i1u185_21
  2764   002478  EF41  F012         	goto	i1u185_20
  2765   00247C                     i1u185_21:
  2766   00247C  0E01               	movlw	1
  2767   00247E  EF42  F012         	goto	i1u186_20
  2768   002482                     i1u185_20:
  2769   002482  0E00               	movlw	0
  2770   002484                     i1u186_20:
  2771   002484  0012               	return		;funcret
  2772   002486                     __end_of_isQueueEmpty:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _rxHandler *****************
  2776 ;; Defined at:
  2777 ;;		line 238 in file "ln.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  lnRxData        1    wreg     unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  lnRxData        1   59[COMRAM] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;Total ram usage:        3 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 4
  2798 ;; This function calls:
  2799 ;;		_rxChecksum
  2800 ;;		i1_malloc
  2801 ;; This function is called by:
  2802 ;;		_lnIsrRc
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text19
  2807   0014F4                     __ptext19:
  2808                           	callstack 0
  2809   0014F4                     _rxHandler:
  2810                           	callstack 20
  2811                           
  2812                           ;incstack = 0
  2813                           ;rxHandler@lnRxData stored from wreg
  2814   0014F4  6E3C               	movwf	rxHandler@lnRxData^0,c
  2815   0014F6                     
  2816                           ;ln.c: 238: void rxHandler(uint8_t lnRxData);ln.c: 239: {;ln.c: 241:     if (lnRxCounter
      +                           == 0)
  2817   0014F6  5055               	movf	_lnRxCounter^0,w,c
  2818   0014F8  A4D8               	btfss	status,2,c
  2819   0014FA  EF81  F00A         	goto	i1u216_21
  2820   0014FE  EF83  F00A         	goto	i1u216_20
  2821   001502                     i1u216_21:
  2822   001502  EF61  F00B         	goto	i1l2695
  2823   001506                     i1u216_20:
  2824   001506                     
  2825                           ;ln.c: 242:     {;ln.c: 243:         if (lnRxData & 0b10000000u)
  2826   001506  AE3C               	btfss	rxHandler@lnRxData^0,7,c
  2827   001508  EF88  F00A         	goto	i1u217_21
  2828   00150C  EF8A  F00A         	goto	i1u217_20
  2829   001510                     i1u217_21:
  2830   001510  EF7A  F00B         	goto	i1l223
  2831   001514                     i1u217_20:
  2832   001514                     
  2833                           ;ln.c: 244:         {;ln.c: 247:             lnRxMessage = malloc(sizeof(struct lnMessag
      +                          e));
  2834   001514  0E00               	movlw	0
  2835   001516  6E16               	movwf	(i1malloc@n+1)^0,c
  2836   001518  0E05               	movlw	5
  2837   00151A  6E15               	movwf	i1malloc@n^0,c
  2838   00151C  EC2D  F00C         	call	i1_malloc	;wreg free
  2839   001520  C015  F04F         	movff	?i1_malloc,_lnRxMessage
  2840   001524  C016  F050         	movff	?i1_malloc+1,_lnRxMessage+1
  2841   001528                     
  2842                           ;ln.c: 251:             lnRxMessage->size = (lnRxData >> 4) & 0b00000110u;
  2843   001528  383C               	swapf	rxHandler@lnRxData^0,w,c
  2844   00152A  0B0F               	andlw	15
  2845   00152C  0B06               	andlw	6
  2846   00152E  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2847   001532  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2848   001536  6EDF               	movwf	indf2,c
  2849   001538                     
  2850                           ;ln.c: 252:             lnRxMessage->opCode = lnRxData;
  2851   001538  EE20 F001          	lfsr	2,1
  2852   00153C  504F               	movf	_lnRxMessage^0,w,c
  2853   00153E  26D9               	addwf	fsr2l,f,c
  2854   001540  5050               	movf	(_lnRxMessage+1)^0,w,c
  2855   001542  22DA               	addwfc	fsr2h,f,c
  2856   001544  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2857   001548                     
  2858                           ;ln.c: 253:             lnRxMessage->checksum = lnRxData;
  2859   001548  EE20 F002          	lfsr	2,2
  2860   00154C  504F               	movf	_lnRxMessage^0,w,c
  2861   00154E  26D9               	addwf	fsr2l,f,c
  2862   001550  5050               	movf	(_lnRxMessage+1)^0,w,c
  2863   001552  22DA               	addwfc	fsr2h,f,c
  2864   001554  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2865   001558                     
  2866                           ;ln.c: 254:             lnRxCounter = 1;
  2867   001558  0E01               	movlw	1
  2868   00155A  6E55               	movwf	_lnRxCounter^0,c
  2869   00155C  EF7A  F00B         	goto	i1l223
  2870   001560                     i1l2661:
  2871                           
  2872                           ;ln.c: 264:             rxChecksum(lnRxQueue, lnRxMessage, lnRxData);
  2873   001560  C0AE  F033         	movff	_lnRxQueue,rxChecksum@lnQueue
  2874   001564  C0AF  F034         	movff	_lnRxQueue+1,rxChecksum@lnQueue+1
  2875   001568  C04F  F035         	movff	_lnRxMessage,rxChecksum@lnMessage
  2876   00156C  C050  F036         	movff	_lnRxMessage+1,rxChecksum@lnMessage+1
  2877   001570  C03C  F037         	movff	rxHandler@lnRxData,rxChecksum@checksum
  2878   001574  EC5D  F010         	call	_rxChecksum	;wreg free
  2879                           
  2880                           ;ln.c: 265:             break;
  2881   001578  EF7A  F00B         	goto	i1l223
  2882   00157C                     i1l2663:
  2883                           
  2884                           ;ln.c: 267:             if (lnRxCounter == 1)
  2885   00157C  0455               	decf	_lnRxCounter^0,w,c
  2886   00157E  A4D8               	btfss	status,2,c
  2887   001580  EFC4  F00A         	goto	i1u218_21
  2888   001584  EFC6  F00A         	goto	i1u218_20
  2889   001588                     i1u218_21:
  2890   001588  EFE7  F00A         	goto	i1l2671
  2891   00158C                     i1u218_20:
  2892   00158C                     
  2893                           ;ln.c: 268:             {;ln.c: 269:                 lnRxMessage->size = lnRxData;
  2894   00158C  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2895   001590  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2896   001594  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2897   001598                     
  2898                           ;ln.c: 270:                 lnRxMessage->lnData = malloc(sizeof(uint8_t) * lnRxMessage->
      +                          size);
  2899   001598  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2900   00159C  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2901   0015A0  50DF               	movf	indf2,w,c
  2902   0015A2  6E3A               	movwf	??_rxHandler^0,c
  2903   0015A4  503A               	movf	??_rxHandler^0,w,c
  2904   0015A6  0D01               	mullw	1
  2905   0015A8  CFF3 F015          	movff	prodl,i1malloc@n
  2906   0015AC  CFF4 F016          	movff	prodh,i1malloc@n+1
  2907   0015B0  EC2D  F00C         	call	i1_malloc	;wreg free
  2908   0015B4  EE20 F003          	lfsr	2,3
  2909   0015B8  504F               	movf	_lnRxMessage^0,w,c
  2910   0015BA  26D9               	addwf	fsr2l,f,c
  2911   0015BC  5050               	movf	(_lnRxMessage+1)^0,w,c
  2912   0015BE  22DA               	addwfc	fsr2h,f,c
  2913   0015C0  C015  FFDE         	movff	?i1_malloc,postinc2
  2914   0015C4  C016  FFDD         	movff	?i1_malloc+1,postdec2
  2915   0015C8                     i1l2669:
  2916                           
  2917                           ;ln.c: 271:                 lnRxCounter++;
  2918   0015C8  2A55               	incf	_lnRxCounter^0,f,c
  2919                           
  2920                           ;ln.c: 272:             }
  2921   0015CA  EF7A  F00B         	goto	i1l223
  2922   0015CE                     i1l2671:
  2923   0015CE  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2924   0015D2  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2925   0015D6  5055               	movf	_lnRxCounter^0,w,c
  2926   0015D8  5CDE               	subwf	postinc2,w,c
  2927   0015DA  A0D8               	btfss	status,0,c
  2928   0015DC  EFF2  F00A         	goto	i1u219_21
  2929   0015E0  EFF4  F00A         	goto	i1u219_20
  2930   0015E4                     i1u219_21:
  2931   0015E4  EFB0  F00A         	goto	i1l2661
  2932   0015E8                     i1u219_20:
  2933   0015E8                     
  2934                           ;ln.c: 274:             {;ln.c: 275:                 lnRxMessage->lnData[lnRxCounter - 2
      +                          ] = lnRxData;
  2935   0015E8  EE20 F003          	lfsr	2,3
  2936   0015EC  504F               	movf	_lnRxMessage^0,w,c
  2937   0015EE  26D9               	addwf	fsr2l,f,c
  2938   0015F0  5050               	movf	(_lnRxMessage+1)^0,w,c
  2939   0015F2  22DA               	addwfc	fsr2h,f,c
  2940   0015F4  CFDE F03A          	movff	postinc2,??_rxHandler
  2941   0015F8  CFDD F03B          	movff	postdec2,??_rxHandler+1
  2942   0015FC  5055               	movf	_lnRxCounter^0,w,c
  2943   0015FE  263A               	addwf	??_rxHandler^0,f,c
  2944   001600  0E00               	movlw	0
  2945   001602  223B               	addwfc	(??_rxHandler+1)^0,f,c
  2946   001604  0EFE               	movlw	254
  2947   001606  243A               	addwf	??_rxHandler^0,w,c
  2948   001608  6ED9               	movwf	fsr2l,c
  2949   00160A  0EFF               	movlw	255
  2950   00160C  203B               	addwfc	(??_rxHandler+1)^0,w,c
  2951   00160E  6EDA               	movwf	fsr2h,c
  2952   001610  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  2953                           
  2954                           ;ln.c: 276:                 lnRxMessage->checksum ^= lnRxData;
  2955   001614  EE20 F002          	lfsr	2,2
  2956   001618  504F               	movf	_lnRxMessage^0,w,c
  2957   00161A  26D9               	addwf	fsr2l,f,c
  2958   00161C  5050               	movf	(_lnRxMessage+1)^0,w,c
  2959   00161E  22DA               	addwfc	fsr2h,f,c
  2960   001620  503C               	movf	rxHandler@lnRxData^0,w,c
  2961   001622  1ADF               	xorwf	indf2,f,c
  2962   001624  EFE4  F00A         	goto	i1l2669
  2963   001628                     i1l2679:
  2964                           
  2965                           ;ln.c: 285:             if (lnRxCounter <= lnRxMessage->size)
  2966   001628  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2967   00162C  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2968   001630  5055               	movf	_lnRxCounter^0,w,c
  2969   001632  5CDE               	subwf	postinc2,w,c
  2970   001634  A0D8               	btfss	status,0,c
  2971   001636  EF1F  F00B         	goto	i1u220_21
  2972   00163A  EF21  F00B         	goto	i1u220_20
  2973   00163E                     i1u220_21:
  2974   00163E  EFB0  F00A         	goto	i1l2661
  2975   001642                     i1u220_20:
  2976   001642                     
  2977                           ;ln.c: 286:             {;ln.c: 287:                 if (lnRxCounter == 1)
  2978   001642  0455               	decf	_lnRxCounter^0,w,c
  2979   001644  A4D8               	btfss	status,2,c
  2980   001646  EF27  F00B         	goto	i1u221_21
  2981   00164A  EF29  F00B         	goto	i1u221_20
  2982   00164E                     i1u221_21:
  2983   00164E  EF41  F00B         	goto	i1l2685
  2984   001652                     i1u221_20:
  2985   001652                     
  2986                           ;ln.c: 288:                 {;ln.c: 289:                     lnRxMessage->lnData = mallo
      +                          c(sizeof(uint8_t) * lnRxMessage->size);
  2987   001652  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  2988   001656  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  2989   00165A  50DF               	movf	indf2,w,c
  2990   00165C  6E3A               	movwf	??_rxHandler^0,c
  2991   00165E  503A               	movf	??_rxHandler^0,w,c
  2992   001660  0D01               	mullw	1
  2993   001662  CFF3 F015          	movff	prodl,i1malloc@n
  2994   001666  CFF4 F016          	movff	prodh,i1malloc@n+1
  2995   00166A  EC2D  F00C         	call	i1_malloc	;wreg free
  2996   00166E  EE20 F003          	lfsr	2,3
  2997   001672  504F               	movf	_lnRxMessage^0,w,c
  2998   001674  26D9               	addwf	fsr2l,f,c
  2999   001676  5050               	movf	(_lnRxMessage+1)^0,w,c
  3000   001678  22DA               	addwfc	fsr2h,f,c
  3001   00167A  C015  FFDE         	movff	?i1_malloc,postinc2
  3002   00167E  C016  FFDD         	movff	?i1_malloc+1,postdec2
  3003   001682                     i1l2685:
  3004                           
  3005                           ;ln.c: 291:                 lnRxMessage->lnData[lnRxCounter - 1] = lnRxData;
  3006   001682  EE20 F003          	lfsr	2,3
  3007   001686  504F               	movf	_lnRxMessage^0,w,c
  3008   001688  26D9               	addwf	fsr2l,f,c
  3009   00168A  5050               	movf	(_lnRxMessage+1)^0,w,c
  3010   00168C  22DA               	addwfc	fsr2h,f,c
  3011   00168E  CFDE F03A          	movff	postinc2,??_rxHandler
  3012   001692  CFDD F03B          	movff	postdec2,??_rxHandler+1
  3013   001696  5055               	movf	_lnRxCounter^0,w,c
  3014   001698  263A               	addwf	??_rxHandler^0,f,c
  3015   00169A  0E00               	movlw	0
  3016   00169C  223B               	addwfc	(??_rxHandler+1)^0,f,c
  3017   00169E  0EFF               	movlw	255
  3018   0016A0  243A               	addwf	??_rxHandler^0,w,c
  3019   0016A2  6ED9               	movwf	fsr2l,c
  3020   0016A4  0EFF               	movlw	255
  3021   0016A6  203B               	addwfc	(??_rxHandler+1)^0,w,c
  3022   0016A8  6EDA               	movwf	fsr2h,c
  3023   0016AA  C03C  FFDF         	movff	rxHandler@lnRxData,indf2
  3024   0016AE                     
  3025                           ;ln.c: 292:                 lnRxMessage->checksum ^= lnRxData;
  3026   0016AE  EE20 F002          	lfsr	2,2
  3027   0016B2  504F               	movf	_lnRxMessage^0,w,c
  3028   0016B4  26D9               	addwf	fsr2l,f,c
  3029   0016B6  5050               	movf	(_lnRxMessage+1)^0,w,c
  3030   0016B8  22DA               	addwfc	fsr2h,f,c
  3031   0016BA  503C               	movf	rxHandler@lnRxData^0,w,c
  3032   0016BC  1ADF               	xorwf	indf2,f,c
  3033   0016BE  EFE4  F00A         	goto	i1l2669
  3034   0016C2                     i1l2695:
  3035   0016C2  C04F  FFD9         	movff	_lnRxMessage,fsr2l
  3036   0016C6  C050  FFDA         	movff	_lnRxMessage+1,fsr2h
  3037   0016CA  50DF               	movf	indf2,w,c
  3038   0016CC  6E3A               	movwf	??_rxHandler^0,c
  3039   0016CE  6A3B               	clrf	(??_rxHandler+1)^0,c
  3040                           
  3041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3042                           ; Switch size 1, requested type "simple"
  3043                           ; Number of cases is 1, Range of values is 0 to 0
  3044                           ; switch strategies available:
  3045                           ; Name         Instructions Cycles
  3046                           ; simple_byte            4     3 (average)
  3047                           ;	Chosen strategy is simple_byte
  3048   0016D0  503B               	movf	(??_rxHandler+1)^0,w,c
  3049   0016D2  0A00               	xorlw	0	; case 0
  3050   0016D4  B4D8               	btfsc	status,2,c
  3051   0016D6  EF6F  F00B         	goto	i1l3225
  3052   0016DA  EF14  F00B         	goto	i1l2679
  3053   0016DE                     i1l3225:
  3054                           
  3055                           ; Switch size 1, requested type "simple"
  3056                           ; Number of cases is 2, Range of values is 0 to 6
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte            7     4 (average)
  3060                           ;	Chosen strategy is simple_byte
  3061   0016DE  503A               	movf	??_rxHandler^0,w,c
  3062   0016E0  0A00               	xorlw	0	; case 0
  3063   0016E2  B4D8               	btfsc	status,2,c
  3064   0016E4  EFB0  F00A         	goto	i1l2661
  3065   0016E8  0A06               	xorlw	6	; case 6
  3066   0016EA  B4D8               	btfsc	status,2,c
  3067   0016EC  EFBE  F00A         	goto	i1l2663
  3068   0016F0  EF14  F00B         	goto	i1l2679
  3069   0016F4                     i1l223:
  3070   0016F4  0012               	return		;funcret
  3071   0016F6                     __end_of_rxHandler:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function _rxChecksum *****************
  3075 ;; Defined at:
  3076 ;;		line 304 in file "ln.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  lnQueue         2   50[COMRAM] PTR struct lnQueue
  3079 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3080 ;;  lnMessage       2   52[COMRAM] PTR struct lnMessage
  3081 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3082 ;;  checksum        1   54[COMRAM] unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:        7 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 3
  3101 ;; This function calls:
  3102 ;;		_enQueue
  3103 ;;		_free
  3104 ;;		_makeDeepCopy
  3105 ;;		_startCmpDelay
  3106 ;;		_startLinebreak
  3107 ;; This function is called by:
  3108 ;;		_rxHandler
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text20
  3113   0020BA                     __ptext20:
  3114                           	callstack 0
  3115   0020BA                     _rxChecksum:
  3116                           	callstack 20
  3117   0020BA                     
  3118                           ;ln.c: 304: void rxChecksum(lnQueue_t* lnQueue, lnMessage_t* lnMessage, uint8_t checksum
      +                          );ln.c: 305: {;ln.c: 306:     if ((lnMessage->checksum + checksum) == 0xff)
  3119   0020BA  EE20 F002          	lfsr	2,2
  3120   0020BE  5035               	movf	rxChecksum@lnMessage^0,w,c
  3121   0020C0  26D9               	addwf	fsr2l,f,c
  3122   0020C2  5036               	movf	(rxChecksum@lnMessage+1)^0,w,c
  3123   0020C4  22DA               	addwfc	fsr2h,f,c
  3124   0020C6  50DF               	movf	indf2,w,c
  3125   0020C8  6E38               	movwf	??_rxChecksum^0,c
  3126   0020CA  6A39               	clrf	(??_rxChecksum+1)^0,c
  3127   0020CC  5037               	movf	rxChecksum@checksum^0,w,c
  3128   0020CE  2638               	addwf	??_rxChecksum^0,f,c
  3129   0020D0  0E00               	movlw	0
  3130   0020D2  2239               	addwfc	(??_rxChecksum+1)^0,f,c
  3131   0020D4  2838               	incf	??_rxChecksum^0,w,c
  3132   0020D6  1039               	iorwf	(??_rxChecksum+1)^0,w,c
  3133   0020D8  A4D8               	btfss	status,2,c
  3134   0020DA  EF71  F010         	goto	i1u210_21
  3135   0020DE  EF73  F010         	goto	i1u210_20
  3136   0020E2                     i1u210_21:
  3137   0020E2  EF87  F010         	goto	i1l2549
  3138   0020E6                     i1u210_20:
  3139   0020E6                     
  3140                           ;ln.c: 307:     {;ln.c: 309:         enQueue(lnQueue, makeDeepCopy(lnMessage));
  3141   0020E6  C033  F02A         	movff	rxChecksum@lnQueue,enQueue@q
  3142   0020EA  C034  F02B         	movff	rxChecksum@lnQueue+1,enQueue@q+1
  3143   0020EE  C035  F021         	movff	rxChecksum@lnMessage,makeDeepCopy@lnMessageOrig
  3144   0020F2  C036  F022         	movff	rxChecksum@lnMessage+1,makeDeepCopy@lnMessageOrig+1
  3145   0020F6  EC36  F00E         	call	_makeDeepCopy	;wreg free
  3146   0020FA  C021  F02C         	movff	?_makeDeepCopy,enQueue@value
  3147   0020FE  C022  F02D         	movff	?_makeDeepCopy+1,enQueue@value+1
  3148   002102  ECB7  F00E         	call	_enQueue	;wreg free
  3149   002106                     
  3150                           ;ln.c: 311:         startCmpDelay();
  3151   002106  ECA3  F011         	call	_startCmpDelay	;wreg free
  3152                           
  3153                           ;ln.c: 312:     }
  3154   00210A  EF89  F010         	goto	i1l2551
  3155   00210E                     i1l2549:
  3156                           
  3157                           ;ln.c: 314:     {;ln.c: 317:         startLinebreak();
  3158   00210E  EC52  F012         	call	_startLinebreak	;wreg free
  3159   002112                     i1l2551:
  3160                           
  3161                           ;ln.c: 320:     free(lnMessage->lnData);
  3162   002112  EE20 F003          	lfsr	2,3
  3163   002116  5035               	movf	rxChecksum@lnMessage^0,w,c
  3164   002118  26D9               	addwf	fsr2l,f,c
  3165   00211A  5036               	movf	(rxChecksum@lnMessage+1)^0,w,c
  3166   00211C  22DA               	addwfc	fsr2h,f,c
  3167   00211E  CFDE F001          	movff	postinc2,free@ptr
  3168   002122  CFDD F002          	movff	postdec2,free@ptr+1
  3169   002126  ECDE  F00C         	call	_free	;wreg free
  3170   00212A                     
  3171                           ;ln.c: 321:     free(lnMessage);
  3172   00212A  C035  F001         	movff	rxChecksum@lnMessage,free@ptr
  3173   00212E  C036  F002         	movff	rxChecksum@lnMessage+1,free@ptr+1
  3174   002132  ECDE  F00C         	call	_free	;wreg free
  3175   002136                     
  3176                           ;ln.c: 323:     lnRxCounter = 0;
  3177   002136  0E00               	movlw	0
  3178   002138  6E55               	movwf	_lnRxCounter^0,c
  3179   00213A  0012               	return		;funcret
  3180   00213C                     __end_of_rxChecksum:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function _startLinebreak *****************
  3184 ;; Defined at:
  3185 ;;		line 443 in file "ln.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:        0 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_lnIsrRc
  3209 ;;		_rxChecksum
  3210 ;;		_txHandler
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text21
  3215   0024A4                     __ptext21:
  3216                           	callstack 0
  3217   0024A4                     _startLinebreak:
  3218                           	callstack 23
  3219   0024A4                     
  3220                           ;ln.c: 446:     RCSTAbits.SPEN = 0;
  3221   0024A4  9EAB               	bcf	171,7,c	;volatile
  3222                           
  3223                           ;ln.c: 447:     PORTCbits.RC6 = 1;
  3224   0024A6  8C82               	bsf	130,6,c	;volatile
  3225   0024A8                     
  3226                           ;ln.c: 449:     ((void)(TMR1H=((~900)>>8),TMR1L=((~900)&0xFF)));
  3227   0024A8  0EFC               	movlw	252
  3228   0024AA  6ECF               	movwf	207,c	;volatile
  3229   0024AC  0E7B               	movlw	123
  3230   0024AE  6ECE               	movwf	206,c	;volatile
  3231                           
  3232                           ;ln.c: 450:     LNCONbits.TMR1_MODE = 2;
  3233   0024B0  5057               	movf	_LNCONbits^0,w,c
  3234   0024B2  0BFC               	andlw	-4
  3235   0024B4  0902               	iorlw	2
  3236   0024B6  6E57               	movwf	_LNCONbits^0,c
  3237   0024B8  0012               	return		;funcret
  3238   0024BA                     __end_of_startLinebreak:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _startCmpDelay *****************
  3242 ;; Defined at:
  3243 ;;		line 428 in file "ln.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  delay           2    6[COMRAM] unsigned short 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;Total ram usage:        4 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 1
  3264 ;; This function calls:
  3265 ;;		_getRandomValue
  3266 ;; This function is called by:
  3267 ;;		_lnIsrTmr1
  3268 ;;		_rxChecksum
  3269 ;;		_txHandler
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text22
  3274   002346                     __ptext22:
  3275                           	callstack 0
  3276   002346                     _startCmpDelay:
  3277                           	callstack 22
  3278   002346                     
  3279                           ;ln.c: 431:     uint16_t delay = getRandomValue(lastRandomValue);
  3280   002346  C051  F001         	movff	_lastRandomValue,getRandomValue@lfsr
  3281   00234A  C052  F002         	movff	_lastRandomValue+1,getRandomValue@lfsr+1
  3282   00234E  ECED  F011         	call	_getRandomValue	;wreg free
  3283   002352  C001  F007         	movff	?_getRandomValue,startCmpDelay@delay
  3284   002356  C002  F008         	movff	?_getRandomValue+1,startCmpDelay@delay+1
  3285   00235A                     
  3286                           ;ln.c: 432:     lastRandomValue = delay;
  3287   00235A  C007  F051         	movff	startCmpDelay@delay,_lastRandomValue
  3288   00235E  C008  F052         	movff	startCmpDelay@delay+1,_lastRandomValue+1
  3289   002362                     
  3290                           ;ln.c: 433:     delay &= 0x03ff;
  3291   002362  0EFF               	movlw	255
  3292   002364  1607               	andwf	startCmpDelay@delay^0,f,c
  3293   002366  0E03               	movlw	3
  3294   002368  1608               	andwf	(startCmpDelay@delay+1)^0,f,c
  3295   00236A                     
  3296                           ;ln.c: 434:     delay += 1560u;
  3297   00236A  0E18               	movlw	24
  3298   00236C  2607               	addwf	startCmpDelay@delay^0,f,c
  3299   00236E  0E06               	movlw	6
  3300   002370  2208               	addwfc	(startCmpDelay@delay+1)^0,f,c
  3301   002372                     
  3302                           ;ln.c: 435:     ((void)(TMR1H=((~delay)>>8),TMR1L=((~delay)&0xFF)));
  3303   002372  1C07               	comf	startCmpDelay@delay^0,w,c
  3304   002374  6E05               	movwf	??_startCmpDelay^0,c
  3305   002376  1C08               	comf	(startCmpDelay@delay+1)^0,w,c
  3306   002378  6E06               	movwf	(??_startCmpDelay+1)^0,c
  3307   00237A  C006  F005         	movff	??_startCmpDelay+1,??_startCmpDelay
  3308   00237E  6A06               	clrf	(??_startCmpDelay+1)^0,c
  3309   002380  5005               	movf	??_startCmpDelay^0,w,c
  3310   002382  6ECF               	movwf	207,c	;volatile
  3311   002384  5007               	movf	startCmpDelay@delay^0,w,c
  3312   002386  0AFF               	xorlw	255
  3313   002388  6ECE               	movwf	206,c	;volatile
  3314   00238A                     
  3315                           ;ln.c: 437:     LNCONbits.TMR1_MODE = 1;
  3316   00238A  5057               	movf	_LNCONbits^0,w,c
  3317   00238C  0BFC               	andlw	-4
  3318   00238E  0901               	iorlw	1
  3319   002390  6E57               	movwf	_LNCONbits^0,c
  3320   002392  0012               	return		;funcret
  3321   002394                     __end_of_startCmpDelay:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _getRandomValue *****************
  3325 ;; Defined at:
  3326 ;;		line 467 in file "ln.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  lfsr            2    0[COMRAM] unsigned short 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  lsb             2    2[COMRAM] unsigned int 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2    0[COMRAM] unsigned short 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        4 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_startCmpDelay
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text23
  3354   0023DA                     __ptext23:
  3355                           	callstack 0
  3356   0023DA                     _getRandomValue:
  3357                           	callstack 22
  3358   0023DA                     
  3359                           ;ln.c: 467: uint16_t getRandomValue(uint16_t lfsr);ln.c: 468: {;ln.c: 474:     unsigned 
      +                          lsb = lfsr & 1u;
  3360   0023DA  0E01               	movlw	1
  3361   0023DC  1401               	andwf	getRandomValue@lfsr^0,w,c
  3362   0023DE  6E03               	movwf	getRandomValue@lsb^0,c
  3363   0023E0  6A04               	clrf	(getRandomValue@lsb+1)^0,c
  3364   0023E2                     
  3365                           ;ln.c: 475:     lfsr >>= 1;
  3366   0023E2  90D8               	bcf	status,0,c
  3367   0023E4  3202               	rrcf	(getRandomValue@lfsr+1)^0,f,c
  3368   0023E6  3201               	rrcf	getRandomValue@lfsr^0,f,c
  3369   0023E8                     
  3370                           ;ln.c: 476:     if (lsb)
  3371   0023E8  5003               	movf	getRandomValue@lsb^0,w,c
  3372   0023EA  1004               	iorwf	(getRandomValue@lsb+1)^0,w,c
  3373   0023EC  B4D8               	btfsc	status,2,c
  3374   0023EE  EFFB  F011         	goto	i1u163_21
  3375   0023F2  EFFD  F011         	goto	i1u163_20
  3376   0023F6                     i1u163_21:
  3377   0023F6  EF01  F012         	goto	i1l2205
  3378   0023FA                     i1u163_20:
  3379   0023FA                     
  3380                           ;ln.c: 477:     {;ln.c: 478:         lfsr ^= 0xB400u;
  3381   0023FA  0E00               	movlw	0
  3382   0023FC  1A01               	xorwf	getRandomValue@lfsr^0,f,c
  3383   0023FE  0EB4               	movlw	180
  3384   002400  1A02               	xorwf	(getRandomValue@lfsr+1)^0,f,c
  3385   002402                     i1l2205:
  3386                           
  3387                           ;ln.c: 480:     return lfsr;
  3388   002402  C001  F001         	movff	getRandomValue@lfsr,?_getRandomValue
  3389   002406  C002  F002         	movff	getRandomValue@lfsr+1,?_getRandomValue+1
  3390   00240A  0012               	return		;funcret
  3391   00240C                     __end_of_getRandomValue:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function _makeDeepCopy *****************
  3395 ;; Defined at:
  3396 ;;		line 94 in file "circular_queue.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  lnMessageOri    2   32[COMRAM] PTR struct lnMessage
  3399 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  i               1   38[COMRAM] unsigned char 
  3402 ;;  lnMessageCop    2   39[COMRAM] PTR struct lnMessage
  3403 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  2   32[COMRAM] PTR struct lnMessage
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:        9 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 2
  3420 ;; This function calls:
  3421 ;;		i1_malloc
  3422 ;; This function is called by:
  3423 ;;		_rxChecksum
  3424 ;;		_sendLnMessage
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text24
  3429   001C6C                     __ptext24:
  3430                           	callstack 0
  3431   001C6C                     _makeDeepCopy:
  3432                           	callstack 20
  3433   001C6C                     
  3434                           ;circular_queue.c: 94: lnMessage_t* makeDeepCopy(lnMessage_t* lnMessageOrig);circular_qu
      +                          eue.c: 95: {;circular_queue.c: 98:     lnMessage_t* lnMessageCopy;;circular_queue.c: 99:
      +                               lnMessageCopy = malloc(sizeof(struct lnMessage));
  3435   001C6C  0E00               	movlw	0
  3436   001C6E  6E16               	movwf	(i1malloc@n+1)^0,c
  3437   001C70  0E05               	movlw	5
  3438   001C72  6E15               	movwf	i1malloc@n^0,c
  3439   001C74  EC2D  F00C         	call	i1_malloc	;wreg free
  3440   001C78  C015  F028         	movff	?i1_malloc,makeDeepCopy@lnMessageCopy
  3441   001C7C  C016  F029         	movff	?i1_malloc+1,makeDeepCopy@lnMessageCopy+1
  3442   001C80                     
  3443                           ;circular_queue.c: 102:     lnMessageCopy->opCode = lnMessageOrig->opCode;
  3444   001C80  EE20 F001          	lfsr	2,1
  3445   001C84  5021               	movf	makeDeepCopy@lnMessageOrig^0,w,c
  3446   001C86  26D9               	addwf	fsr2l,f,c
  3447   001C88  5022               	movf	(makeDeepCopy@lnMessageOrig+1)^0,w,c
  3448   001C8A  22DA               	addwfc	fsr2h,f,c
  3449   001C8C  EE10 F001          	lfsr	1,1
  3450   001C90  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3451   001C92  26E1               	addwf	fsr1l,f,c
  3452   001C94  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3453   001C96  22E2               	addwfc	fsr1h,f,c
  3454   001C98  CFDF FFE7          	movff	indf2,indf1
  3455   001C9C                     
  3456                           ;circular_queue.c: 103:     lnMessageCopy->checksum = lnMessageOrig->checksum;
  3457   001C9C  EE20 F002          	lfsr	2,2
  3458   001CA0  5021               	movf	makeDeepCopy@lnMessageOrig^0,w,c
  3459   001CA2  26D9               	addwf	fsr2l,f,c
  3460   001CA4  5022               	movf	(makeDeepCopy@lnMessageOrig+1)^0,w,c
  3461   001CA6  22DA               	addwfc	fsr2h,f,c
  3462   001CA8  EE10 F002          	lfsr	1,2
  3463   001CAC  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3464   001CAE  26E1               	addwf	fsr1l,f,c
  3465   001CB0  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3466   001CB2  22E2               	addwfc	fsr1h,f,c
  3467   001CB4  CFDF FFE7          	movff	indf2,indf1
  3468   001CB8                     
  3469                           ;circular_queue.c: 104:     lnMessageCopy->size = lnMessageOrig->size;
  3470   001CB8  C021  FFD9         	movff	makeDeepCopy@lnMessageOrig,fsr2l
  3471   001CBC  C022  FFDA         	movff	makeDeepCopy@lnMessageOrig+1,fsr2h
  3472   001CC0  C028  FFE1         	movff	makeDeepCopy@lnMessageCopy,fsr1l
  3473   001CC4  C029  FFE2         	movff	makeDeepCopy@lnMessageCopy+1,fsr1h
  3474   001CC8  CFDF FFE7          	movff	indf2,indf1
  3475   001CCC                     
  3476                           ;circular_queue.c: 109:     lnMessageCopy->lnData = malloc(sizeof(uint8_t) * lnMessageCo
      +                          py->size);
  3477   001CCC  C028  FFD9         	movff	makeDeepCopy@lnMessageCopy,fsr2l
  3478   001CD0  C029  FFDA         	movff	makeDeepCopy@lnMessageCopy+1,fsr2h
  3479   001CD4  50DF               	movf	indf2,w,c
  3480   001CD6  6E23               	movwf	??_makeDeepCopy^0,c
  3481   001CD8  5023               	movf	??_makeDeepCopy^0,w,c
  3482   001CDA  0D01               	mullw	1
  3483   001CDC  CFF3 F015          	movff	prodl,i1malloc@n
  3484   001CE0  CFF4 F016          	movff	prodh,i1malloc@n+1
  3485   001CE4  EC2D  F00C         	call	i1_malloc	;wreg free
  3486   001CE8  EE20 F003          	lfsr	2,3
  3487   001CEC  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3488   001CEE  26D9               	addwf	fsr2l,f,c
  3489   001CF0  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3490   001CF2  22DA               	addwfc	fsr2h,f,c
  3491   001CF4  C015  FFDE         	movff	?i1_malloc,postinc2
  3492   001CF8  C016  FFDD         	movff	?i1_malloc+1,postdec2
  3493   001CFC                     
  3494                           ;circular_queue.c: 110:     for (uint8_t i = 0; i < lnMessageCopy->size; i++)
  3495   001CFC  0E00               	movlw	0
  3496   001CFE  6E27               	movwf	makeDeepCopy@i^0,c
  3497   001D00  EFA5  F00E         	goto	i1l2369
  3498   001D04                     i1l2365:
  3499                           
  3500                           ;circular_queue.c: 111:     {;circular_queue.c: 112:         lnMessageCopy->lnData[i] = 
      +                          lnMessageOrig->lnData[i];
  3501   001D04  EE20 F003          	lfsr	2,3
  3502   001D08  5021               	movf	makeDeepCopy@lnMessageOrig^0,w,c
  3503   001D0A  26D9               	addwf	fsr2l,f,c
  3504   001D0C  5022               	movf	(makeDeepCopy@lnMessageOrig+1)^0,w,c
  3505   001D0E  22DA               	addwfc	fsr2h,f,c
  3506   001D10  CFDE F023          	movff	postinc2,??_makeDeepCopy
  3507   001D14  CFDD F024          	movff	postdec2,??_makeDeepCopy+1
  3508   001D18  5027               	movf	makeDeepCopy@i^0,w,c
  3509   001D1A  2423               	addwf	??_makeDeepCopy^0,w,c
  3510   001D1C  6ED9               	movwf	fsr2l,c
  3511   001D1E  0E00               	movlw	0
  3512   001D20  2024               	addwfc	(??_makeDeepCopy+1)^0,w,c
  3513   001D22  6EDA               	movwf	fsr2h,c
  3514   001D24  EE10 F003          	lfsr	1,3
  3515   001D28  5028               	movf	makeDeepCopy@lnMessageCopy^0,w,c
  3516   001D2A  26E1               	addwf	fsr1l,f,c
  3517   001D2C  5029               	movf	(makeDeepCopy@lnMessageCopy+1)^0,w,c
  3518   001D2E  22E2               	addwfc	fsr1h,f,c
  3519   001D30  CFE6 F025          	movff	postinc1,??_makeDeepCopy+2
  3520   001D34  CFE5 F026          	movff	postdec1,??_makeDeepCopy+3
  3521   001D38  5027               	movf	makeDeepCopy@i^0,w,c
  3522   001D3A  2425               	addwf	(??_makeDeepCopy+2)^0,w,c
  3523   001D3C  6EE1               	movwf	fsr1l,c
  3524   001D3E  0E00               	movlw	0
  3525   001D40  2026               	addwfc	(??_makeDeepCopy+3)^0,w,c
  3526   001D42  6EE2               	movwf	fsr1h,c
  3527   001D44  CFDF FFE7          	movff	indf2,indf1
  3528   001D48                     
  3529                           ;circular_queue.c: 113:     }
  3530   001D48  2A27               	incf	makeDeepCopy@i^0,f,c
  3531   001D4A                     i1l2369:
  3532   001D4A  C028  FFD9         	movff	makeDeepCopy@lnMessageCopy,fsr2l
  3533   001D4E  C029  FFDA         	movff	makeDeepCopy@lnMessageCopy+1,fsr2h
  3534   001D52  50DE               	movf	postinc2,w,c
  3535   001D54  5C27               	subwf	makeDeepCopy@i^0,w,c
  3536   001D56  A0D8               	btfss	status,0,c
  3537   001D58  EFB0  F00E         	goto	i1u183_21
  3538   001D5C  EFB2  F00E         	goto	i1u183_20
  3539   001D60                     i1u183_21:
  3540   001D60  EF82  F00E         	goto	i1l2365
  3541   001D64                     i1u183_20:
  3542   001D64                     
  3543                           ;circular_queue.c: 116:     return lnMessageCopy;
  3544   001D64  C028  F021         	movff	makeDeepCopy@lnMessageCopy,?_makeDeepCopy
  3545   001D68  C029  F022         	movff	makeDeepCopy@lnMessageCopy+1,?_makeDeepCopy+1
  3546   001D6C  0012               	return		;funcret
  3547   001D6E                     __end_of_makeDeepCopy:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function i1_malloc *****************
  3551 ;; Defined at:
  3552 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_malloc.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  n               2   20[COMRAM] unsigned int 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  new             2   30[COMRAM] PTR unsigned char 
  3557 ;;		 -> __heap_hi(0), NULL(0), 
  3558 ;;  p               2   28[COMRAM] PTR void 
  3559 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3560 ;;  size            2    0        unsigned int 
  3561 ;;  sz              2   26[COMRAM] PTR unsigned int 
  3562 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3563 ;;  m               2   24[COMRAM] unsigned int 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2   20[COMRAM] PTR void 
  3566 ;; Registers used:
  3567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:       12 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; Hardware stack levels required when called: 1
  3580 ;; This function calls:
  3581 ;;		i1___expand_heap
  3582 ;;		i1___simple_search_fl
  3583 ;; This function is called by:
  3584 ;;		_rxHandler
  3585 ;;		_makeDeepCopy
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text25
  3590   00185A                     __ptext25:
  3591                           	callstack 0
  3592   00185A                     i1_malloc:
  3593                           	callstack 22
  3594   00185A  5015               	movf	i1malloc@n^0,w,c
  3595   00185C  1016               	iorwf	(i1malloc@n+1)^0,w,c
  3596   00185E  A4D8               	btfss	status,2,c
  3597   001860  EF34  F00C         	goto	i1u172_21
  3598   001864  EF36  F00C         	goto	i1u172_20
  3599   001868                     i1u172_21:
  3600   001868  EF38  F00C         	goto	i1l2257
  3601   00186C                     i1u172_20:
  3602   00186C  4A15               	infsnz	i1malloc@n^0,f,c
  3603   00186E  2A16               	incf	(i1malloc@n+1)^0,f,c
  3604   001870                     i1l2257:
  3605   001870  5016               	movf	(i1malloc@n+1)^0,w,c
  3606   001872  E107               	bnz	i1u173_21
  3607   001874  0E03               	movlw	3
  3608   001876  5C15               	subwf	i1malloc@n^0,w,c
  3609   001878  B0D8               	btfsc	status,0,c
  3610   00187A  EF41  F00C         	goto	i1u173_21
  3611   00187E  EF43  F00C         	goto	i1u173_20
  3612   001882                     i1u173_21:
  3613   001882  EF49  F00C         	goto	i1l2261
  3614   001886                     i1u173_20:
  3615   001886  0E00               	movlw	0
  3616   001888  6E16               	movwf	(i1malloc@n+1)^0,c
  3617   00188A  0E03               	movlw	3
  3618   00188C  6E15               	movwf	i1malloc@n^0,c
  3619   00188E  EF62  F00C         	goto	i1l2269
  3620   001892                     i1l2261:
  3621   001892  1C15               	comf	i1malloc@n^0,w,c
  3622   001894  6E17               	movwf	??i1_malloc^0,c
  3623   001896  1C16               	comf	(i1malloc@n+1)^0,w,c
  3624   001898  6E18               	movwf	(??i1_malloc+1)^0,c
  3625   00189A  5018               	movf	(??i1_malloc+1)^0,w,c
  3626   00189C  E107               	bnz	i1u174_21
  3627   00189E  0E02               	movlw	2
  3628   0018A0  5C17               	subwf	??i1_malloc^0,w,c
  3629   0018A2  B0D8               	btfsc	status,0,c
  3630   0018A4  EF56  F00C         	goto	i1u174_21
  3631   0018A8  EF58  F00C         	goto	i1u174_20
  3632   0018AC                     i1u174_21:
  3633   0018AC  EF62  F00C         	goto	i1l2269
  3634   0018B0                     i1u174_20:
  3635   0018B0  0E00               	movlw	0
  3636   0018B2  6E4C               	movwf	(_errno+1)^0,c
  3637   0018B4  0E0C               	movlw	12
  3638   0018B6  6E4B               	movwf	_errno^0,c
  3639   0018B8                     i1l2265:
  3640   0018B8  0E00               	movlw	0
  3641   0018BA  6E15               	movwf	?i1_malloc^0,c
  3642   0018BC  0E00               	movlw	0
  3643   0018BE  6E16               	movwf	(?i1_malloc+1)^0,c
  3644   0018C0  EFDD  F00C         	goto	i1l1016
  3645   0018C4                     i1l2269:
  3646   0018C4  C015  F001         	movff	i1malloc@n,i1___simple_search_fl@n
  3647   0018C8  C016  F002         	movff	i1malloc@n+1,i1___simple_search_fl@n+1
  3648   0018CC  EC01  F008         	call	i1___simple_search_fl	;wreg free
  3649   0018D0  C001  F01D         	movff	?i1___simple_search_fl,i1malloc@p
  3650   0018D4  C002  F01E         	movff	?i1___simple_search_fl+1,i1malloc@p+1
  3651   0018D8  501D               	movf	i1malloc@p^0,w,c
  3652   0018DA  101E               	iorwf	(i1malloc@p+1)^0,w,c
  3653   0018DC  A4D8               	btfss	status,2,c
  3654   0018DE  EF73  F00C         	goto	i1u175_21
  3655   0018E2  EF75  F00C         	goto	i1u175_20
  3656   0018E6                     i1u175_21:
  3657   0018E6  EFD9  F00C         	goto	i1l2301
  3658   0018EA                     i1u175_20:
  3659   0018EA  0100               	movlb	0	; () banked
  3660   0018EC  51AA               	movf	malloc@cur& (0+255),w,b
  3661   0018EE  5DA8               	subwf	malloc@end& (0+255),w,b
  3662   0018F0  6E17               	movwf	??i1_malloc^0,c
  3663   0018F2  51AB               	movf	(malloc@cur+1)& (0+255),w,b
  3664   0018F4  59A9               	subwfb	(malloc@end+1)& (0+255),w,b
  3665   0018F6  6E18               	movwf	(??i1_malloc+1)^0,c
  3666   0018F8  5015               	movf	i1malloc@n^0,w,c
  3667   0018FA  5C17               	subwf	??i1_malloc^0,w,c
  3668   0018FC  5016               	movf	(i1malloc@n+1)^0,w,c
  3669   0018FE  5818               	subwfb	(??i1_malloc+1)^0,w,c
  3670   001900  B0D8               	btfsc	status,0,c
  3671   001902  EF85  F00C         	goto	i1u176_21
  3672   001906  EF87  F00C         	goto	i1u176_20
  3673   00190A                     i1u176_21:
  3674   00190A  EFB7  F00C         	goto	i1l1018
  3675   00190E                     i1u176_20:
  3676   00190E                     
  3677                           ; BSR set to: 0
  3678   00190E  0E02               	movlw	2
  3679   001910  2415               	addwf	i1malloc@n^0,w,c
  3680   001912  6E19               	movwf	i1malloc@m^0,c
  3681   001914  0E00               	movlw	0
  3682   001916  2016               	addwfc	(i1malloc@n+1)^0,w,c
  3683   001918  6E1A               	movwf	(i1malloc@m+1)^0,c
  3684   00191A                     
  3685                           ; BSR set to: 0
  3686   00191A  0E19               	movlw	low i1malloc@m
  3687   00191C  6E01               	movwf	i1___expand_heap@pn^0,c
  3688   00191E  ECC3  F00F         	call	i1___expand_heap	;wreg free
  3689   001922  C001  F01F         	movff	?i1___expand_heap,i1malloc@new
  3690   001926  C002  F020         	movff	?i1___expand_heap+1,i1malloc@new+1
  3691   00192A  501F               	movf	i1malloc@new^0,w,c
  3692   00192C  1020               	iorwf	(i1malloc@new+1)^0,w,c
  3693   00192E  A4D8               	btfss	status,2,c
  3694   001930  EF9C  F00C         	goto	i1u177_21
  3695   001934  EF9E  F00C         	goto	i1u177_20
  3696   001938                     i1u177_21:
  3697   001938  EFA0  F00C         	goto	i1l2287
  3698   00193C                     i1u177_20:
  3699   00193C  EF5C  F00C         	goto	i1l2265
  3700   001940                     i1l2287:
  3701   001940  0100               	movlb	0	; () banked
  3702   001942  51A8               	movf	malloc@end& (0+255),w,b
  3703   001944  181F               	xorwf	i1malloc@new^0,w,c
  3704   001946  E109               	bnz	i1u178_20
  3705   001948  51A9               	movf	(malloc@end+1)& (0+255),w,b
  3706   00194A  1820               	xorwf	(i1malloc@new+1)^0,w,c
  3707   00194C  B4D8               	btfsc	status,2,c
  3708   00194E  EFAB  F00C         	goto	i1u178_21
  3709   001952  EFAD  F00C         	goto	i1u178_20
  3710   001956                     i1u178_21:
  3711   001956  EFB1  F00C         	goto	i1l1020
  3712   00195A                     i1u178_20:
  3713   00195A                     
  3714                           ; BSR set to: 0
  3715   00195A  C01F  F0AA         	movff	i1malloc@new,malloc@cur
  3716   00195E  C020  F0AB         	movff	i1malloc@new+1,malloc@cur+1
  3717   001962                     i1l1020:
  3718                           
  3719                           ; BSR set to: 0
  3720   001962  5019               	movf	i1malloc@m^0,w,c
  3721   001964  241F               	addwf	i1malloc@new^0,w,c
  3722   001966  6FA8               	movwf	malloc@end& (0+255),b
  3723   001968  501A               	movf	(i1malloc@m+1)^0,w,c
  3724   00196A  2020               	addwfc	(i1malloc@new+1)^0,w,c
  3725   00196C  6FA9               	movwf	(malloc@end+1)& (0+255),b
  3726   00196E                     i1l1018:
  3727                           
  3728                           ; BSR set to: 0
  3729   00196E  C0AA  F01D         	movff	malloc@cur,i1malloc@p
  3730   001972  C0AB  F01E         	movff	malloc@cur+1,i1malloc@p+1
  3731   001976                     
  3732                           ; BSR set to: 0
  3733   001976  C01D  F01B         	movff	i1malloc@p,i1malloc@sz
  3734   00197A  C01E  F01C         	movff	i1malloc@p+1,i1malloc@sz+1
  3735   00197E                     
  3736                           ; BSR set to: 0
  3737   00197E  C01B  FFD9         	movff	i1malloc@sz,fsr2l
  3738   001982  C01C  FFDA         	movff	i1malloc@sz+1,fsr2h
  3739   001986  C015  FFDE         	movff	i1malloc@n,postinc2
  3740   00198A  C016  FFDD         	movff	i1malloc@n+1,postdec2
  3741   00198E                     
  3742                           ; BSR set to: 0
  3743   00198E  0E02               	movlw	2
  3744   001990  261B               	addwf	i1malloc@sz^0,f,c
  3745   001992  0E00               	movlw	0
  3746   001994  221C               	addwfc	(i1malloc@sz+1)^0,f,c
  3747   001996                     
  3748                           ; BSR set to: 0
  3749   001996  C01B  F01D         	movff	i1malloc@sz,i1malloc@p
  3750   00199A  C01C  F01E         	movff	i1malloc@sz+1,i1malloc@p+1
  3751   00199E                     
  3752                           ; BSR set to: 0
  3753   00199E  0E02               	movlw	2
  3754   0019A0  2415               	addwf	i1malloc@n^0,w,c
  3755   0019A2  6E17               	movwf	??i1_malloc^0,c
  3756   0019A4  0E00               	movlw	0
  3757   0019A6  2016               	addwfc	(i1malloc@n+1)^0,w,c
  3758   0019A8  6E18               	movwf	(??i1_malloc+1)^0,c
  3759   0019AA  5017               	movf	??i1_malloc^0,w,c
  3760   0019AC  27AA               	addwf	malloc@cur& (0+255),f,b
  3761   0019AE  5018               	movf	(??i1_malloc+1)^0,w,c
  3762   0019B0  23AB               	addwfc	(malloc@cur+1)& (0+255),f,b
  3763   0019B2                     i1l2301:
  3764   0019B2  C01D  F015         	movff	i1malloc@p,?i1_malloc
  3765   0019B6  C01E  F016         	movff	i1malloc@p+1,?i1_malloc+1
  3766   0019BA                     i1l1016:
  3767   0019BA  0012               	return		;funcret
  3768   0019BC                     __end_ofi1_malloc:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function i1___simple_search_fl *****************
  3772 ;; Defined at:
  3773 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  n               2    0[COMRAM] unsigned int 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  best            2   18[COMRAM] PTR struct chunk
  3778 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3779 ;;  c               2   16[COMRAM] PTR struct chunk
  3780 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3781 ;;  next            2   14[COMRAM] PTR struct chunk
  3782 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3783 ;;  last            2   12[COMRAM] PTR struct chunk
  3784 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3785 ;;  split           2   10[COMRAM] PTR struct chunk
  3786 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3787 ;;  best_last       2    8[COMRAM] PTR struct chunk
  3788 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  3789 ;;  remaining_si    2    6[COMRAM] unsigned int 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  2    0[COMRAM] PTR void 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;Total ram usage:       20 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		i1_malloc
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text26
  3813   001002                     __ptext26:
  3814                           	callstack 0
  3815   001002                     i1___simple_search_fl:
  3816                           	callstack 22
  3817   001002  0E00               	movlw	0
  3818   001004  6E13               	movwf	i1___simple_search_fl@best^0,c
  3819   001006  0E00               	movlw	0
  3820   001008  6E14               	movwf	(i1___simple_search_fl@best+1)^0,c
  3821   00100A  0E00               	movlw	0
  3822   00100C  6E09               	movwf	i1___simple_search_fl@best_last^0,c
  3823   00100E  0E00               	movlw	0
  3824   001010  6E0A               	movwf	(i1___simple_search_fl@best_last+1)^0,c
  3825   001012  0E00               	movlw	0
  3826   001014  6E0D               	movwf	i1___simple_search_fl@last^0,c
  3827   001016  0E00               	movlw	0
  3828   001018  6E0E               	movwf	(i1___simple_search_fl@last+1)^0,c
  3829   00101A  0100               	movlb	0	; () banked
  3830   00101C  51AC               	movf	___freelist& (0+255),w,b
  3831   00101E  11AD               	iorwf	(___freelist+1)& (0+255),w,b
  3832   001020  A4D8               	btfss	status,2,c
  3833   001022  EF15  F008         	goto	i1u149_21
  3834   001026  EF17  F008         	goto	i1u149_20
  3835   00102A                     i1u149_21:
  3836   00102A  EF1D  F008         	goto	i1l2121
  3837   00102E                     i1u149_20:
  3838   00102E                     i1l2117:
  3839   00102E  0E00               	movlw	0
  3840   001030  6E01               	movwf	?i1___simple_search_fl^0,c
  3841   001032  0E00               	movlw	0
  3842   001034  6E02               	movwf	(?i1___simple_search_fl+1)^0,c
  3843   001036  EF3D  F009         	goto	i1l975
  3844   00103A                     i1l2121:
  3845                           
  3846                           ; BSR set to: 0
  3847   00103A  C0AC  F011         	movff	___freelist,i1___simple_search_fl@c
  3848   00103E  C0AD  F012         	movff	___freelist+1,i1___simple_search_fl@c+1
  3849   001042  EFA3  F008         	goto	i1l2147
  3850   001046                     i1l2123:
  3851   001046  C011  FFD9         	movff	i1___simple_search_fl@c,fsr2l
  3852   00104A  C012  FFDA         	movff	i1___simple_search_fl@c+1,fsr2h
  3853   00104E  5001               	movf	i1___simple_search_fl@n^0,w,c
  3854   001050  18DE               	xorwf	postinc2,w,c
  3855   001052  E107               	bnz	i1u150_21
  3856   001054  5002               	movf	(i1___simple_search_fl@n+1)^0,w,c
  3857   001056  18DE               	xorwf	postinc2,w,c
  3858   001058  A4D8               	btfss	status,2,c
  3859   00105A  EF31  F008         	goto	i1u150_21
  3860   00105E  EF33  F008         	goto	i1u150_20
  3861   001062                     i1u150_21:
  3862   001062  EF60  F008         	goto	i1l2135
  3863   001066                     i1u150_20:
  3864   001066  500D               	movf	i1___simple_search_fl@last^0,w,c
  3865   001068  100E               	iorwf	(i1___simple_search_fl@last+1)^0,w,c
  3866   00106A  B4D8               	btfsc	status,2,c
  3867   00106C  EF3A  F008         	goto	i1u151_21
  3868   001070  EF3C  F008         	goto	i1u151_20
  3869   001074                     i1u151_21:
  3870   001074  EF4E  F008         	goto	i1l2129
  3871   001078                     i1u151_20:
  3872   001078  EE20 F002          	lfsr	2,2
  3873   00107C  5011               	movf	i1___simple_search_fl@c^0,w,c
  3874   00107E  26D9               	addwf	fsr2l,f,c
  3875   001080  5012               	movf	(i1___simple_search_fl@c+1)^0,w,c
  3876   001082  22DA               	addwfc	fsr2h,f,c
  3877   001084  EE10 F002          	lfsr	1,2
  3878   001088  500D               	movf	i1___simple_search_fl@last^0,w,c
  3879   00108A  26E1               	addwf	fsr1l,f,c
  3880   00108C  500E               	movf	(i1___simple_search_fl@last+1)^0,w,c
  3881   00108E  22E2               	addwfc	fsr1h,f,c
  3882   001090  CFDE FFE6          	movff	postinc2,postinc1
  3883   001094  CFDD FFE5          	movff	postdec2,postdec1
  3884   001098  EF58  F008         	goto	i1l2131
  3885   00109C                     i1l2129:
  3886   00109C  EE20 F002          	lfsr	2,2
  3887   0010A0  5011               	movf	i1___simple_search_fl@c^0,w,c
  3888   0010A2  26D9               	addwf	fsr2l,f,c
  3889   0010A4  5012               	movf	(i1___simple_search_fl@c+1)^0,w,c
  3890   0010A6  22DA               	addwfc	fsr2h,f,c
  3891   0010A8  CFDE F0AC          	movff	postinc2,___freelist
  3892   0010AC  CFDD F0AD          	movff	postdec2,___freelist+1
  3893   0010B0                     i1l2131:
  3894   0010B0  0E02               	movlw	2
  3895   0010B2  2411               	addwf	i1___simple_search_fl@c^0,w,c
  3896   0010B4  6E01               	movwf	?i1___simple_search_fl^0,c
  3897   0010B6  0E00               	movlw	0
  3898   0010B8  2012               	addwfc	(i1___simple_search_fl@c+1)^0,w,c
  3899   0010BA  6E02               	movwf	(?i1___simple_search_fl+1)^0,c
  3900   0010BC  EF3D  F009         	goto	i1l975
  3901   0010C0                     i1l2135:
  3902   0010C0  C011  FFD9         	movff	i1___simple_search_fl@c,fsr2l
  3903   0010C4  C012  FFDA         	movff	i1___simple_search_fl@c+1,fsr2h
  3904   0010C8  50DE               	movf	postinc2,w,c
  3905   0010CA  5C01               	subwf	i1___simple_search_fl@n^0,w,c
  3906   0010CC  50DE               	movf	postinc2,w,c
  3907   0010CE  5802               	subwfb	(i1___simple_search_fl@n+1)^0,w,c
  3908   0010D0  B0D8               	btfsc	status,0,c
  3909   0010D2  EF6D  F008         	goto	i1u152_21
  3910   0010D6  EF6F  F008         	goto	i1u152_20
  3911   0010DA                     i1u152_21:
  3912   0010DA  EF95  F008         	goto	i1l983
  3913   0010DE                     i1u152_20:
  3914   0010DE  5013               	movf	i1___simple_search_fl@best^0,w,c
  3915   0010E0  1014               	iorwf	(i1___simple_search_fl@best+1)^0,w,c
  3916   0010E2  B4D8               	btfsc	status,2,c
  3917   0010E4  EF76  F008         	goto	i1u153_21
  3918   0010E8  EF78  F008         	goto	i1u153_20
  3919   0010EC                     i1u153_21:
  3920   0010EC  EF8D  F008         	goto	i1l2143
  3921   0010F0                     i1u153_20:
  3922   0010F0  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3923   0010F4  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3924   0010F8  C011  FFE1         	movff	i1___simple_search_fl@c,fsr1l
  3925   0010FC  C012  FFE2         	movff	i1___simple_search_fl@c+1,fsr1h
  3926   001100  50DE               	movf	postinc2,w,c
  3927   001102  5CE6               	subwf	postinc1,w,c
  3928   001104  50DE               	movf	postinc2,w,c
  3929   001106  58E6               	subwfb	postinc1,w,c
  3930   001108  A0D8               	btfss	status,0,c
  3931   00110A  EF89  F008         	goto	i1u154_21
  3932   00110E  EF8B  F008         	goto	i1u154_20
  3933   001112                     i1u154_21:
  3934   001112  EF8D  F008         	goto	i1l2143
  3935   001116                     i1u154_20:
  3936   001116  EF95  F008         	goto	i1l983
  3937   00111A                     i1l2143:
  3938   00111A  C011  F013         	movff	i1___simple_search_fl@c,i1___simple_search_fl@best
  3939   00111E  C012  F014         	movff	i1___simple_search_fl@c+1,i1___simple_search_fl@best+1
  3940   001122  C00D  F009         	movff	i1___simple_search_fl@last,i1___simple_search_fl@best_last
  3941   001126  C00E  F00A         	movff	i1___simple_search_fl@last+1,i1___simple_search_fl@best_last+1
  3942   00112A                     i1l983:
  3943   00112A  C011  F00D         	movff	i1___simple_search_fl@c,i1___simple_search_fl@last
  3944   00112E  C012  F00E         	movff	i1___simple_search_fl@c+1,i1___simple_search_fl@last+1
  3945   001132  EE20 F002          	lfsr	2,2
  3946   001136  5011               	movf	i1___simple_search_fl@c^0,w,c
  3947   001138  26D9               	addwf	fsr2l,f,c
  3948   00113A  5012               	movf	(i1___simple_search_fl@c+1)^0,w,c
  3949   00113C  22DA               	addwfc	fsr2h,f,c
  3950   00113E  CFDE F011          	movff	postinc2,i1___simple_search_fl@c
  3951   001142  CFDD F012          	movff	postdec2,i1___simple_search_fl@c+1
  3952   001146                     i1l2147:
  3953   001146  5011               	movf	i1___simple_search_fl@c^0,w,c
  3954   001148  1012               	iorwf	(i1___simple_search_fl@c+1)^0,w,c
  3955   00114A  A4D8               	btfss	status,2,c
  3956   00114C  EFAA  F008         	goto	i1u155_21
  3957   001150  EFAC  F008         	goto	i1u155_20
  3958   001154                     i1u155_21:
  3959   001154  EF23  F008         	goto	i1l2123
  3960   001158                     i1u155_20:
  3961   001158  5013               	movf	i1___simple_search_fl@best^0,w,c
  3962   00115A  1014               	iorwf	(i1___simple_search_fl@best+1)^0,w,c
  3963   00115C  B4D8               	btfsc	status,2,c
  3964   00115E  EFB3  F008         	goto	i1u156_21
  3965   001162  EFB5  F008         	goto	i1u156_20
  3966   001166                     i1u156_21:
  3967   001166  EF17  F008         	goto	i1l2117
  3968   00116A                     i1u156_20:
  3969   00116A  EE20 F002          	lfsr	2,2
  3970   00116E  5013               	movf	i1___simple_search_fl@best^0,w,c
  3971   001170  26D9               	addwf	fsr2l,f,c
  3972   001172  5014               	movf	(i1___simple_search_fl@best+1)^0,w,c
  3973   001174  22DA               	addwfc	fsr2h,f,c
  3974   001176  CFDE F00F          	movff	postinc2,i1___simple_search_fl@next
  3975   00117A  CFDD F010          	movff	postdec2,i1___simple_search_fl@next+1
  3976   00117E  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3977   001182  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3978   001186  CFDE F003          	movff	postinc2,??i1___simple_search_fl
  3979   00118A  CFDD F004          	movff	postdec2,??i1___simple_search_fl+1
  3980   00118E  5001               	movf	i1___simple_search_fl@n^0,w,c
  3981   001190  5E03               	subwf	??i1___simple_search_fl^0,f,c
  3982   001192  5002               	movf	(i1___simple_search_fl@n+1)^0,w,c
  3983   001194  5A04               	subwfb	(??i1___simple_search_fl+1)^0,f,c
  3984   001196  5004               	movf	(??i1___simple_search_fl+1)^0,w,c
  3985   001198  E109               	bnz	i1u157_20
  3986   00119A  0E05               	movlw	5
  3987   00119C  5C03               	subwf	??i1___simple_search_fl^0,w,c
  3988   00119E  A0D8               	btfss	status,0,c
  3989   0011A0  EFD4  F008         	goto	i1u157_21
  3990   0011A4  EFD6  F008         	goto	i1u157_20
  3991   0011A8                     i1u157_21:
  3992   0011A8  EF1A  F009         	goto	i1l986
  3993   0011AC                     i1u157_20:
  3994   0011AC  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  3995   0011B0  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  3996   0011B4  CFDE F003          	movff	postinc2,??i1___simple_search_fl
  3997   0011B8  CFDD F004          	movff	postdec2,??i1___simple_search_fl+1
  3998   0011BC  5001               	movf	i1___simple_search_fl@n^0,w,c
  3999   0011BE  5E03               	subwf	??i1___simple_search_fl^0,f,c
  4000   0011C0  5002               	movf	(i1___simple_search_fl@n+1)^0,w,c
  4001   0011C2  5A04               	subwfb	(??i1___simple_search_fl+1)^0,f,c
  4002   0011C4  0EFE               	movlw	254
  4003   0011C6  2403               	addwf	??i1___simple_search_fl^0,w,c
  4004   0011C8  6E07               	movwf	i1___simple_search_fl@remaining_size^0,c
  4005   0011CA  0EFF               	movlw	255
  4006   0011CC  2004               	addwfc	(??i1___simple_search_fl+1)^0,w,c
  4007   0011CE  6E08               	movwf	(i1___simple_search_fl@remaining_size+1)^0,c
  4008   0011D0  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  4009   0011D4  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  4010   0011D8  C001  FFDE         	movff	i1___simple_search_fl@n,postinc2
  4011   0011DC  C002  FFDD         	movff	i1___simple_search_fl@n+1,postdec2
  4012   0011E0  C013  FFD9         	movff	i1___simple_search_fl@best,fsr2l
  4013   0011E4  C014  FFDA         	movff	i1___simple_search_fl@best+1,fsr2h
  4014   0011E8  CFDE F003          	movff	postinc2,??i1___simple_search_fl
  4015   0011EC  CFDD F004          	movff	postdec2,??i1___simple_search_fl+1
  4016   0011F0  5003               	movf	??i1___simple_search_fl^0,w,c
  4017   0011F2  2413               	addwf	i1___simple_search_fl@best^0,w,c
  4018   0011F4  6E05               	movwf	(??i1___simple_search_fl+2)^0,c
  4019   0011F6  5004               	movf	(??i1___simple_search_fl+1)^0,w,c
  4020   0011F8  2014               	addwfc	(i1___simple_search_fl@best+1)^0,w,c
  4021   0011FA  6E06               	movwf	(??i1___simple_search_fl+3)^0,c
  4022   0011FC  0E02               	movlw	2
  4023   0011FE  2405               	addwf	(??i1___simple_search_fl+2)^0,w,c
  4024   001200  6E0B               	movwf	i1___simple_search_fl@split^0,c
  4025   001202  0E00               	movlw	0
  4026   001204  2006               	addwfc	(??i1___simple_search_fl+3)^0,w,c
  4027   001206  6E0C               	movwf	(i1___simple_search_fl@split+1)^0,c
  4028   001208  C00B  FFD9         	movff	i1___simple_search_fl@split,fsr2l
  4029   00120C  C00C  FFDA         	movff	i1___simple_search_fl@split+1,fsr2h
  4030   001210  C007  FFDE         	movff	i1___simple_search_fl@remaining_size,postinc2
  4031   001214  C008  FFDD         	movff	i1___simple_search_fl@remaining_size+1,postdec2
  4032   001218  EE20 F002          	lfsr	2,2
  4033   00121C  500B               	movf	i1___simple_search_fl@split^0,w,c
  4034   00121E  26D9               	addwf	fsr2l,f,c
  4035   001220  500C               	movf	(i1___simple_search_fl@split+1)^0,w,c
  4036   001222  22DA               	addwfc	fsr2h,f,c
  4037   001224  C00F  FFDE         	movff	i1___simple_search_fl@next,postinc2
  4038   001228  C010  FFDD         	movff	i1___simple_search_fl@next+1,postdec2
  4039   00122C  C00B  F00F         	movff	i1___simple_search_fl@split,i1___simple_search_fl@next
  4040   001230  C00C  F010         	movff	i1___simple_search_fl@split+1,i1___simple_search_fl@next+1
  4041   001234                     i1l986:
  4042   001234  5013               	movf	i1___simple_search_fl@best^0,w,c
  4043   001236  0100               	movlb	0	; () banked
  4044   001238  19AC               	xorwf	___freelist& (0+255),w,b
  4045   00123A  E107               	bnz	i1u158_21
  4046   00123C  5014               	movf	(i1___simple_search_fl@best+1)^0,w,c
  4047   00123E  19AD               	xorwf	(___freelist+1)& (0+255),w,b
  4048   001240  A4D8               	btfss	status,2,c
  4049   001242  EF25  F009         	goto	i1u158_21
  4050   001246  EF27  F009         	goto	i1u158_20
  4051   00124A                     i1u158_21:
  4052   00124A  EF2D  F009         	goto	i1l2163
  4053   00124E                     i1u158_20:
  4054   00124E                     
  4055                           ; BSR set to: 0
  4056   00124E  C00F  F0AC         	movff	i1___simple_search_fl@next,___freelist
  4057   001252  C010  F0AD         	movff	i1___simple_search_fl@next+1,___freelist+1
  4058   001256  EF37  F009         	goto	i1l2165
  4059   00125A                     i1l2163:
  4060                           
  4061                           ; BSR set to: 0
  4062   00125A  EE20 F002          	lfsr	2,2
  4063   00125E  5009               	movf	i1___simple_search_fl@best_last^0,w,c
  4064   001260  26D9               	addwf	fsr2l,f,c
  4065   001262  500A               	movf	(i1___simple_search_fl@best_last+1)^0,w,c
  4066   001264  22DA               	addwfc	fsr2h,f,c
  4067   001266  C00F  FFDE         	movff	i1___simple_search_fl@next,postinc2
  4068   00126A  C010  FFDD         	movff	i1___simple_search_fl@next+1,postdec2
  4069   00126E                     i1l2165:
  4070                           
  4071                           ; BSR set to: 0
  4072   00126E  0E02               	movlw	2
  4073   001270  2413               	addwf	i1___simple_search_fl@best^0,w,c
  4074   001272  6E01               	movwf	?i1___simple_search_fl^0,c
  4075   001274  0E00               	movlw	0
  4076   001276  2014               	addwfc	(i1___simple_search_fl@best+1)^0,w,c
  4077   001278  6E02               	movwf	(?i1___simple_search_fl+1)^0,c
  4078   00127A                     i1l975:
  4079   00127A  0012               	return		;funcret
  4080   00127C                     __end_ofi1___simple_search_fl:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function i1___expand_heap *****************
  4084 ;; Defined at:
  4085 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\expand_heap.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  pn              1    0[COMRAM] PTR unsigned int 
  4088 ;;		 -> i1malloc@m(2), malloc@m(2), 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  new_brkp        2    6[COMRAM] PTR unsigned char 
  4091 ;;		 -> __heap_hi(0), NULL(0), 
  4092 ;;  n               2    4[COMRAM] unsigned int 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  2    0[COMRAM] PTR void 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;Total ram usage:        8 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		i1_malloc
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text27
  4116   001F86                     __ptext27:
  4117                           	callstack 0
  4118   001F86                     i1___expand_heap:
  4119                           	callstack 22
  4120   001F86  5001               	movf	i1___expand_heap@pn^0,w,c
  4121   001F88  6ED9               	movwf	fsr2l,c
  4122   001F8A  6ADA               	clrf	fsr2h,c
  4123   001F8C  CFDE F005          	movff	postinc2,i1___expand_heap@n
  4124   001F90  CFDD F006          	movff	postdec2,i1___expand_heap@n+1
  4125   001F94  0100               	movlb	0	; () banked
  4126   001F96  51A6               	movf	_brkp& (0+255),w,b
  4127   001F98  11A7               	iorwf	(_brkp+1)& (0+255),w,b
  4128   001F9A  A4D8               	btfss	status,2,c
  4129   001F9C  EFD2  F00F         	goto	i1u159_21
  4130   001FA0  EFD4  F00F         	goto	i1u159_20
  4131   001FA4                     i1u159_21:
  4132   001FA4  EFD8  F00F         	goto	i1l1034
  4133   001FA8                     i1u159_20:
  4134   001FA8                     
  4135                           ; BSR set to: 0
  4136   001FA8  0EEF               	movlw	low ___heap_hi
  4137   001FAA  6FA6               	movwf	_brkp& (0+255),b
  4138   001FAC  0E0E               	movlw	high ___heap_hi
  4139   001FAE  6FA7               	movwf	(_brkp+1)& (0+255),b
  4140   001FB0                     i1l1034:
  4141                           
  4142                           ; BSR set to: 0
  4143   001FB0  5006               	movf	(i1___expand_heap@n+1)^0,w,c
  4144   001FB2  E107               	bnz	i1u160_21
  4145   001FB4  0E05               	movlw	5
  4146   001FB6  5C05               	subwf	i1___expand_heap@n^0,w,c
  4147   001FB8  B0D8               	btfsc	status,0,c
  4148   001FBA  EFE1  F00F         	goto	i1u160_21
  4149   001FBE  EFE3  F00F         	goto	i1u160_20
  4150   001FC2                     i1u160_21:
  4151   001FC2  EFE7  F00F         	goto	i1l2181
  4152   001FC6                     i1u160_20:
  4153   001FC6                     
  4154                           ; BSR set to: 0
  4155   001FC6  0E00               	movlw	0
  4156   001FC8  6E06               	movwf	(i1___expand_heap@n+1)^0,c
  4157   001FCA  0E05               	movlw	5
  4158   001FCC  6E05               	movwf	i1___expand_heap@n^0,c
  4159   001FCE                     i1l2181:
  4160                           
  4161                           ; BSR set to: 0
  4162   001FCE  5005               	movf	i1___expand_heap@n^0,w,c
  4163   001FD0  5DA6               	subwf	_brkp& (0+255),w,b
  4164   001FD2  6E07               	movwf	i1___expand_heap@new_brkp^0,c
  4165   001FD4  5006               	movf	(i1___expand_heap@n+1)^0,w,c
  4166   001FD6  59A7               	subwfb	(_brkp+1)& (0+255),w,b
  4167   001FD8  6E08               	movwf	(i1___expand_heap@new_brkp+1)^0,c
  4168   001FDA                     
  4169                           ; BSR set to: 0
  4170   001FDA  0EB6               	movlw	low ___heap_lo
  4171   001FDC  6E03               	movwf	??i1___expand_heap^0,c
  4172   001FDE  0E00               	movlw	high ___heap_lo
  4173   001FE0  6E04               	movwf	(??i1___expand_heap+1)^0,c
  4174   001FE2  5003               	movf	??i1___expand_heap^0,w,c
  4175   001FE4  5C07               	subwf	i1___expand_heap@new_brkp^0,w,c
  4176   001FE6  5004               	movf	(??i1___expand_heap+1)^0,w,c
  4177   001FE8  5808               	subwfb	(i1___expand_heap@new_brkp+1)^0,w,c
  4178   001FEA  A0D8               	btfss	status,0,c
  4179   001FEC  EFFA  F00F         	goto	i1u161_21
  4180   001FF0  EFFC  F00F         	goto	i1u161_20
  4181   001FF4                     i1u161_21:
  4182   001FF4  EF07  F010         	goto	i1l2187
  4183   001FF8                     i1u161_20:
  4184   001FF8                     
  4185                           ; BSR set to: 0
  4186   001FF8  51A6               	movf	_brkp& (0+255),w,b
  4187   001FFA  5C07               	subwf	i1___expand_heap@new_brkp^0,w,c
  4188   001FFC  51A7               	movf	(_brkp+1)& (0+255),w,b
  4189   001FFE  5808               	subwfb	(i1___expand_heap@new_brkp+1)^0,w,c
  4190   002000  A0D8               	btfss	status,0,c
  4191   002002  EF05  F010         	goto	i1u162_21
  4192   002006  EF07  F010         	goto	i1u162_20
  4193   00200A                     i1u162_21:
  4194   00200A  EF11  F010         	goto	i1l2193
  4195   00200E                     i1u162_20:
  4196   00200E                     i1l2187:
  4197                           
  4198                           ; BSR set to: 0
  4199   00200E  0E00               	movlw	0
  4200   002010  6E4C               	movwf	(_errno+1)^0,c
  4201   002012  0E0C               	movlw	12
  4202   002014  6E4B               	movwf	_errno^0,c
  4203   002016                     
  4204                           ; BSR set to: 0
  4205   002016  0E00               	movlw	0
  4206   002018  6E01               	movwf	?i1___expand_heap^0,c
  4207   00201A  0E00               	movlw	0
  4208   00201C  6E02               	movwf	(?i1___expand_heap+1)^0,c
  4209   00201E  EF19  F010         	goto	i1l1039
  4210   002022                     i1l2193:
  4211                           
  4212                           ; BSR set to: 0
  4213   002022  C007  F0A6         	movff	i1___expand_heap@new_brkp,_brkp
  4214   002026  C008  F0A7         	movff	i1___expand_heap@new_brkp+1,_brkp+1
  4215   00202A  C0A6  F001         	movff	_brkp,?i1___expand_heap
  4216   00202E  C0A7  F002         	movff	_brkp+1,?i1___expand_heap+1
  4217   002032                     i1l1039:
  4218                           
  4219                           ; BSR set to: 0
  4220   002032  0012               	return		;funcret
  4221   002034                     __end_ofi1___expand_heap:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _free *****************
  4225 ;; Defined at:
  4226 ;;		line 67 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  ptr             2    0[COMRAM] PTR void 
  4229 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  c               2    8[COMRAM] PTR struct chunk
  4232 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4233 ;;  cptr            2    6[COMRAM] PTR unsigned char 
  4234 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;Total ram usage:       10 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_lnIsr
  4254 ;;		_lnIsrRc
  4255 ;;		_rxChecksum
  4256 ;;		_txHandler
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text28
  4261   0019BC                     __ptext28:
  4262                           	callstack 0
  4263   0019BC                     _free:
  4264                           	callstack 23
  4265   0019BC  C001  F007         	movff	free@ptr,free@cptr
  4266   0019C0  C002  F008         	movff	free@ptr+1,free@cptr+1
  4267   0019C4  5001               	movf	free@ptr^0,w,c
  4268   0019C6  1002               	iorwf	(free@ptr+1)^0,w,c
  4269   0019C8  A4D8               	btfss	status,2,c
  4270   0019CA  EFE9  F00C         	goto	i1u179_21
  4271   0019CE  EFEB  F00C         	goto	i1u179_20
  4272   0019D2                     i1u179_21:
  4273   0019D2  EFED  F00C         	goto	i1l2309
  4274   0019D6                     i1u179_20:
  4275   0019D6  EF8B  F00D         	goto	i1l992
  4276   0019DA                     i1l2309:
  4277   0019DA  0EFE               	movlw	254
  4278   0019DC  2407               	addwf	free@cptr^0,w,c
  4279   0019DE  6E09               	movwf	free@c^0,c
  4280   0019E0  0EFF               	movlw	255
  4281   0019E2  2008               	addwfc	(free@cptr+1)^0,w,c
  4282   0019E4  6E0A               	movwf	(free@c+1)^0,c
  4283   0019E6  0100               	movlb	0	; () banked
  4284   0019E8  51AC               	movf	___freelist& (0+255),w,b
  4285   0019EA  11AD               	iorwf	(___freelist+1)& (0+255),w,b
  4286   0019EC  B4D8               	btfsc	status,2,c
  4287   0019EE  EFFB  F00C         	goto	i1u180_21
  4288   0019F2  EFFD  F00C         	goto	i1u180_20
  4289   0019F6                     i1u180_21:
  4290   0019F6  EF81  F00D         	goto	i1l2331
  4291   0019FA                     i1u180_20:
  4292   0019FA                     
  4293                           ; BSR set to: 0
  4294   0019FA  C009  FFD9         	movff	free@c,fsr2l
  4295   0019FE  C00A  FFDA         	movff	free@c+1,fsr2h
  4296   001A02  CFDE F003          	movff	postinc2,??_free
  4297   001A06  CFDD F004          	movff	postdec2,??_free+1
  4298   001A0A  5003               	movf	??_free^0,w,c
  4299   001A0C  2407               	addwf	free@cptr^0,w,c
  4300   001A0E  6E05               	movwf	(??_free+2)^0,c
  4301   001A10  5004               	movf	(??_free+1)^0,w,c
  4302   001A12  2008               	addwfc	(free@cptr+1)^0,w,c
  4303   001A14  6E06               	movwf	(??_free+3)^0,c
  4304   001A16  5005               	movf	(??_free+2)^0,w,c
  4305   001A18  19AC               	xorwf	___freelist& (0+255),w,b
  4306   001A1A  E107               	bnz	i1u181_21
  4307   001A1C  5006               	movf	(??_free+3)^0,w,c
  4308   001A1E  19AD               	xorwf	(___freelist+1)& (0+255),w,b
  4309   001A20  A4D8               	btfss	status,2,c
  4310   001A22  EF15  F00D         	goto	i1u181_21
  4311   001A26  EF17  F00D         	goto	i1u181_20
  4312   001A2A                     i1u181_21:
  4313   001A2A  EF41  F00D         	goto	i1l2323
  4314   001A2E                     i1u181_20:
  4315   001A2E                     
  4316                           ; BSR set to: 0
  4317   001A2E  EE20 F002          	lfsr	2,2
  4318   001A32  51AC               	movf	___freelist& (0+255),w,b
  4319   001A34  26D9               	addwf	fsr2l,f,c
  4320   001A36  51AD               	movf	(___freelist+1)& (0+255),w,b
  4321   001A38  22DA               	addwfc	fsr2h,f,c
  4322   001A3A  EE10 F002          	lfsr	1,2
  4323   001A3E  5009               	movf	free@c^0,w,c
  4324   001A40  26E1               	addwf	fsr1l,f,c
  4325   001A42  500A               	movf	(free@c+1)^0,w,c
  4326   001A44  22E2               	addwfc	fsr1h,f,c
  4327   001A46  CFDE FFE6          	movff	postinc2,postinc1
  4328   001A4A  CFDD FFE5          	movff	postdec2,postdec1
  4329   001A4E                     
  4330                           ; BSR set to: 0
  4331   001A4E  C0AC  FFD9         	movff	___freelist,fsr2l
  4332   001A52  C0AD  FFDA         	movff	___freelist+1,fsr2h
  4333   001A56  CFDE F003          	movff	postinc2,??_free
  4334   001A5A  CFDD F004          	movff	postdec2,??_free+1
  4335   001A5E  0E02               	movlw	2
  4336   001A60  2603               	addwf	??_free^0,f,c
  4337   001A62  0E00               	movlw	0
  4338   001A64  2204               	addwfc	(??_free+1)^0,f,c
  4339   001A66  C009  FFD9         	movff	free@c,fsr2l
  4340   001A6A  C00A  FFDA         	movff	free@c+1,fsr2h
  4341   001A6E  5003               	movf	??_free^0,w,c
  4342   001A70  26DE               	addwf	postinc2,f,c
  4343   001A72  5004               	movf	(??_free+1)^0,w,c
  4344   001A74  22DD               	addwfc	postdec2,f,c
  4345   001A76                     i1l2317:
  4346                           
  4347                           ; BSR set to: 0
  4348   001A76  C009  F0AC         	movff	free@c,___freelist
  4349   001A7A  C00A  F0AD         	movff	free@c+1,___freelist+1
  4350   001A7E  EF8B  F00D         	goto	i1l992
  4351   001A82                     i1l2323:
  4352                           
  4353                           ; BSR set to: 0
  4354   001A82  C0AC  FFD9         	movff	___freelist,fsr2l
  4355   001A86  C0AD  FFDA         	movff	___freelist+1,fsr2h
  4356   001A8A  CFDE F003          	movff	postinc2,??_free
  4357   001A8E  CFDD F004          	movff	postdec2,??_free+1
  4358   001A92  5003               	movf	??_free^0,w,c
  4359   001A94  25AC               	addwf	___freelist& (0+255),w,b
  4360   001A96  6E05               	movwf	(??_free+2)^0,c
  4361   001A98  5004               	movf	(??_free+1)^0,w,c
  4362   001A9A  21AD               	addwfc	(___freelist+1)& (0+255),w,b
  4363   001A9C  6E06               	movwf	(??_free+3)^0,c
  4364   001A9E  0E02               	movlw	2
  4365   001AA0  2605               	addwf	(??_free+2)^0,f,c
  4366   001AA2  0E00               	movlw	0
  4367   001AA4  2206               	addwfc	(??_free+3)^0,f,c
  4368   001AA6  5009               	movf	free@c^0,w,c
  4369   001AA8  1805               	xorwf	(??_free+2)^0,w,c
  4370   001AAA  E107               	bnz	i1u182_21
  4371   001AAC  500A               	movf	(free@c+1)^0,w,c
  4372   001AAE  1806               	xorwf	(??_free+3)^0,w,c
  4373   001AB0  A4D8               	btfss	status,2,c
  4374   001AB2  EF5D  F00D         	goto	i1u182_21
  4375   001AB6  EF5F  F00D         	goto	i1u182_20
  4376   001ABA                     i1u182_21:
  4377   001ABA  EF75  F00D         	goto	i1l2329
  4378   001ABE                     i1u182_20:
  4379   001ABE                     
  4380                           ; BSR set to: 0
  4381   001ABE  C009  FFD9         	movff	free@c,fsr2l
  4382   001AC2  C00A  FFDA         	movff	free@c+1,fsr2h
  4383   001AC6  CFDE F003          	movff	postinc2,??_free
  4384   001ACA  CFDD F004          	movff	postdec2,??_free+1
  4385   001ACE  0E02               	movlw	2
  4386   001AD0  2603               	addwf	??_free^0,f,c
  4387   001AD2  0E00               	movlw	0
  4388   001AD4  2204               	addwfc	(??_free+1)^0,f,c
  4389   001AD6  C0AC  FFD9         	movff	___freelist,fsr2l
  4390   001ADA  C0AD  FFDA         	movff	___freelist+1,fsr2h
  4391   001ADE  5003               	movf	??_free^0,w,c
  4392   001AE0  26DE               	addwf	postinc2,f,c
  4393   001AE2  5004               	movf	(??_free+1)^0,w,c
  4394   001AE4  22DD               	addwfc	postdec2,f,c
  4395   001AE6  EF8B  F00D         	goto	i1l992
  4396   001AEA                     i1l2329:
  4397                           
  4398                           ; BSR set to: 0
  4399   001AEA  EE20 F002          	lfsr	2,2
  4400   001AEE  5009               	movf	free@c^0,w,c
  4401   001AF0  26D9               	addwf	fsr2l,f,c
  4402   001AF2  500A               	movf	(free@c+1)^0,w,c
  4403   001AF4  22DA               	addwfc	fsr2h,f,c
  4404   001AF6  C0AC  FFDE         	movff	___freelist,postinc2
  4405   001AFA  C0AD  FFDD         	movff	___freelist+1,postdec2
  4406   001AFE  EF3B  F00D         	goto	i1l2317
  4407   001B02                     i1l2331:
  4408                           
  4409                           ; BSR set to: 0
  4410   001B02  EE20 F002          	lfsr	2,2
  4411   001B06  5009               	movf	free@c^0,w,c
  4412   001B08  26D9               	addwf	fsr2l,f,c
  4413   001B0A  500A               	movf	(free@c+1)^0,w,c
  4414   001B0C  22DA               	addwfc	fsr2h,f,c
  4415   001B0E  6ADE               	clrf	postinc2,c
  4416   001B10  6ADD               	clrf	postdec2,c
  4417   001B12  EF3B  F00D         	goto	i1l2317
  4418   001B16                     i1l992:
  4419   001B16  0012               	return		;funcret
  4420   001B18                     __end_of_free:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _enQueue *****************
  4424 ;; Defined at:
  4425 ;;		line 49 in file "circular_queue.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  q               2   41[COMRAM] PTR struct lnQueue
  4428 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4429 ;;  value           2   43[COMRAM] PTR struct lnMessage
  4430 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      _Bool 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:        9 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 1
  4449 ;; This function calls:
  4450 ;;		___awmod
  4451 ;;		_isQueueFull
  4452 ;; This function is called by:
  4453 ;;		_rxChecksum
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text29
  4458   001D6E                     __ptext29:
  4459                           	callstack 0
  4460   001D6E                     _enQueue:
  4461                           	callstack 21
  4462   001D6E                     
  4463                           ;circular_queue.c: 49: _Bool enQueue(lnQueue_t* q, lnMessage_t* value);circular_queue.c:
      +                           50: {;circular_queue.c: 52:     if (isQueueFull(q))
  4464   001D6E  C02A  F001         	movff	enQueue@q,isQueueFull@q
  4465   001D72  C02B  F002         	movff	enQueue@q+1,isQueueFull@q+1
  4466   001D76  EC06  F012         	call	_isQueueFull	;wreg free
  4467   001D7A  0900               	iorlw	0
  4468   001D7C  B4D8               	btfsc	status,2,c
  4469   001D7E  EFC3  F00E         	goto	i1u184_21
  4470   001D82  EFC5  F00E         	goto	i1u184_20
  4471   001D86                     i1u184_21:
  4472   001D86  EFC7  F00E         	goto	i1l2381
  4473   001D8A                     i1u184_20:
  4474   001D8A  EF13  F00F         	goto	i1l283
  4475   001D8E                     i1l2381:
  4476                           
  4477                           ;circular_queue.c: 58:     {;circular_queue.c: 60:         q->values[q->tail] = value;
  4478   001D8E  EE20 F001          	lfsr	2,1
  4479   001D92  502A               	movf	enQueue@q^0,w,c
  4480   001D94  26D9               	addwf	fsr2l,f,c
  4481   001D96  502B               	movf	(enQueue@q+1)^0,w,c
  4482   001D98  22DA               	addwfc	fsr2h,f,c
  4483   001D9A  50DF               	movf	indf2,w,c
  4484   001D9C  6E2E               	movwf	??_enQueue^0,c
  4485   001D9E  502E               	movf	??_enQueue^0,w,c
  4486   001DA0  0D02               	mullw	2
  4487   001DA2  CFF3 F02F          	movff	prodl,??_enQueue+1
  4488   001DA6  CFF4 F030          	movff	prodh,??_enQueue+2
  4489   001DAA  EE20 F004          	lfsr	2,4
  4490   001DAE  502A               	movf	enQueue@q^0,w,c
  4491   001DB0  26D9               	addwf	fsr2l,f,c
  4492   001DB2  502B               	movf	(enQueue@q+1)^0,w,c
  4493   001DB4  22DA               	addwfc	fsr2h,f,c
  4494   001DB6  CFDE F031          	movff	postinc2,??_enQueue+3
  4495   001DBA  CFDD F032          	movff	postdec2,??_enQueue+4
  4496   001DBE  502F               	movf	(??_enQueue+1)^0,w,c
  4497   001DC0  2431               	addwf	(??_enQueue+3)^0,w,c
  4498   001DC2  6ED9               	movwf	fsr2l,c
  4499   001DC4  5030               	movf	(??_enQueue+2)^0,w,c
  4500   001DC6  2032               	addwfc	(??_enQueue+4)^0,w,c
  4501   001DC8  6EDA               	movwf	fsr2h,c
  4502   001DCA  C02C  FFDE         	movff	enQueue@value,postinc2
  4503   001DCE  C02D  FFDD         	movff	enQueue@value+1,postdec2
  4504   001DD2                     
  4505                           ;circular_queue.c: 61:         q->numEntries++;
  4506   001DD2  EE20 F002          	lfsr	2,2
  4507   001DD6  502A               	movf	enQueue@q^0,w,c
  4508   001DD8  26D9               	addwf	fsr2l,f,c
  4509   001DDA  502B               	movf	(enQueue@q+1)^0,w,c
  4510   001DDC  22DA               	addwfc	fsr2h,f,c
  4511   001DDE  2ADF               	incf	indf2,f,c
  4512   001DE0                     
  4513                           ;circular_queue.c: 62:         q->tail = (q->tail + 1) % q->size;
  4514   001DE0  EE20 F001          	lfsr	2,1
  4515   001DE4  502A               	movf	enQueue@q^0,w,c
  4516   001DE6  26D9               	addwf	fsr2l,f,c
  4517   001DE8  502B               	movf	(enQueue@q+1)^0,w,c
  4518   001DEA  22DA               	addwfc	fsr2h,f,c
  4519   001DEC  EE10 F001          	lfsr	1,1
  4520   001DF0  502A               	movf	enQueue@q^0,w,c
  4521   001DF2  26E1               	addwf	fsr1l,f,c
  4522   001DF4  502B               	movf	(enQueue@q+1)^0,w,c
  4523   001DF6  22E2               	addwfc	fsr1h,f,c
  4524   001DF8  50E7               	movf	indf1,w,c
  4525   001DFA  6E2E               	movwf	??_enQueue^0,c
  4526   001DFC  0E01               	movlw	1
  4527   001DFE  242E               	addwf	??_enQueue^0,w,c
  4528   001E00  6E01               	movwf	___awmod@dividend^0,c
  4529   001E02  6A02               	clrf	(___awmod@dividend+1)^0,c
  4530   001E04  0E00               	movlw	0
  4531   001E06  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  4532   001E08  EE10 F003          	lfsr	1,3
  4533   001E0C  502A               	movf	enQueue@q^0,w,c
  4534   001E0E  26E1               	addwf	fsr1l,f,c
  4535   001E10  502B               	movf	(enQueue@q+1)^0,w,c
  4536   001E12  22E2               	addwfc	fsr1h,f,c
  4537   001E14  50E7               	movf	indf1,w,c
  4538   001E16  6E2F               	movwf	(??_enQueue+1)^0,c
  4539   001E18  502F               	movf	(??_enQueue+1)^0,w,c
  4540   001E1A  6E03               	movwf	___awmod@divisor^0,c
  4541   001E1C  6A04               	clrf	(___awmod@divisor+1)^0,c
  4542   001E1E  EC14  F00F         	call	___awmod	;wreg free
  4543   001E22  5001               	movf	?___awmod^0,w,c
  4544   001E24  6EDF               	movwf	indf2,c
  4545   001E26                     i1l283:
  4546   001E26  0012               	return		;funcret
  4547   001E28                     __end_of_enQueue:
  4548                           	callstack 0
  4549                           
  4550 ;; *************** function _isQueueFull *****************
  4551 ;; Defined at:
  4552 ;;		line 38 in file "circular_queue.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  q               2    0[COMRAM] PTR struct lnQueue
  4555 ;;		 -> __heap_hi$.$.(3), __heap_hi$.(3), __heap_hi(0), NULL(0), 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      _Bool 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;Total ram usage:        4 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_enQueue
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text30
  4581   00240C                     __ptext30:
  4582                           	callstack 0
  4583   00240C                     _isQueueFull:
  4584                           	callstack 21
  4585   00240C                     
  4586                           ;circular_queue.c: 38:    _Bool isQueueFull(lnQueue_t* q);circular_queue.c: 39: {;circul
      +                          ar_queue.c: 40:     return (q->numEntries == q->size);
  4587   00240C  EE20 F003          	lfsr	2,3
  4588   002410  5001               	movf	isQueueFull@q^0,w,c
  4589   002412  26D9               	addwf	fsr2l,f,c
  4590   002414  5002               	movf	(isQueueFull@q+1)^0,w,c
  4591   002416  22DA               	addwfc	fsr2h,f,c
  4592   002418  EE10 F002          	lfsr	1,2
  4593   00241C  5001               	movf	isQueueFull@q^0,w,c
  4594   00241E  26E1               	addwf	fsr1l,f,c
  4595   002420  5002               	movf	(isQueueFull@q+1)^0,w,c
  4596   002422  22E2               	addwfc	fsr1h,f,c
  4597   002424  50DE               	movf	postinc2,w,c
  4598   002426  18E6               	xorwf	postinc1,w,c
  4599   002428  B4D8               	btfsc	status,2,c
  4600   00242A  EF19  F012         	goto	i1u164_21
  4601   00242E  EF1C  F012         	goto	i1u164_20
  4602   002432                     i1u164_21:
  4603   002432  0E01               	movlw	1
  4604   002434  EF1D  F012         	goto	i1u165_20
  4605   002438                     i1u164_20:
  4606   002438  0E00               	movlw	0
  4607   00243A                     i1u165_20:
  4608   00243A  0012               	return		;funcret
  4609   00243C                     __end_of_isQueueFull:
  4610                           	callstack 0
  4611                           
  4612 ;; *************** function ___awmod *****************
  4613 ;; Defined at:
  4614 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  dividend        2    0[COMRAM] int 
  4617 ;;  divisor         2    2[COMRAM] int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  sign            1    5[COMRAM] unsigned char 
  4620 ;;  counter         1    4[COMRAM] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2    0[COMRAM] int 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;Total ram usage:        6 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_enQueue
  4640 ;;		_deQueue
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text31
  4645   001E28                     __ptext31:
  4646                           	callstack 0
  4647   001E28                     ___awmod:
  4648                           	callstack 22
  4649   001E28  0E00               	movlw	0
  4650   001E2A  6E06               	movwf	___awmod@sign^0,c
  4651   001E2C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4652   001E2E  EF1D  F00F         	goto	i1u166_20
  4653   001E32  EF1B  F00F         	goto	i1u166_21
  4654   001E36                     i1u166_21:
  4655   001E36  EF23  F00F         	goto	i1l2221
  4656   001E3A                     i1u166_20:
  4657   001E3A  6C01               	negf	___awmod@dividend^0,c
  4658   001E3C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4659   001E3E  B0D8               	btfsc	status,0,c
  4660   001E40  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4661   001E42  0E01               	movlw	1
  4662   001E44  6E06               	movwf	___awmod@sign^0,c
  4663   001E46                     i1l2221:
  4664   001E46  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4665   001E48  EF2A  F00F         	goto	i1u167_20
  4666   001E4C  EF28  F00F         	goto	i1u167_21
  4667   001E50                     i1u167_21:
  4668   001E50  EF2E  F00F         	goto	i1l2225
  4669   001E54                     i1u167_20:
  4670   001E54  6C03               	negf	___awmod@divisor^0,c
  4671   001E56  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4672   001E58  B0D8               	btfsc	status,0,c
  4673   001E5A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4674   001E5C                     i1l2225:
  4675   001E5C  5003               	movf	___awmod@divisor^0,w,c
  4676   001E5E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4677   001E60  B4D8               	btfsc	status,2,c
  4678   001E62  EF35  F00F         	goto	i1u168_21
  4679   001E66  EF37  F00F         	goto	i1u168_20
  4680   001E6A                     i1u168_21:
  4681   001E6A  EF5B  F00F         	goto	i1l2241
  4682   001E6E                     i1u168_20:
  4683   001E6E  0E01               	movlw	1
  4684   001E70  6E05               	movwf	___awmod@counter^0,c
  4685   001E72  EF3F  F00F         	goto	i1l2231
  4686   001E76                     i1l2229:
  4687   001E76  90D8               	bcf	status,0,c
  4688   001E78  3603               	rlcf	___awmod@divisor^0,f,c
  4689   001E7A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4690   001E7C  2A05               	incf	___awmod@counter^0,f,c
  4691   001E7E                     i1l2231:
  4692   001E7E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4693   001E80  EF44  F00F         	goto	i1u169_21
  4694   001E84  EF46  F00F         	goto	i1u169_20
  4695   001E88                     i1u169_21:
  4696   001E88  EF3B  F00F         	goto	i1l2229
  4697   001E8C                     i1u169_20:
  4698   001E8C                     i1l2233:
  4699   001E8C  5003               	movf	___awmod@divisor^0,w,c
  4700   001E8E  5C01               	subwf	___awmod@dividend^0,w,c
  4701   001E90  5004               	movf	(___awmod@divisor+1)^0,w,c
  4702   001E92  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4703   001E94  A0D8               	btfss	status,0,c
  4704   001E96  EF4F  F00F         	goto	i1u170_21
  4705   001E9A  EF51  F00F         	goto	i1u170_20
  4706   001E9E                     i1u170_21:
  4707   001E9E  EF55  F00F         	goto	i1l2237
  4708   001EA2                     i1u170_20:
  4709   001EA2  5003               	movf	___awmod@divisor^0,w,c
  4710   001EA4  5E01               	subwf	___awmod@dividend^0,f,c
  4711   001EA6  5004               	movf	(___awmod@divisor+1)^0,w,c
  4712   001EA8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4713   001EAA                     i1l2237:
  4714   001EAA  90D8               	bcf	status,0,c
  4715   001EAC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4716   001EAE  3203               	rrcf	___awmod@divisor^0,f,c
  4717   001EB0  2E05               	decfsz	___awmod@counter^0,f,c
  4718   001EB2  EF46  F00F         	goto	i1l2233
  4719   001EB6                     i1l2241:
  4720   001EB6  5006               	movf	___awmod@sign^0,w,c
  4721   001EB8  B4D8               	btfsc	status,2,c
  4722   001EBA  EF61  F00F         	goto	i1u171_21
  4723   001EBE  EF63  F00F         	goto	i1u171_20
  4724   001EC2                     i1u171_21:
  4725   001EC2  EF67  F00F         	goto	i1l2245
  4726   001EC6                     i1u171_20:
  4727   001EC6  6C01               	negf	___awmod@dividend^0,c
  4728   001EC8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4729   001ECA  B0D8               	btfsc	status,0,c
  4730   001ECC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4731   001ECE                     i1l2245:
  4732   001ECE  C001  F001         	movff	___awmod@dividend,?___awmod
  4733   001ED2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4734   001ED6  0012               	return		;funcret
  4735   001ED8                     __end_of___awmod:
  4736                           	callstack 0
  4737                           
  4738                           	psect	smallconst
  4739   001000                     __psmallconst:
  4740                           	callstack 0
  4741   001000  00                 	db	0
  4742   001001  00                 	db	0	; dummy byte at the end
  4743   000000                     
  4744                           	psect	rparam
  4745   000000                     
  4746                           	psect	temp
  4747   000058                     btemp:
  4748                           	callstack 0
  4749   000058                     	ds	1
  4750   000000                     int$flags	set	btemp
  4751   000000                     wtemp8	set	btemp+1
  4752   000000                     ttemp5	set	btemp+1
  4753   000000                     ttemp6	set	btemp+4
  4754   000000                     ttemp7	set	btemp+8
  4755                           
  4756                           	psect	idloc
  4757                           
  4758                           ;Config register IDLOC0 @ 0x200000
  4759                           ;	unspecified, using default values
  4760   200000                     	org	2097152
  4761   200000  FF                 	db	255
  4762                           
  4763                           ;Config register IDLOC1 @ 0x200001
  4764                           ;	unspecified, using default values
  4765   200001                     	org	2097153
  4766   200001  FF                 	db	255
  4767                           
  4768                           ;Config register IDLOC2 @ 0x200002
  4769                           ;	unspecified, using default values
  4770   200002                     	org	2097154
  4771   200002  FF                 	db	255
  4772                           
  4773                           ;Config register IDLOC3 @ 0x200003
  4774                           ;	unspecified, using default values
  4775   200003                     	org	2097155
  4776   200003  FF                 	db	255
  4777                           
  4778                           ;Config register IDLOC4 @ 0x200004
  4779                           ;	unspecified, using default values
  4780   200004                     	org	2097156
  4781   200004  FF                 	db	255
  4782                           
  4783                           ;Config register IDLOC5 @ 0x200005
  4784                           ;	unspecified, using default values
  4785   200005                     	org	2097157
  4786   200005  FF                 	db	255
  4787                           
  4788                           ;Config register IDLOC6 @ 0x200006
  4789                           ;	unspecified, using default values
  4790   200006                     	org	2097158
  4791   200006  FF                 	db	255
  4792                           
  4793                           ;Config register IDLOC7 @ 0x200007
  4794                           ;	unspecified, using default values
  4795   200007                     	org	2097159
  4796   200007  FF                 	db	255
  4797                           
  4798                           	psect	config
  4799                           
  4800                           ; Padding undefined space
  4801   300000                     	org	3145728
  4802   300000  FF                 	db	255
  4803                           
  4804                           ;Config register CONFIG1H @ 0x300001
  4805                           ;	Oscillator Selection bits
  4806                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4807                           ;	Fail-Safe Clock Monitor Enable bit
  4808                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4809                           ;	Internal/External Oscillator Switchover bit
  4810                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4811   300001                     	org	3145729
  4812   300001  08                 	db	8
  4813                           
  4814                           ;Config register CONFIG2L @ 0x300002
  4815                           ;	Power-up Timer Enable bit
  4816                           ;	PWRT = OFF, PWRT disabled
  4817                           ;	Brown-out Reset Enable bits
  4818                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4819                           ;	Brown Out Reset Voltage bits
  4820                           ;	BORV = 3, Minimum setting
  4821   300002                     	org	3145730
  4822   300002  19                 	db	25
  4823                           
  4824                           ;Config register CONFIG2H @ 0x300003
  4825                           ;	Watchdog Timer Enable bit
  4826                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4827                           ;	Watchdog Timer Postscale Select bits
  4828                           ;	WDTPS = 32768, 1:32768
  4829   300003                     	org	3145731
  4830   300003  1E                 	db	30
  4831                           
  4832                           ; Padding undefined space
  4833   300004                     	org	3145732
  4834   300004  FF                 	db	255
  4835                           
  4836                           ;Config register CONFIG3H @ 0x300005
  4837                           ;	CCP2 MUX bit
  4838                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4839                           ;	PORTB A/D Enable bit
  4840                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4841                           ;	Low-Power Timer1 Oscillator Enable bit
  4842                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4843                           ;	MCLR Pin Enable bit
  4844                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  4845   300005                     	org	3145733
  4846   300005  01                 	db	1
  4847                           
  4848                           ;Config register CONFIG4L @ 0x300006
  4849                           ;	Stack Full/Underflow Reset Enable bit
  4850                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4851                           ;	Single-Supply ICSP Enable bit
  4852                           ;	LVP = OFF, Single-Supply ICSP disabled
  4853                           ;	Extended Instruction Set Enable bit
  4854                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4855                           ;	Background Debugger Enable bit
  4856                           ;	DEBUG = 0x1, unprogrammed default
  4857   300006                     	org	3145734
  4858   300006  80                 	db	128
  4859                           
  4860                           ; Padding undefined space
  4861   300007                     	org	3145735
  4862   300007  FF                 	db	255
  4863                           
  4864                           ;Config register CONFIG5L @ 0x300008
  4865                           ;	Code Protection bit
  4866                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4867                           ;	Code Protection bit
  4868                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4869                           ;	Code Protection bit
  4870                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4871                           ;	Code Protection bit
  4872                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4873   300008                     	org	3145736
  4874   300008  0F                 	db	15
  4875                           
  4876                           ;Config register CONFIG5H @ 0x300009
  4877                           ;	Boot Block Code Protection bit
  4878                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4879                           ;	Data EEPROM Code Protection bit
  4880                           ;	CPD = OFF, Data EEPROM not code-protected
  4881   300009                     	org	3145737
  4882   300009  C0                 	db	192
  4883                           
  4884                           ;Config register CONFIG6L @ 0x30000A
  4885                           ;	Write Protection bit
  4886                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4887                           ;	Write Protection bit
  4888                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4889                           ;	Write Protection bit
  4890                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4891                           ;	Write Protection bit
  4892                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4893   30000A                     	org	3145738
  4894   30000A  0F                 	db	15
  4895                           
  4896                           ;Config register CONFIG6H @ 0x30000B
  4897                           ;	Configuration Register Write Protection bit
  4898                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4899                           ;	Boot Block Write Protection bit
  4900                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4901                           ;	Data EEPROM Write Protection bit
  4902                           ;	WRTD = OFF, Data EEPROM not write-protected
  4903   30000B                     	org	3145739
  4904   30000B  E0                 	db	224
  4905                           
  4906                           ;Config register CONFIG7L @ 0x30000C
  4907                           ;	Table Read Protection bit
  4908                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4909                           ;	Table Read Protection bit
  4910                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4911                           ;	Table Read Protection bit
  4912                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4913                           ;	Table Read Protection bit
  4914                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4915   30000C                     	org	3145740
  4916   30000C  0F                 	db	15
  4917                           
  4918                           ;Config register CONFIG7H @ 0x30000D
  4919                           ;	Boot Block Table Read Protection bit
  4920                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4921   30000D                     	org	3145741
  4922   30000D  40                 	db	64
  4923                           tosu	equ	0xFFF
  4924                           tosh	equ	0xFFE
  4925                           tosl	equ	0xFFD
  4926                           stkptr	equ	0xFFC
  4927                           pclatu	equ	0xFFB
  4928                           pclath	equ	0xFFA
  4929                           pcl	equ	0xFF9
  4930                           tblptru	equ	0xFF8
  4931                           tblptrh	equ	0xFF7
  4932                           tblptrl	equ	0xFF6
  4933                           tablat	equ	0xFF5
  4934                           prodh	equ	0xFF4
  4935                           prodl	equ	0xFF3
  4936                           indf0	equ	0xFEF
  4937                           postinc0	equ	0xFEE
  4938                           postdec0	equ	0xFED
  4939                           preinc0	equ	0xFEC
  4940                           plusw0	equ	0xFEB
  4941                           fsr0h	equ	0xFEA
  4942                           fsr0l	equ	0xFE9
  4943                           wreg	equ	0xFE8
  4944                           indf1	equ	0xFE7
  4945                           postinc1	equ	0xFE6
  4946                           postdec1	equ	0xFE5
  4947                           preinc1	equ	0xFE4
  4948                           plusw1	equ	0xFE3
  4949                           fsr1h	equ	0xFE2
  4950                           fsr1l	equ	0xFE1
  4951                           bsr	equ	0xFE0
  4952                           indf2	equ	0xFDF
  4953                           postinc2	equ	0xFDE
  4954                           postdec2	equ	0xFDD
  4955                           preinc2	equ	0xFDC
  4956                           plusw2	equ	0xFDB
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     70      87
    BANK0           128     38      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    deQueue@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    deQueue@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    enQueue@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    enQueue@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    enQueue@q$values$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    enQueue@value	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    free@c$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@cptr	PTR unsigned char  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    free@ptr	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$.$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    ?i1___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    i1___simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    isQueueEmpty@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    isQueueEmpty@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    isQueueFull@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    isQueueFull@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnInitQueue@q	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnInitQueue@q$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnRxMessage	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnRxMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnRxQueue	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnTxMessage	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnTxMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    lnTxQueue	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    lnTxQueue$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    ?_makeDeepCopy$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageCopy	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageCopy$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageOrig	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    makeDeepCopy@lnMessageOrig$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    rxChecksum@lnMessage	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    rxChecksum@lnMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    rxChecksum@lnQueue	PTR struct lnQueue size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    S1512$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    S26lnMessage$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    S31lnQueue$values	PTR PTR struct lnMessage size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__makeDeepCopy	PTR struct lnMessage size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 

    sp__makeDeepCopy$lnData	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 3
		 -> __heap_hi(UNKNOWN), __heap_hi$.(UNKNOWN), __heap_hi$.$.(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lnIsr in COMRAM

    _lnIsr->_lnIsrRc
    _lnIsrTmr1->_txHandler
    _lnIsrRc->_rxHandler
    _txHandler->_deQueue
    _txHandler->_free
    _deQueue->___awmod
    _rxHandler->_rxChecksum
    _rxChecksum->_enQueue
    _startCmpDelay->_getRandomValue
    _makeDeepCopy->i1_malloc
    i1_malloc->i1___simple_search_fl
    _enQueue->_makeDeepCopy

Critical Paths under _main in BANK0

    _lnInit->_lnInitQueue
    _lnInitQueue->_malloc
    _malloc->___simple_search_fl

Critical Paths under _lnIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lnIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lnIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lnIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lnIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lnIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lnIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lnIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lnIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lnIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lnIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lnIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lnIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lnIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lnIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lnIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4948
                                             36 BANK0      2     2      0
                             _lnInit
 ---------------------------------------------------------------------------------
 (1) _lnInit                                               0     0      0    4948
                   _lnInitComparator
                       _lnInitEusart
                          _lnInitIsr
                        _lnInitQueue
                         _lnInitTmr1
                             _malloc
 ---------------------------------------------------------------------------------
 (2) _lnInitTmr1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lnInitQueue                                          4     1      3    2729
                                             32 BANK0      4     1      3
                             _malloc
 ---------------------------------------------------------------------------------
 (2) _malloc                                              14    12      2    2219
                                             20 BANK0     12    10      2
                      ___expand_heap
                 ___simple_search_fl
 ---------------------------------------------------------------------------------
 (3) ___simple_search_fl                                  20    18      2     915
                                              0 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (3) ___expand_heap                                        8     6      2     224
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _lnInitIsr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lnInitEusart                                         0     0      0       0
                             _setBRG
 ---------------------------------------------------------------------------------
 (3) _setBRG                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lnInitComparator                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lnIsr                                                9     9      0   14688
                                             61 COMRAM     9     9      0
                               _free
                            _lnIsrRc
                          _lnIsrTmr1
            _startLinebreakExtension
 ---------------------------------------------------------------------------------
 (6) _startLinebreakExtension                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lnIsrTmr1                                            2     2      0    2579
                                             14 COMRAM     2     2      0
                           _isLnFree
                      _startCmpDelay
                          _txHandler
 ---------------------------------------------------------------------------------
 (6) _lnIsrRc                                              1     1      0   10931
                                             60 COMRAM     1     1      0
                               _free
                          _rxHandler
                     _startLinebreak
                          _txHandler
 ---------------------------------------------------------------------------------
 (7) _txHandler                                            4     4      0    2328
                                             10 COMRAM     4     4      0
                            _deQueue
                               _free
                           _isLnFree
                      _startCmpDelay
                     _startLinebreak
 ---------------------------------------------------------------------------------
 (8) _isLnFree                                             1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _deQueue                                              4     2      2     899
                                              6 COMRAM     4     2      2
                            ___awmod
                       _isQueueEmpty
 ---------------------------------------------------------------------------------
 (9) _isQueueEmpty                                         2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _rxHandler                                            3     3      0    7380
                                             57 COMRAM     3     3      0
                         _rxChecksum
                           i1_malloc
 ---------------------------------------------------------------------------------
 (8) _rxChecksum                                           7     2      5    5476
                                             50 COMRAM     7     2      5
                            _enQueue
                               _free
                       _makeDeepCopy
                      _startCmpDelay
                     _startLinebreak
 ---------------------------------------------------------------------------------
 (8) _startLinebreak                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _startCmpDelay                                        4     4      0     227
                                              4 COMRAM     4     4      0
                     _getRandomValue
 ---------------------------------------------------------------------------------
 (9) _getRandomValue                                       4     2      2     158
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _makeDeepCopy                                         9     7      2    2151
                                             32 COMRAM     9     7      2
                           i1_malloc
 ---------------------------------------------------------------------------------
 (8) i1_malloc                                            14    12      2    1640
                                             20 COMRAM    12    10      2
                    i1___expand_heap
               i1___simple_search_fl
 ---------------------------------------------------------------------------------
 (9) i1___simple_search_fl                                20    18      2     852
                                              0 COMRAM    20    18      2
 ---------------------------------------------------------------------------------
 (9) i1___expand_heap                                      8     6      2     161
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) _free                                                10     8      2    1178
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (9) _enQueue                                              9     5      4     987
                                             41 COMRAM     9     5      4
                            ___awmod
                        _isQueueFull
                       _makeDeepCopy (ARG)
 ---------------------------------------------------------------------------------
 (10) _isQueueFull                                         4     2      2     133
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     500
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lnInit
     _lnInitComparator
     _lnInitEusart
       _setBRG
     _lnInitIsr
     _lnInitQueue
       _malloc
         ___expand_heap
         ___simple_search_fl
     _lnInitTmr1
     _malloc

 _lnIsr (ROOT)
   _free
   _lnIsrRc
     _free
     _rxHandler
       _rxChecksum
         _enQueue
           ___awmod
           _isQueueFull
           _makeDeepCopy (ARG)
             i1_malloc
               i1___expand_heap
               i1___simple_search_fl
         _free
         _makeDeepCopy
         _startCmpDelay
           _getRandomValue
         _startLinebreak
       i1_malloc
     _startLinebreak
     _txHandler
       _deQueue
         ___awmod
         _isQueueEmpty
       _free
       _isLnFree
       _startCmpDelay
       _startLinebreak
   _lnIsrTmr1
     _isLnFree
     _startCmpDelay
     _txHandler
   _startLinebreakExtension

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      29        0.0%
BANK13             100      0       0      30        0.0%
BITBANK12          100      0       0      27        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      25        0.0%
BANK11             100      0       0      26        0.0%
BITBANK10          100      0       0      23        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      21        0.0%
BANK9              100      0       0      22        0.0%
BITBANK8           100      0       0      19        0.0%
BANK8              100      0       0      20        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK14           EF      0       0      31        0.0%
BANK14              EF      0       0      32        0.0%
BITBANK15           80      0       0      33        0.0%
BANK15              80      0       0      34        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     26      36       4       42.2%
BIGRAM_1            80      0       0      50        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     46      57       1       69.0%
BITBIGSFR_1hhl      14      0       0      41        0.0%
BITBIGSFR_1llh       B      0       0      44        0.0%
BITBIGSFR_5h         9      0       0      35        0.0%
BITBIGSFRllh         7      0       0      47        0.0%
BITBIGSFRlh          7      0       0      46        0.0%
BITBIGSFRh           6      0       0      45        0.0%
BITBIGSFR_2          6      0       0      39        0.0%
BITBIGSFR_1lhhh      3      0       0      43        0.0%
BITBIGSFR_1hl        3      0       0      42        0.0%
BITBIGSFR_4          3      0       0      37        0.0%
BITBIGSFR_3          3      0       0      38        0.0%
BITBIGSFR_1hhh       2      0       0      40        0.0%
BITBIGSFR_5l         2      0       0      36        0.0%
BITBIGSFRlll         2      0       0      48        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D      49        0.0%
DATA                 0      0      8D      52        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Apr 07 08:36:10 2024

                       ?_lnInitQueue 00A0                                    __ 0056  
                      ?_lnInitEusart 0001                                   l45 228E  
                                 l46 228C                                   l47 229C  
                                 bsr 0FE0                                  l160 2344  
                                l163 24FA                                  l172 24DA  
                                l166 24A2                                  l273 21AA  
                                l169 24E8                                  l268 24F2  
                                l983 13A4                                  l975 14F2  
                                l986 14AE                         ___awmod@sign 0006  
                                wreg 0FE8                        _startCmpDelay 2346  
                               l1020 1800                                 l1016 1858  
                               l1034 1F02                                 l1018 180C  
                               l1039 1F84                         ?_isQueueFull 0001  
                               l2401 12C0                                 l2403 12E0  
                               l2421 1394                                 l2405 12F2  
                               l2413 133A                                 l2501 178A  
                               l2431 1426                                 l2423 13AC  
                               l2415 1358                                 l2407 1316  
                               l2503 17AC                                 l2601 249A  
                               l2441 14D2                                 l2433 144A  
                               l2417 136A                                 l2409 132A  
                               l2425 13C0                                 l2521 182C  
                               l2513 17E0                                 l2505 17B8  
                               l2531 24EA                                 l2603 249C  
                               l2451 1ED8                                 l2443 14E6  
                               l2435 145A                                 l2427 13D2  
                               l2523 1834                                 l2515 17F8  
                               l2507 17C8                                 l2605 24A0  
                               l2613 24CC                                 l2461 1F2C  
                               l2453 1EE8                                 l2437 1492  
                               l2429 13E4                                 l2525 183C  
                               l2517 1814                                 l2701 22E4  
                               l2471 1F74                                 l2463 1F4A  
                               l2455 1EFA                                 l2439 14C6  
                               l2519 181C                                 l2527 1850  
                               l2711 233C                                 l2703 22FA  
                               l2465 1F60                                 l2457 1F18  
                               l2393 127C                                 l2481 170A  
                               l2609 24DC                                 l2713 2340  
                               l2705 230C                                 l2467 1F68  
                               l2459 1F20                                 l2395 12A8  
                               l2491 1756                                 l2483 170E  
                               l2475 16F6                                 l2571 214E  
                               l2707 2334                                 l2581 24F8  
                               l2485 1724                                 l2477 16F6  
                               l2573 2184                                 l2709 2338  
                               l2591 2490                                 l2399 12B4  
                               l2495 1762                                 l2487 1730  
                               l2479 16F6                                 l2575 2192  
                               l2593 2492                                 l2585 2486  
                               l2497 1762                                 l2489 174E  
                               l2577 219C                                 l2569 213C  
                               l2761 2280                                 l2579 24F4  
                               l2595 2494                                 l2587 248A  
                               l2499 1776                                 l2771 22C2  
                               l2763 22A0                                 l2597 2496  
                               l2589 248E                                 l2765 22A4  
                               l2599 2498                                 l2767 22A6  
                               l2769 22C0                    ??i1___expand_heap 0003  
                               u2000 1F60                                 u2001 1F5C  
                               u2010 170A                                 u2011 1706  
                               u2020 1724                                 u2021 1720  
                               u2030 174E                                 u2031 174A  
                               u2040 178A                                 u2041 1786  
                               u2050 17AC                                 u2051 17A8  
                               u2060 17DC                                 u2061 17D8  
                               u2070 17F8                                 u2071 17F4  
                               u2260 229C                                 u2261 2298  
                               u1900 1358                                 u1901 1354  
                               u1910 136A                                 u1911 1366  
                               u1920 1390                                 u1921 138C  
                               u1930 13D2                                 u1931 13CE  
                               u1940 13E4                                 u1941 13E0  
                               u1950 1426                                 u1870 12A8  
                               u1951 1422                                 u1871 12A4  
                               u1960 14C6                                 u1880 12E0  
                               u1961 14C2                                 u1881 12DC  
                               u1970 1EFA                                 u1890 12F2  
                               u1971 1EF6                                 u1891 12EE  
                               u1980 1F18                                 u1981 1F14  
                               u1990 1F4A                                 u1991 1F46  
                               u2977 22B2                                 u2987 22CE  
                     ??_makeDeepCopy 0023                                 _brkp 00A6  
                               _free 19BC                                 _main 2280  
          ??_startLinebreakExtension 0001                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 btemp 0058  
                               prodh 0FF4                                 prodl 0FF3  
                               start 0140                    ?_lnInitComparator 0001  
                       ___param_bank 0000                       ??_lnInitEusart 0080  
                 ??_lnInitComparator 0080                   startCmpDelay@delay 0007  
                         i1malloc@sz 001B                        ?_isQueueEmpty 0001  
                              ?_free 0001                                ?_main 0001  
                    __end_of___awmod 1ED8                                _CMCON 0FB4  
                              _T1CON 0FCD                        makeDeepCopy@i 0027  
                              i1l205 227E                                i1l223 16F4  
                              i1l252 2392                                i1l228 213A  
                              i1l244 1C6A                                i1l181 00BC  
                              i1l262 240A                                i1l255 24B8  
                              i1l248 2460                                i1l249 2462  
                              i1l185 0118                                i1l177 0064  
                              i1l258 24CA                                i1l283 1E26  
                              i1l179 0118                                i1l276 2484  
                              i1l189 2038                                i1l542 1ED6  
                              i1l198 20B8                                i1l279 243A  
                              i1l295 1D6C                                i1l288 2218  
                              i1l983 112A                                i1l975 127A  
                              i1l992 1B16                                i1l986 1234  
                    __end_of_deQueue 221A                                _RCREG 0FAE  
                              _TMR1H 0FCF                                _TMR1L 0FCE  
                              _SPBRG 0FAF                                _TXREG 0FAD  
                       lnInitQueue@q 00A0                      __end_of_enQueue 1E28  
                     ?_startCmpDelay 0001                      __end_of_lnIsrRc 2280  
                              _lnIsr 0018                                _errno 004B  
                              free@c 0009                                tablat 0FF5  
                         __XTAL_FREQ 00B2                     ___expand_heap@pn 0080  
                              ttemp5 0059                                ttemp6 005C  
                              ttemp7 0060                                status 0FD8  
                              wtemp8 0059                     __end_ofi1_malloc 19BC  
                     _startLinebreak 24A4                      __initialization 2394  
                       __end_of_free 1B18                         __end_of_main 22E4  
                      ___expand_heap 1ED8                       ??_isQueueEmpty 0003  
                  i1___expand_heap@n 0005      __end_of_startLinebreakExtension 24CC  
                             ??_free 0003                               ??_main 00A4  
                      __activetblptr 0002         __end_ofi1___simple_search_fl 127C  
           i1___expand_heap@new_brkp 0007                          i1malloc@new 001F  
                             ?_lnIsr 0001                               i1l1020 1962  
                             i1l1016 19BA                               i1l1034 1FB0  
                             i1l1018 196E                               i1l1039 2032  
                             i1l2121 103A                               i1l2201 23E8  
                             i1l2131 10B0                               i1l2123 1046  
                             i1l2115 1002                               i1l2203 23FA  
                             i1l2221 1E46                               i1l2213 1E28  
                             i1l2125 1066                               i1l2117 102E  
                             i1l2301 19B2                               i1l2205 2402  
             __end_of_startLinebreak 24BA                               i1l2231 1E7E  
                             i1l2223 1E54                               i1l2215 1E2C  
                             i1l2311 19FA                               i1l2151 116A  
                             i1l2143 111A                               i1l2127 1078  
                             i1l2135 10C0                               i1l2233 1E8C  
                             i1l2241 1EB6                               i1l2225 1E5C  
                             i1l2217 1E3A                               i1l2209 240C  
                             i1l2313 1A2E                               i1l2305 19BC  
                             i1l2161 124E                               i1l2153 11AC  
                             i1l2145 1132                               i1l2137 10DE  
                             i1l2129 109C                               i1l2243 1EC6  
                             i1l2235 1EA2                               i1l2227 1E6E  
                             i1l2219 1E42                               i1l2315 1A4E  
                             i1l2323 1A82                               i1l2331 1B02  
                             i1l2163 125A                               i1l2155 11D0  
                             i1l2139 10F0                               i1l2147 1146  
                             i1l2251 185A                               i1l2245 1ECE  
                             i1l2237 1EAA                               i1l2229 1E76  
                             i1l2325 1ABE                               i1l2317 1A76  
                             i1l2309 19DA                               i1l2181 1FCE  
                             i1l2173 1F86                               i1l2165 126E  
                             i1l2157 11E0                               i1l2149 1158  
                             i1l2261 1892                               i1l2253 185A  
                             i1l2341 236A                               i1l2239 1EB0  
                             i1l2183 1FDA                               i1l2175 1F94  
                             i1l2159 1218                               i1l2271 18C4  
                             i1l2263 18B0                               i1l2255 186C  
                             i1l2343 2372                               i1l2335 2346  
                             i1l2351 24A8                               i1l3223 209A  
                             i1l2329 1AEA                               i1l2193 2022  
                             i1l2185 1FF8                               i1l2177 1FA8  
                             i1l2281 192A                               i1l2273 18D8  
                             i1l2265 18B8                               i1l2257 1870  
                             i1l2249 185A                               i1l2361 1CCC  
                             i1l2353 1C6C                               i1l2345 2384  
                             i1l2337 235A                               i1l3225 16DE  
                             i1l2187 200E                               i1l2179 1FC6  
                             i1l2291 1976                               i1l2275 18EA  
                             i1l2259 1886                               i1l2371 1D64  
                             i1l2363 1CFC                               i1l2355 1C80  
                             i1l2347 238A                               i1l2339 2362  
                             i1l2381 1D8E                               i1l2189 2016  
                             i1l2293 197E                               i1l2277 190E  
                             i1l2269 18C4                               i1l2365 1D04  
                             i1l2357 1C9C                               i1l2197 23DA  
                             i1l2349 24A4                               i1l2533 243C  
                             i1l2621 1B5C                               i1l2383 1DD2  
                             i1l2375 1D6E                               i1l2295 198E  
                             i1l2287 1940                               i1l2279 191A  
                             i1l2367 1D48                               i1l2359 1CB8  
                             i1l2199 23E2                               i1l2551 2112  
                             i1l2543 20BA                               i1l2535 2440  
                             i1l2631 1BCA                               i1l2623 1B60  
                             i1l2615 1B18                               i1l2385 1DE0  
                             i1l2297 1996                               i1l2289 195A  
                             i1l2369 1D4A                               i1l2553 212A  
                             i1l2545 20E6                               i1l2537 244E  
                             i1l2641 1C42                               i1l2625 1B66  
                             i1l2617 1B2C                               i1l2721 2044  
                             i1l2801 0108                               i1l2299 199E  
                             i1l2555 2136                               i1l2547 2106  
                             i1l2651 1514                               i1l2563 21CC  
                             i1l2539 245C                               i1l2643 1C46  
                             i1l2627 1B9A                               i1l2619 1B3C  
                             i1l2635 1C26                               i1l2731 2078  
                             i1l2723 2058                               i1l1667 24BA  
                             i1l2803 0110                               i1l2549 210E  
                             i1l2661 1560                               i1l2653 1528  
                             i1l2389 2464                               i1l2565 220A  
                             i1l2557 21AC                               i1l2645 1C5E  
                             i1l2637 1C36                               i1l2629 1BBA  
                             i1l2733 207C                               i1l2717 2034  
                             i1l2671 15CE                               i1l2663 157C  
                             i1l2655 1538                               i1l2647 14F6  
                             i1l2639 1C3E                               i1l2751 2240  
                             i1l2727 2060                               i1l2719 203C  
                             i1l2681 1642                               i1l2673 15E8  
                             i1l2665 158C                               i1l2657 1548  
                             i1l2649 1506                               i1l2753 2248  
                             i1l2745 221A                               i1l2729 2064  
                             i1l2683 1652                               i1l2667 1598  
                             i1l2659 1558                               i1l2755 226C  
                             i1l2747 221E                               i1l2739 2084  
                             i1l2685 1682                               i1l2669 15C8  
                             i1l2757 2270                               i1l2749 222E  
                             i1l2781 0072                               i1l2773 003E  
                             i1l2687 16AE                               i1l2679 1628  
                             i1l2695 16C2                               i1l2759 2278  
                             i1l2791 00B0                               i1l2783 0080  
                             i1l2775 004C                               i1l2793 00CC  
                             i1l2785 0084                               i1l2777 005A  
                             i1l2795 00D0                               i1l2787 0094  
                             i1l2779 005C                               i1l2797 00E8  
                             i1l2789 0098                               i1l2799 00F4  
                             _OSCCON 0FD3                               _SPBRGH 0FB0  
                   __end_of_isLnFree 2464                       ?___expand_heap 0080  
                  getRandomValue@lsb 0003              ___simple_search_fl@best 0092  
            ___simple_search_fl@last 008C              ___simple_search_fl@next 008E  
                          ??___awmod 0005                               _lnInit 22E4  
                          ??_deQueue 0009                               _malloc 16F6  
                             _setBRG 24EA                               clear_0 23BA  
                             clear_1 23C6                      ___awmod@divisor 0003  
                          ??_enQueue 002E                               isa$std 0001  
                    ___awmod@counter 0005                 __end_of_makeDeepCopy 1D6E  
                          ??_lnIsrRc 003D                      ??_startCmpDelay 0005  
          i1___simple_search_fl@best 0013            i1___simple_search_fl@last 000D  
          i1___simple_search_fl@next 000F                         __mediumconst 0000  
                  rxChecksum@lnQueue 0033                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
               __end_of_lnInitEusart 24A4                         isQueueFull@q 0001  
                    ?_startLinebreak 0001                           __accesstop 0080  
            __end_of__initialization 23CC                        ___rparam_used 0001  
                         ___freelist 00AC                       __pcstackCOMRAM 0001  
                       __pidataBANK0 24FC            makeDeepCopy@lnMessageCopy 0028  
                      __end_of_lnIsr 0140            makeDeepCopy@lnMessageOrig 0021  
                    i1___expand_heap 1F86                            ?i1_malloc 0015  
                 i1___expand_heap@pn 0001                              ??_lnIsr 003E  
         __end_of___simple_search_fl 14F4                           __pbssBANK0 00A6  
               __end_of_isQueueEmpty 2486                      ??___expand_heap 0082  
             i1___simple_search_fl@c 0011               i1___simple_search_fl@n 0001  
               i1___simple_search_fl 1002                              ?_lnInit 0001  
                            ?_malloc 0094                              ?_setBRG 0001  
                         ??i1_malloc 0017                              _OSCTUNE 0F9B  
                         _lnInitTmr1 24DC                            ?_isLnFree 0001  
     i1___simple_search_fl@best_last 0009                              __Hparam 0000  
              ?i1___simple_search_fl 0001                              __Lparam 0000  
               ___simple_search_fl@c 0090                 ___simple_search_fl@n 0080  
                       _isLnFree$995 0001              __end_ofi1___expand_heap 2034  
                  __end_of_lnInitIsr 24DC                   getRandomValue@lfsr 0001  
                  __end_of_lnIsrTmr1 20BA                              ___awmod 1E28  
                            _deQueue 21AC                         __psmallconst 1000  
           ___simple_search_fl@split 008A                              __pcinit 2394  
                            __ramtop 1000                              _enQueue 1D6E  
                            __ptext0 2280                              __ptext1 22E4  
                            __ptext2 24DC                              __ptext3 213C  
                            __ptext4 16F6                              __ptext5 127C  
                            __ptext6 1ED8                              __ptext7 24CC  
                            __ptext8 2486                              __ptext9 24EA  
                            _lnIsrRc 221A                     ___awmod@dividend 0001  
                         ??_isLnFree 0001                              free@ptr 0001  
                         _rxChecksum 20BA             ?_startLinebreakExtension 0001  
               end_of_initialization 23CC                   rxChecksum@checksum 0037  
                  __end_of_rxHandler 16F6                              malloc@m 009A  
                            malloc@n 0094                              malloc@p 009C  
             ___expand_heap@new_brkp 0086                            _LNCONbits 0057  
                      __Lmediumconst 0000                    __end_of_txHandler 1C6C  
                       _makeDeepCopy 1C6C           i1___simple_search_fl@split 000B  
                          _RCSTAbits 0FAB                              postdec1 0FE5  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc1 0FE6                              postinc2 0FDE  
                       _lnInitEusart 2486                        isQueueEmpty@q 0001  
                          _PORTCbits 0F82                            _TRISAbits 0F92  
                          _TRISBbits 0F93                     ??_startLinebreak 0001  
                          _TRISCbits 0F94                          ?_lnInitTmr1 0001  
                          _TXSTAbits 0FAC               ??i1___simple_search_fl 0003  
                      ??_lnInitQueue 00A3                     ?i1___expand_heap 0001  
                          i1malloc@m 0019                            i1malloc@n 0015  
                          i1malloc@p 001D                          _BAUDCONbits 0FB8  
                     __end_of_lnInit 2346                       __end_of_malloc 185A  
                       _isQueueEmpty 2464                       __end_of_setBRG 24F4  
                     _getRandomValue 23DA                      ___expand_heap@n 0084  
                   _lnInitComparator 24F4                  start_initialization 2394  
                         malloc@lock 0047                __end_of_startCmpDelay 2394  
                      ??_isQueueFull 0003                          ?_rxChecksum 0033  
                 ___simple_search_fl 127C         ___simple_search_fl@best_last 0088  
                           ??_lnInit 00A4                          __pdataBANK0 00B2  
                           ??_malloc 0096                             ??_setBRG 0080  
             __end_of_getRandomValue 240C                  ?___simple_search_fl 0080  
                __end_of_lnInitQueue 21AC                            ___heap_hi 0EEF  
                          ___heap_lo 00B6                          __pbssCOMRAM 0047  
                      __pcstackBANK0 0080                 ??___simple_search_fl 0082  
                __end_of_isQueueFull 243C                __end_of___expand_heap 1F86  
                    _lastRandomValue 0051                             ?___awmod 0001  
                           ?_deQueue 0007                          __pintcodelo 0018  
                    ?_getRandomValue 0001                             ?_enQueue 002A  
                          _lnInitIsr 24CC                            _lnIsrTmr1 2034  
                           ?_lnIsrRc 0001                          __smallconst 1000  
                          _lnRxQueue 00AE                            _lnTxQueue 00B0  
                           _LATBbits 0F8A                            _rxHandler 14F4  
                           _IPR1bits 0F9F                             _PIE1bits 0F9D  
                           i1u210_20 20E6                             i1u210_21 20E2  
                           i1u211_20 21C8                             i1u211_21 21C4  
                           i1u220_20 1642                             i1u212_20 1B2C  
                           i1u220_21 163E                             i1u212_21 1B28  
                           i1u221_20 1652                             i1u213_20 1B3C  
                           i1u221_21 164E                             i1u213_21 1B38  
                           i1u150_20 1066                             i1u214_20 1B9A  
                           i1u222_20 2058                             i1u230_20 0080  
                           i1u150_21 1062                             i1u214_21 1B96  
                           i1u222_21 2054                             i1u230_21 007C  
                           i1u151_20 1078                             i1u215_20 1C36  
                           i1u223_20 2078                             i1u231_20 0094  
                           i1u151_21 1074                             i1u215_21 1C32  
                           i1u223_21 2074                             i1u231_21 0090  
                           i1u160_20 1FC6                             i1u152_20 10DE  
                           i1u216_20 1506                             i1u208_20 244E  
                           i1u224_20 222E                             i1u232_20 00CC  
                           i1u160_21 1FC2                             i1u152_21 10DA  
                           i1u216_21 1502                             i1u208_21 244A  
                           i1u224_21 222A                             i1u232_21 00C8  
                           i1u161_20 1FF8                             i1u153_20 10F0  
                           i1u217_20 1514                             i1u209_20 245C  
                           i1u225_20 2240                             i1u233_20 0108  
                           i1u161_21 1FF4                             i1u153_21 10EC  
                           i1u217_21 1510                             i1u209_21 2458  
                           i1u225_21 223C                             i1u233_21 0104  
                           i1u170_20 1EA2                             i1u162_20 200E  
                           i1u154_20 1116                             i1u218_20 158C  
                           i1u170_21 1E9E                             i1u162_21 200A  
                           i1u154_21 1112                             i1u218_21 1588  
                           i1u171_20 1EC6                             i1u155_20 1158  
                           i1u163_20 23FA                             i1u219_20 15E8  
                           i1u227_20 004C                             i1u171_21 1EC2  
                           i1u155_21 1154                             i1u163_21 23F6  
                           i1u219_21 15E4                             i1u227_21 0048  
                           i1u164_20 2438                             i1u180_20 19FA  
                           i1u156_20 116A                             i1u172_20 186C  
                           i1u228_20 005A                             i1u164_21 2432  
                           i1u180_21 19F6                             i1u156_21 1166  
                           i1u172_21 1868                             i1u228_21 0056  
                           i1u165_20 243A                             i1u181_20 1A2E  
                           i1u157_20 11AC                             i1u149_20 102E  
                           i1u173_20 1886                             i1u229_20 0072  
                           i1u181_21 1A2A                             i1u157_21 11A8  
                           i1u149_21 102A                             i1u173_21 1882  
                           i1u229_21 006E                             i1u166_20 1E3A  
                           i1u182_20 1ABE                             i1u158_20 124E  
                           i1u174_20 18B0                             i1u166_21 1E36  
                           i1u182_21 1ABA                             i1u158_21 124A  
                           i1u174_21 18AC                             i1u167_20 1E54  
                           i1u159_20 1FA8                             i1u175_20 18EA  
                           i1u183_20 1D64                             i1u167_21 1E50  
                           i1u159_21 1FA4                             i1u175_21 18E6  
                           i1u183_21 1D60                             i1u168_20 1E6E  
                           i1u184_20 1D8A                             i1u176_20 190E  
                           i1u168_21 1E6A                             i1u184_21 1D86  
                           i1u176_21 190A                             i1u169_20 1E8C  
                           i1u177_20 193C                             i1u185_20 2482  
                           i1u169_21 1E88                             i1u177_21 1938  
                           i1u185_21 247C                             i1u178_20 195A  
                           i1u186_20 2484                             i1u178_21 1956  
                           i1u179_20 19D6                             i1u179_21 19D2  
                           _PIR1bits 0F9E                            _txHandler 1B18  
                           _RCONbits 0FD0                          _lnInitQueue 213C  
                         ?_lnInitIsr 0001                           ?_lnIsrTmr1 0001  
                           i1_malloc 185A                      lnInitQueue@size 00A2  
                    lnIsrRc@lnRxData 003D                          _lnRxCounter 0055  
                       ??_lnInitTmr1 0080                          _lnRxMessage 004F  
                        _lnTxCounter 0054                            copy_data0 23A8  
                        _isQueueFull 240C                          _lnTxMessage 004D  
                          malloc@end 00A8                            malloc@cur 00AA  
                          malloc@new 009E                           ?_rxHandler 0001  
           __end_of_lnInitComparator 24FC                             __Hrparam 0000  
                       enQueue@value 002C                           ?_txHandler 0001  
                           __Lrparam 0000                   __end_of_lnInitTmr1 24EA  
                           __ptext10 24F4                             __ptext20 20BA  
                           __ptext12 24BA                             __ptext21 24A4  
                           __ptext13 2034                             __ptext30 240C  
                           __ptext22 2346                             __ptext14 221A  
                           __ptext31 1E28                             __ptext23 23DA  
                           __ptext15 1B18                             __ptext24 1C6C  
                           __ptext16 243C                             __ptext25 185A  
                           __ptext17 21AC                             __ptext26 1002  
                           __ptext18 2464                             __ptext27 1F86  
                           __ptext19 14F4                             __ptext28 19BC  
                           __ptext29 1D6E                             _isLnFree 243C  
                           deQueue@q 0007                         ??_rxChecksum 0038  
                           _lnTxData 0053                             enQueue@q 002A  
                           isa$xinst 0000                             int$flags 0058  
                           free@cptr 0007                   __end_of_rxChecksum 213C  
                        ??_lnInitIsr 0080                          ??_lnIsrTmr1 000F  
                           malloc@sz 0098                          _OSCTUNEbits 0F9B  
                         _INTCONbits 0FF2  i1___simple_search_fl@remaining_size 0007  
  ___simple_search_fl@remaining_size 0086                             intlevel1 0000  
                rxChecksum@lnMessage 0035                          ??_rxHandler 003A  
                         _OSCCONbits 0FD3              _startLinebreakExtension 24BA  
                        ??_txHandler 000B                     ??_getRandomValue 0003  
                      ?_makeDeepCopy 0021                    rxHandler@lnRxData 003C  
