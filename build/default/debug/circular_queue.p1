Version 4.0 HI-TECH Software Intermediate Code
"18 ./circular_queue.h
[; ;./circular_queue.h: 18: {
[s S6 `uc 1 `uc 1 `uc 1 `*uc 1 ]
[n S6 lnMessage size opCode checksum lnData ]
"26
[; ;./circular_queue.h: 26: {
[s S7 `uc 1 `uc 1 `uc 1 `uc 1 `**S6 1 ]
[n S7 lnQueue head tail numEntries size values ]
"58 C:\Program Files\Microchip\xc8\v2.45\pic\include\c99\stdlib.h
[; ;C:\Program Files\Microchip\xc8\v2.45\pic\include\c99\stdlib.h: 58: void *malloc (size_t);
[v _malloc `(*v ~T0 @X0 0 ef1`ui ]
"15 circular_queue.c
[; ;circular_queue.c: 15: void lnInitQueue(lnQueue_t* q, uint8_t size)
[v _lnInitQueue `(v ~T0 @X0 1 ef2`*S7`uc ]
"16
[; ;circular_queue.c: 16: {
{
[e :U _lnInitQueue ]
"15
[; ;circular_queue.c: 15: void lnInitQueue(lnQueue_t* q, uint8_t size)
[v _q `*S7 ~T0 @X0 1 r1 ]
[v _size `uc ~T0 @X0 1 r2 ]
"16
[; ;circular_queue.c: 16: {
[f ]
"17
[; ;circular_queue.c: 17:     q->size = size;
[e = . *U _q 3 _size ]
"18
[; ;circular_queue.c: 18:     q->values = malloc(sizeof(struct lnMessage*) * q->size);
[e = . *U _q 4 -> ( _malloc (1 * -> # `*S6 `ui -> . *U _q 3 `ui `**S6 ]
"19
[; ;circular_queue.c: 19:     q->numEntries = 0;
[e = . *U _q 2 -> -> 0 `i `uc ]
"20
[; ;circular_queue.c: 20:     q->head = 0;
[e = . *U _q 0 -> -> 0 `i `uc ]
"21
[; ;circular_queue.c: 21:     q->tail = 0;
[e = . *U _q 1 -> -> 0 `i `uc ]
"22
[; ;circular_queue.c: 22: }
[e :UE 8 ]
}
"29
[; ;circular_queue.c: 29: _Bool isQueueEmpty(lnQueue_t* q)
[v _isQueueEmpty `(a ~T0 @X0 1 ef1`*S7 ]
"30
[; ;circular_queue.c: 30: {
{
[e :U _isQueueEmpty ]
"29
[; ;circular_queue.c: 29: _Bool isQueueEmpty(lnQueue_t* q)
[v _q `*S7 ~T0 @X0 1 r1 ]
"30
[; ;circular_queue.c: 30: {
[f ]
"31
[; ;circular_queue.c: 31:     return (q->numEntries == 0);
[e ) -> -> == -> . *U _q 2 `i -> 0 `i `i `a ]
[e $UE 9  ]
"32
[; ;circular_queue.c: 32: }
[e :UE 9 ]
}
"38
[; ;circular_queue.c: 38:    _Bool isQueueFull(lnQueue_t* q)
[v _isQueueFull `(a ~T0 @X0 1 ef1`*S7 ]
"39
[; ;circular_queue.c: 39: {
{
[e :U _isQueueFull ]
"38
[; ;circular_queue.c: 38:    _Bool isQueueFull(lnQueue_t* q)
[v _q `*S7 ~T0 @X0 1 r1 ]
"39
[; ;circular_queue.c: 39: {
[f ]
"40
[; ;circular_queue.c: 40:     return (q->numEntries == q->size);
[e ) -> -> == -> . *U _q 2 `i -> . *U _q 3 `i `i `a ]
[e $UE 10  ]
"41
[; ;circular_queue.c: 41: }
[e :UE 10 ]
}
"49
[; ;circular_queue.c: 49: _Bool enQueue(lnQueue_t* q, lnMessage_t* value)
[v _enQueue `(a ~T0 @X0 1 ef2`*S7`*S6 ]
"50
[; ;circular_queue.c: 50: {
{
[e :U _enQueue ]
"49
[; ;circular_queue.c: 49: _Bool enQueue(lnQueue_t* q, lnMessage_t* value)
[v _q `*S7 ~T0 @X0 1 r1 ]
[v _value `*S6 ~T0 @X0 1 r2 ]
"50
[; ;circular_queue.c: 50: {
[f ]
"52
[; ;circular_queue.c: 52:     if (isQueueFull(q))
[e $ ! != -> ( _isQueueFull (1 _q `i -> 0 `i 12  ]
"53
[; ;circular_queue.c: 53:     {
{
"55
[; ;circular_queue.c: 55:        return 0;
[e ) -> -> 0 `i `a ]
[e $UE 11  ]
"56
[; ;circular_queue.c: 56:     }
}
[e $U 13  ]
"57
[; ;circular_queue.c: 57:     else
[e :U 12 ]
"58
[; ;circular_queue.c: 58:     {
{
"60
[; ;circular_queue.c: 60:         q->values[q->tail] = value;
[e = *U + . *U _q 4 * -> . *U _q 1 `ux -> -> # *U . *U _q 4 `ui `ux _value ]
"61
[; ;circular_queue.c: 61:         q->numEntries++;
[e ++ . *U _q 2 -> -> 1 `i `uc ]
"62
[; ;circular_queue.c: 62:         q->tail = (q->tail + 1) % q->size;
[e = . *U _q 1 -> % + -> . *U _q 1 `i -> 1 `i -> . *U _q 3 `i `uc ]
"63
[; ;circular_queue.c: 63:         return 1;
[e ) -> -> 1 `i `a ]
[e $UE 11  ]
"64
[; ;circular_queue.c: 64:     }
}
[e :U 13 ]
"65
[; ;circular_queue.c: 65: }
[e :UE 11 ]
}
"72
[; ;circular_queue.c: 72: _Bool deQueue(lnQueue_t* q)
[v _deQueue `(a ~T0 @X0 1 ef1`*S7 ]
"73
[; ;circular_queue.c: 73: {
{
[e :U _deQueue ]
"72
[; ;circular_queue.c: 72: _Bool deQueue(lnQueue_t* q)
[v _q `*S7 ~T0 @X0 1 r1 ]
"73
[; ;circular_queue.c: 73: {
[f ]
"75
[; ;circular_queue.c: 75:     if (isQueueEmpty(q))
[e $ ! != -> ( _isQueueEmpty (1 _q `i -> 0 `i 15  ]
"76
[; ;circular_queue.c: 76:     {
{
"78
[; ;circular_queue.c: 78:         return 0;
[e ) -> -> 0 `i `a ]
[e $UE 14  ]
"79
[; ;circular_queue.c: 79:     }
}
[e $U 16  ]
"80
[; ;circular_queue.c: 80:     else
[e :U 15 ]
"81
[; ;circular_queue.c: 81:     {
{
"83
[; ;circular_queue.c: 83:         q->head = (q->head + 1) % q->size;
[e = . *U _q 0 -> % + -> . *U _q 0 `i -> 1 `i -> . *U _q 3 `i `uc ]
"84
[; ;circular_queue.c: 84:         q->numEntries--;
[e -- . *U _q 2 -> -> 1 `i `uc ]
"85
[; ;circular_queue.c: 85:         return 1;
[e ) -> -> 1 `i `a ]
[e $UE 14  ]
"86
[; ;circular_queue.c: 86:     }
}
[e :U 16 ]
"87
[; ;circular_queue.c: 87: }
[e :UE 14 ]
}
"94
[; ;circular_queue.c: 94: lnMessage_t* makeDeepCopy(lnMessage_t* lnMessageOrig)
[v _makeDeepCopy `(*S6 ~T0 @X0 1 ef1`*S6 ]
"95
[; ;circular_queue.c: 95: {
{
[e :U _makeDeepCopy ]
"94
[; ;circular_queue.c: 94: lnMessage_t* makeDeepCopy(lnMessage_t* lnMessageOrig)
[v _lnMessageOrig `*S6 ~T0 @X0 1 r1 ]
"95
[; ;circular_queue.c: 95: {
[f ]
"98
[; ;circular_queue.c: 98:     lnMessage_t* lnMessageCopy;
[v _lnMessageCopy `*S6 ~T0 @X0 1 a ]
"99
[; ;circular_queue.c: 99:     lnMessageCopy = malloc(sizeof(struct lnMessage));
[e = _lnMessageCopy -> ( _malloc (1 -> # `S6 `ui `*S6 ]
"102
[; ;circular_queue.c: 102:     lnMessageCopy->opCode = lnMessageOrig->opCode;
[e = . *U _lnMessageCopy 1 . *U _lnMessageOrig 1 ]
"103
[; ;circular_queue.c: 103:     lnMessageCopy->checksum = lnMessageOrig->checksum;
[e = . *U _lnMessageCopy 2 . *U _lnMessageOrig 2 ]
"104
[; ;circular_queue.c: 104:     lnMessageCopy->size = lnMessageOrig->size;
[e = . *U _lnMessageCopy 0 . *U _lnMessageOrig 0 ]
"109
[; ;circular_queue.c: 109:     lnMessageCopy->lnData = malloc(sizeof(uint8_t) * lnMessageCopy->size);
[e = . *U _lnMessageCopy 3 -> ( _malloc (1 * -> # `uc `ui -> . *U _lnMessageCopy 0 `ui `*uc ]
"110
[; ;circular_queue.c: 110:     for (uint8_t i = 0; i < lnMessageCopy->size; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 21  ]
[e :U 18 ]
"111
[; ;circular_queue.c: 111:     {
{
"112
[; ;circular_queue.c: 112:         lnMessageCopy->lnData[i] = lnMessageOrig->lnData[i];
[e = *U + . *U _lnMessageCopy 3 * -> _i `ux -> -> # *U . *U _lnMessageCopy 3 `ui `ux *U + . *U _lnMessageOrig 3 * -> _i `ux -> -> # *U . *U _lnMessageOrig 3 `ui `ux ]
"113
[; ;circular_queue.c: 113:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 21 ]
[e $ < -> _i `i -> . *U _lnMessageCopy 0 `i 18  ]
[e :U 19 ]
}
"116
[; ;circular_queue.c: 116:     return lnMessageCopy;
[e ) _lnMessageCopy ]
[e $UE 17  ]
"117
[; ;circular_queue.c: 117: }
[e :UE 17 ]
}
